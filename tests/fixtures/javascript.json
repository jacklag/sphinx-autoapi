[
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                20,
                82
            ],
            "filename": "abstracttag.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000002",
                "name": "Thingy",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this.pez": "Thingy#pez"
            }
        },
        "kind": "class",
        "name": "Thingy",
        "longname": "Thingy",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @abstract */",
        "meta": {
            "range": [
                66,
                78
            ],
            "filename": "abstracttag.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000006",
                "name": "this.pez",
                "type": "Literal",
                "value": 2,
                "paramnames": []
            }
        },
        "virtual": true,
        "name": "pez",
        "longname": "Thingy#pez",
        "kind": "member",
        "memberof": "Thingy",
        "scope": "instance"
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                119,
                185
            ],
            "filename": "abstracttag.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000011",
                "name": "OtherThingy",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this.pez": "OtherThingy#pez"
            }
        },
        "kind": "class",
        "name": "OtherThingy",
        "longname": "OtherThingy",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @virtual */",
        "meta": {
            "range": [
                169,
                181
            ],
            "filename": "abstracttag.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000015",
                "name": "this.pez",
                "type": "Literal",
                "value": 2,
                "paramnames": []
            }
        },
        "virtual": true,
        "name": "pez",
        "longname": "OtherThingy#pez",
        "kind": "member",
        "memberof": "OtherThingy",
        "scope": "instance"
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                20,
                220
            ],
            "filename": "accesstag.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000022",
                "name": "Thingy",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "foo": "Thingy~foo",
                "this._bar": "Thingy#_bar",
                "this._gnu": "Thingy#_gnu",
                "this.pez": "Thingy#pez"
            }
        },
        "kind": "class",
        "name": "Thingy",
        "longname": "Thingy",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @access private */",
        "meta": {
            "range": [
                76,
                83
            ],
            "filename": "accesstag.js",
            "lineno": 5,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000026",
                "name": "foo",
                "type": "Literal",
                "value": 0
            }
        },
        "access": "private",
        "name": "foo",
        "longname": "Thingy~foo",
        "kind": "member",
        "memberof": "Thingy",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** @access protected */",
        "meta": {
            "range": [
                119,
                132
            ],
            "filename": "accesstag.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000030",
                "name": "this._bar",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "access": "protected",
        "name": "_bar",
        "longname": "Thingy#_bar",
        "kind": "member",
        "memberof": "Thingy",
        "scope": "instance"
    },
    {
        "comment": "/** @access public */",
        "meta": {
            "range": [
                165,
                178
            ],
            "filename": "accesstag.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000036",
                "name": "this._gnu",
                "type": "Literal",
                "value": 2,
                "paramnames": []
            }
        },
        "access": "public",
        "name": "_gnu",
        "longname": "Thingy#_gnu",
        "kind": "member",
        "memberof": "Thingy",
        "scope": "instance"
    },
    {
        "comment": "/** nothing */",
        "meta": {
            "range": [
                204,
                216
            ],
            "filename": "accesstag.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000042",
                "name": "this.pez",
                "type": "Literal",
                "value": 3,
                "paramnames": []
            }
        },
        "description": "nothing",
        "name": "pez",
        "longname": "Thingy#pez",
        "kind": "member",
        "memberof": "Thingy",
        "scope": "instance"
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                257,
                441
            ],
            "filename": "accesstag.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000047",
                "name": "OtherThingy",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "foo": "OtherThingy~foo",
                "this._bar": "OtherThingy#_bar",
                "this._gnu": "OtherThingy#_gnu",
                "this.pez": "OtherThingy#pez"
            }
        },
        "kind": "class",
        "name": "OtherThingy",
        "longname": "OtherThingy",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @private */",
        "meta": {
            "range": [
                311,
                318
            ],
            "filename": "accesstag.js",
            "lineno": 24,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000051",
                "name": "foo",
                "type": "Literal",
                "value": 0
            }
        },
        "access": "private",
        "name": "foo",
        "longname": "OtherThingy~foo",
        "kind": "member",
        "memberof": "OtherThingy",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** @protected */",
        "meta": {
            "range": [
                347,
                360
            ],
            "filename": "accesstag.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000055",
                "name": "this._bar",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "access": "protected",
        "name": "_bar",
        "longname": "OtherThingy#_bar",
        "kind": "member",
        "memberof": "OtherThingy",
        "scope": "instance"
    },
    {
        "comment": "/** @public */",
        "meta": {
            "range": [
                386,
                399
            ],
            "filename": "accesstag.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000061",
                "name": "this._gnu",
                "type": "Literal",
                "value": 2,
                "paramnames": []
            }
        },
        "access": "public",
        "name": "_gnu",
        "longname": "OtherThingy#_gnu",
        "kind": "member",
        "memberof": "OtherThingy",
        "scope": "instance"
    },
    {
        "comment": "/** nothing */",
        "meta": {
            "range": [
                425,
                437
            ],
            "filename": "accesstag.js",
            "lineno": 33,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000067",
                "name": "this.pez",
                "type": "Literal",
                "value": 3,
                "paramnames": []
            }
        },
        "description": "nothing",
        "name": "pez",
        "longname": "OtherThingy#pez",
        "kind": "member",
        "memberof": "OtherThingy",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                202
            ],
            "filename": "alias.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000075",
                "name": "myObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "myObject",
        "longname": "myObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Give x another name.\n        @alias myObject\n        @namespace\n     */",
        "meta": {
            "range": [
                118,
                182
            ],
            "filename": "alias.js",
            "lineno": 7,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000081",
                "name": "x",
                "type": "ObjectExpression",
                "value": "{\"myProperty\":\"foo\"}"
            }
        },
        "description": "Give x another name.",
        "alias": "myObject",
        "kind": "namespace",
        "name": "myObject",
        "longname": "myObject",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                159,
                176
            ],
            "filename": "alias.js",
            "lineno": 9,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000084",
                "name": "myProperty",
                "type": "Literal",
                "value": "foo"
            }
        },
        "description": "document me",
        "name": "myProperty",
        "longname": "myObject.myProperty",
        "kind": "member",
        "memberof": "myObject",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                94,
                111
            ],
            "filename": "alias2.js",
            "lineno": 6,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000098",
                "name": "myProperty",
                "type": "Literal",
                "value": "foo"
            }
        },
        "description": "document me",
        "name": "myProperty",
        "longname": "ns.Myclass#myProperty",
        "kind": "member",
        "memberof": "ns.Myclass",
        "scope": "instance"
    },
    {
        "comment": "/** @class\n        @alias trackr.CookieManager\n        @param {object} kv\n    */",
        "meta": {
            "range": [
                120,
                192
            ],
            "filename": "alias3.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000108",
                "type": "FunctionExpression",
                "paramnames": [
                    "kv"
                ]
            },
            "vars": {
                "this.value": "trackr.CookieManager#value"
            }
        },
        "kind": "class",
        "alias": "trackr.CookieManager",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "name": "kv"
            }
        ],
        "name": "CookieManager",
        "longname": "trackr.CookieManager",
        "memberof": "trackr",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                170,
                185
            ],
            "filename": "alias3.js",
            "lineno": 9,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000112",
                "name": "this.value",
                "type": "Identifier",
                "value": "kv",
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "value",
        "longname": "trackr.CookieManager#value",
        "kind": "member",
        "memberof": "trackr.CookieManager",
        "scope": "instance"
    },
    {
        "comment": "/** @module jacket */",
        "meta": {
            "filename": "alias4.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "jacket",
        "longname": "module:jacket"
    },
    {
        "comment": "/**\n     * Jacket constructor.\n     *\n     * @constructor\n     * @alias module:jacket\n     */",
        "meta": {
            "range": [
                155,
                175
            ],
            "filename": "alias4.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000125",
                "name": "Jacket",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Jacket constructor.",
        "kind": "class",
        "alias": "module:jacket",
        "name": "module:jacket",
        "longname": "module:jacket",
        "params": []
    },
    {
        "comment": "/**\n * Toaster singleton.\n *\n * @class\n */",
        "meta": {
            "range": [
                47,
                856
            ],
            "filename": "alias5.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000133",
                "name": "Toaster",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Toaster singleton.",
        "kind": "class",
        "name": "Toaster",
        "longname": "Toaster",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                79,
                94
            ],
            "filename": "alias5.js",
            "lineno": 7,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000139",
                "name": "instance",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "instance",
        "longname": "<anonymous>~instance",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                101,
                122
            ],
            "filename": "alias5.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000142",
                "name": "Toaster",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Toaster",
        "longname": "<anonymous>~Toaster",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n     * Toast an item.\n     *\n     * @alias Toaster#toast\n     * @param {BreadyThing} item - The item to toast.\n     */",
        "meta": {
            "range": [
                255,
                298
            ],
            "filename": "alias5.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000146",
                "name": "Toaster.prototype.toast",
                "type": "FunctionExpression",
                "funcscope": "<anonymous>",
                "paramnames": [
                    "item"
                ]
            }
        },
        "description": "Toast an item.",
        "alias": "Toaster#toast",
        "params": [
            {
                "type": {
                    "names": [
                        "BreadyThing"
                    ]
                },
                "description": "The item to toast.",
                "name": "item"
            }
        ],
        "name": "toast",
        "longname": "Toaster#toast",
        "kind": "function",
        "memberof": "Toaster",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Clean the toaster.\n     *\n     * @alias clean\n     * @memberof Toaster\n     * @instance\n     */",
        "meta": {
            "range": [
                416,
                455
            ],
            "filename": "alias5.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000156",
                "name": "Toaster.prototype.clean",
                "type": "FunctionExpression",
                "funcscope": "<anonymous>",
                "paramnames": []
            }
        },
        "description": "Clean the toaster.",
        "alias": "clean",
        "memberof": "Toaster",
        "scope": "instance",
        "name": "clean",
        "longname": "Toaster#clean",
        "kind": "function"
    },
    {
        "comment": "/**\n         * Get the Toaster instance.\n         *\n         * @alias Toaster.getInstance\n         * @returns {Toaster} The Toaster instance.\n         */",
        "meta": {
            "range": [
                641,
                844
            ],
            "filename": "alias5.js",
            "lineno": 35,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000166",
                "name": "getInstance",
                "type": "FunctionExpression"
            },
            "vars": {
                "instance": "Toaster.getInstance~instance"
            }
        },
        "description": "Get the Toaster instance.",
        "alias": "Toaster.getInstance",
        "returns": [
            {
                "type": {
                    "names": [
                        "Toaster"
                    ]
                },
                "description": "The Toaster instance."
            }
        ],
        "name": "getInstance",
        "longname": "Toaster.getInstance",
        "kind": "function",
        "memberof": "Toaster",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                720,
                744
            ],
            "filename": "alias5.js",
            "lineno": 37,
            "columnno": 16,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000175",
                "name": "instance",
                "type": "NewExpression",
                "funcscope": "Toaster.getInstance",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "instance",
        "longname": "Toaster.getInstance~instance",
        "kind": "member",
        "memberof": "Toaster.getInstance",
        "scope": "inner"
    },
    {
        "comment": "/** @module example */",
        "meta": {
            "filename": "alias6.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "example",
        "longname": "module:example"
    },
    {
        "comment": "/** @alias module:example */",
        "meta": {
            "range": [
                68,
                102
            ],
            "filename": "alias6.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000190",
                "name": "Foo",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "alias": "module:example",
        "name": "module:example",
        "longname": "module:example",
        "kind": "class",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                84,
                100
            ],
            "filename": "alias6.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000193",
                "name": "Foo",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "module:example",
        "longname": "module:example",
        "kind": "class",
        "alias": "module:example",
        "params": []
    },
    {
        "comment": "/** @alias module:example */",
        "meta": {
            "range": [
                68,
                102
            ],
            "filename": "alias6.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000190",
                "name": "Foo",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "name": "module:example",
        "longname": "module:example",
        "kind": "class",
        "alias": "module:example"
    },
    {
        "comment": "/** @module foo */",
        "meta": {
            "filename": "aliasexports.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "foo",
        "longname": "module:foo"
    },
    {
        "comment": "/**\n * Bar class.\n *\n * @alias module:foo.Bar\n */",
        "meta": {
            "range": [
                70,
                129
            ],
            "filename": "aliasexports.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000199",
                "name": "Bar",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Bar class.",
        "alias": "module:foo.Bar",
        "name": "Bar",
        "longname": "module:foo.Bar",
        "kind": "class",
        "memberof": "module:foo",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "/** Create a Bar. */",
        "meta": {
            "range": [
                111,
                127
            ],
            "filename": "aliasexports.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000202",
                "name": "Bar",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Create a Bar.",
        "name": "Bar",
        "longname": "module:foo~Bar",
        "kind": "class",
        "memberof": "module:foo",
        "scope": "inner",
        "params": [],
        "undocumented": true
    },
    {
        "comment": "/**\n * Bar class.\n *\n * @alias module:foo.Bar\n */",
        "meta": {
            "range": [
                70,
                129
            ],
            "filename": "aliasexports.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000199",
                "name": "Bar",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "name": "Bar",
        "longname": "module:foo.Bar",
        "kind": "class",
        "classdesc": "Bar class.",
        "alias": "module:foo.Bar",
        "memberof": "module:foo",
        "scope": "static",
        "description": "Create a Bar."
    },
    {
        "comment": "",
        "meta": {
            "range": [
                131,
                148
            ],
            "filename": "aliasexports.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000207",
                "name": "exports.Bar",
                "type": "Identifier",
                "value": "Bar",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Bar",
        "longname": "module:foo.Bar",
        "kind": "member",
        "memberof": "module:foo",
        "scope": "static"
    },
    {
        "comment": "/** @alias <global>.log */",
        "meta": {
            "range": [
                54,
                78
            ],
            "filename": "aliasglobal.js",
            "lineno": 4,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000219",
                "name": "log",
                "type": "FunctionExpression"
            }
        },
        "alias": "<global>.log",
        "name": "log",
        "longname": "log",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n     * Creates a new test object.\n     * @alias Test\n     * @constructor\n     */",
        "meta": {
            "range": [
                112,
                203
            ],
            "filename": "aliasglobal2.js",
            "lineno": 7,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000230",
                "name": "Test",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.name": "Test#name"
            }
        },
        "description": "Creates a new test object.",
        "alias": "Test",
        "kind": "class",
        "name": "Test",
        "longname": "Test",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Document me. */",
        "meta": {
            "range": [
                176,
                196
            ],
            "filename": "aliasglobal2.js",
            "lineno": 9,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000236",
                "name": "this.name",
                "type": "Identifier",
                "value": "testName",
                "paramnames": []
            }
        },
        "description": "Document me.",
        "name": "name",
        "longname": "Test#name",
        "kind": "member",
        "memberof": "Test",
        "scope": "instance"
    },
    {
        "comment": "/** Document me. */",
        "meta": {
            "range": [
                233,
                279
            ],
            "filename": "aliasglobal2.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000242",
                "name": "Test.prototype.run",
                "type": "FunctionExpression",
                "funcscope": "<anonymous>",
                "paramnames": [
                    "message"
                ]
            }
        },
        "description": "Document me.",
        "name": "run",
        "longname": "Test#run",
        "kind": "function",
        "memberof": "Test",
        "scope": "instance"
    },
    {
        "comment": "/** Document me. */",
        "meta": {
            "range": [
                310,
                326
            ],
            "filename": "aliasglobal2.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000252",
                "name": "Test.counter",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": 1,
                "paramnames": []
            }
        },
        "description": "Document me.",
        "name": "counter",
        "longname": "Test.counter",
        "kind": "member",
        "memberof": "Test",
        "scope": "static"
    },
    {
        "comment": "/**\n * @namespace\n */",
        "meta": {
            "range": [
                26,
                32
            ],
            "filename": "aliasresolve.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000260",
                "name": "A",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "kind": "namespace",
        "name": "A",
        "longname": "A",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n     * @namespace\n     * @alias A.F\n     */",
        "meta": {
            "range": [
                111,
                117
            ],
            "filename": "aliasresolve.js",
            "lineno": 11,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000269",
                "name": "f",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "kind": "namespace",
        "alias": "A.F",
        "name": "F",
        "longname": "A.F",
        "memberof": "A",
        "scope": "static",
        "params": []
    },
    {
        "comment": "/**\n     * @return {String}\n     */",
        "meta": {
            "range": [
                164,
                187
            ],
            "filename": "aliasresolve.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000273",
                "name": "f.method",
                "type": "FunctionExpression",
                "funcscope": "<anonymous>",
                "paramnames": []
            }
        },
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "name": "method",
        "longname": "A.F.method",
        "kind": "function",
        "memberof": "A.F",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                194,
                202
            ],
            "filename": "aliasresolve.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000280",
                "name": "ns.F",
                "type": "Identifier",
                "value": "f",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "F",
        "longname": "ns.F",
        "kind": "member",
        "memberof": "ns",
        "scope": "static"
    },
    {
        "comment": "/**\n * @namespace\n */",
        "meta": {
            "range": [
                26,
                32
            ],
            "filename": "aliasresolve2.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000289",
                "name": "A",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "kind": "namespace",
        "name": "A",
        "longname": "A",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @namespace\n * @alias A.F\n */",
        "meta": {
            "range": [
                75,
                81
            ],
            "filename": "aliasresolve2.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000293",
                "name": "f",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "kind": "namespace",
        "alias": "A.F",
        "name": "F",
        "longname": "A.F",
        "memberof": "A",
        "scope": "static",
        "params": []
    },
    {
        "comment": "/**\n     * @return {String}\n     */",
        "meta": {
            "range": [
                144,
                167
            ],
            "filename": "aliasresolve2.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000302",
                "name": "f.method",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "name": "method",
        "longname": "A.F.method",
        "kind": "function",
        "memberof": "A.F",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                174,
                182
            ],
            "filename": "aliasresolve2.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000309",
                "name": "ns.F",
                "type": "Identifier",
                "value": "f",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "F",
        "longname": "ns.F",
        "kind": "member",
        "memberof": "ns",
        "scope": "static"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                14,
                113
            ],
            "filename": "also.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000317",
                "name": "Asset",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this._name": "Asset#_name",
                "this._shape": "Asset#_shape",
                "this._shhhhKeepThisSecret": "Asset#_shhhhKeepThisSecret"
            }
        },
        "kind": "class",
        "name": "Asset",
        "longname": "Asset",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37,
                52
            ],
            "filename": "also.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000321",
                "name": "this._name",
                "type": "Literal",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_name",
        "longname": "Asset#_name",
        "kind": "member",
        "memberof": "Asset",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                74
            ],
            "filename": "also.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000327",
                "name": "this._shape",
                "type": "Literal",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_shape",
        "longname": "Asset#_shape",
        "kind": "member",
        "memberof": "Asset",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                80,
                110
            ],
            "filename": "also.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000333",
                "name": "this._shhhhKeepThisSecret",
                "type": "Literal",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_shhhhKeepThisSecret",
        "longname": "Asset#_shhhhKeepThisSecret",
        "kind": "member",
        "memberof": "Asset",
        "scope": "instance"
    },
    {
        "comment": "/**\n *\n * Set the value of the name property.\n * @param {string} newName\n *\n ",
        "meta": {
            "range": [
                268,
                387
            ],
            "filename": "also.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000339",
                "name": "Asset.prototype.name",
                "type": "FunctionExpression",
                "paramnames": [
                    "newName"
                ]
            }
        },
        "description": "Set the value of the name property.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "newName"
            }
        ],
        "name": "name",
        "longname": "Asset#name",
        "kind": "function",
        "memberof": "Asset",
        "scope": "instance"
    },
    {
        "comment": "\n *\n * Get the value of the name property.\n * @returns {string}\n *\n */",
        "meta": {
            "range": [
                268,
                387
            ],
            "filename": "also.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000339",
                "name": "Asset.prototype.name",
                "type": "FunctionExpression",
                "paramnames": [
                    "newName"
                ]
            },
            "vars": {
                "this._name": "Asset#_name"
            }
        },
        "description": "Get the value of the name property.",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                }
            }
        ],
        "name": "name",
        "longname": "Asset#name",
        "kind": "function",
        "memberof": "Asset",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                330,
                350
            ],
            "filename": "also.js",
            "lineno": 20,
            "columnno": 19,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000352",
                "name": "this._name",
                "type": "Identifier",
                "value": "newName",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_name",
        "longname": "Asset#_name",
        "kind": "member",
        "memberof": "Asset",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Set the value of the shape property.\n * @param {string} newShape\n ",
        "meta": {
            "range": [
                670,
                971
            ],
            "filename": "also.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000363",
                "name": "Asset.prototype.shape",
                "type": "FunctionExpression",
                "paramnames": [
                    "newShape",
                    "mysteryProperty"
                ]
            }
        },
        "description": "Set the value of the shape property.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "newShape"
            }
        ],
        "name": "shape",
        "longname": "Asset#shape",
        "kind": "function",
        "memberof": "Asset",
        "scope": "instance"
    },
    {
        "comment": "\n * Set the value of the shape property, plus some other property.\n * @param {string} newShape\n * @param {string} mysteryProperty\n ",
        "meta": {
            "range": [
                670,
                971
            ],
            "filename": "also.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000363",
                "name": "Asset.prototype.shape",
                "type": "FunctionExpression",
                "paramnames": [
                    "newShape",
                    "mysteryProperty"
                ]
            }
        },
        "description": "Set the value of the shape property, plus some other property.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "newShape"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "mysteryProperty"
            }
        ],
        "name": "shape",
        "longname": "Asset#shape",
        "kind": "function",
        "memberof": "Asset",
        "scope": "instance"
    },
    {
        "comment": "\n * Get the value of the shape property.\n * @returns {string}\n */",
        "meta": {
            "range": [
                670,
                971
            ],
            "filename": "also.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000363",
                "name": "Asset.prototype.shape",
                "type": "FunctionExpression",
                "paramnames": [
                    "newShape",
                    "mysteryProperty"
                ]
            },
            "vars": {
                "this._shape": "Asset#_shape",
                "this._shhhhKeepThisSecret": "Asset#_shhhhKeepThisSecret"
            }
        },
        "description": "Get the value of the shape property.",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                }
            }
        ],
        "name": "shape",
        "longname": "Asset#shape",
        "kind": "function",
        "memberof": "Asset",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                779,
                801
            ],
            "filename": "also.js",
            "lineno": 37,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000379",
                "name": "this._shape",
                "type": "Identifier",
                "value": "newShape",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_shape",
        "longname": "Asset#_shape",
        "kind": "member",
        "memberof": "Asset",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                811,
                854
            ],
            "filename": "also.js",
            "lineno": 38,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000385",
                "name": "this._shhhhKeepThisSecret",
                "type": "Identifier",
                "value": "mysteryProperty",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_shhhhKeepThisSecret",
        "longname": "Asset#_shhhhKeepThisSecret",
        "kind": "member",
        "memberof": "Asset",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                895,
                917
            ],
            "filename": "also.js",
            "lineno": 41,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000394",
                "name": "this._shape",
                "type": "Identifier",
                "value": "newShape",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_shape",
        "longname": "Asset#_shape",
        "kind": "member",
        "memberof": "Asset",
        "scope": "instance"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                14,
                62
            ],
            "filename": "also2.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000406",
                "name": "BowlingAlley",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this._lanes": "BowlingAlley#_lanes"
            }
        },
        "kind": "class",
        "name": "BowlingAlley",
        "longname": "BowlingAlley",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                44,
                59
            ],
            "filename": "also2.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000410",
                "name": "this._lanes",
                "type": "Literal",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_lanes",
        "longname": "BowlingAlley#_lanes",
        "kind": "member",
        "memberof": "BowlingAlley",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Add a lane to the bowling alley.\n * ",
        "meta": {
            "range": [
                235,
                358
            ],
            "filename": "also2.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000416",
                "name": "BowlingAlley.prototype.addLanes",
                "type": "FunctionExpression",
                "value": "addLanes",
                "paramnames": [
                    "lanes"
                ]
            }
        },
        "description": "Add a lane to the bowling alley.",
        "name": "addLanes",
        "longname": "BowlingAlley#addLanes",
        "kind": "function",
        "memberof": "BowlingAlley",
        "scope": "instance"
    },
    {
        "comment": "\n * Add the specified number of lanes to the bowling alley.\n * @param {number} [lanes=1] - The number of lanes to add.\n */",
        "meta": {
            "range": [
                235,
                358
            ],
            "filename": "also2.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000416",
                "name": "BowlingAlley.prototype.addLanes",
                "type": "FunctionExpression",
                "value": "addLanes",
                "paramnames": [
                    "lanes"
                ]
            },
            "vars": {
                "this._lanes": "BowlingAlley#_lanes"
            }
        },
        "description": "Add the specified number of lanes to the bowling alley.",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 1,
                "description": "The number of lanes to add.",
                "name": "lanes"
            }
        ],
        "name": "addLanes",
        "longname": "BowlingAlley#addLanes",
        "kind": "function",
        "memberof": "BowlingAlley",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                300,
                355
            ],
            "filename": "also2.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000427",
                "name": "this._lanes",
                "type": "ConditionalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_lanes",
        "longname": "BowlingAlley#_lanes",
        "kind": "member",
        "memberof": "BowlingAlley",
        "scope": "instance"
    },
    {
        "comment": "/** @module test */",
        "meta": {
            "filename": "anonymousclass.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "test",
        "longname": "module:test"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39,
                326
            ],
            "filename": "anonymousclass.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000440",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "undocumented": true,
        "name": "module:test",
        "longname": "module:test",
        "kind": "class"
    },
    {
        "comment": "/** Test class */",
        "meta": {
            "range": [
                54,
                326
            ],
            "filename": "anonymousclass.js",
            "lineno": 4,
            "columnno": 15,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000441",
                "name": "module.exports",
                "type": "ClassDeclaration",
                "paramnames": [
                    "foo"
                ]
            }
        },
        "classdesc": "Test class",
        "name": "module:test",
        "longname": "module:test",
        "kind": "class",
        "undocumented": true
    },
    {
        "comment": "/**\n     * Test constructor\n     * @param {string} foo - The foo parameter\n     */",
        "meta": {
            "range": [
                153,
                228
            ],
            "filename": "anonymousclass.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000443",
                "name": "module.exports",
                "type": "MethodDefinition",
                "paramnames": [
                    "foo"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Test constructor",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The foo parameter",
                "name": "foo"
            }
        ],
        "name": "module:test",
        "longname": "module:test",
        "kind": "class",
        "undocumented": true
    },
    {
        "comment": "/** Test class */",
        "meta": {
            "range": [
                54,
                326
            ],
            "filename": "anonymousclass.js",
            "lineno": 4,
            "columnno": 15,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000441",
                "name": "module.exports",
                "type": "ClassDeclaration",
                "paramnames": [
                    "foo"
                ]
            }
        },
        "name": "module:test",
        "longname": "module:test",
        "kind": "class",
        "classdesc": "Test class",
        "description": "Test constructor",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The foo parameter",
                "name": "foo"
            }
        ]
    },
    {
        "comment": "/** Test member */",
        "meta": {
            "range": [
                207,
                221
            ],
            "filename": "anonymousclass.js",
            "lineno": 11,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000449",
                "name": "this.foo",
                "type": "Identifier",
                "value": "foo",
                "paramnames": []
            }
        },
        "description": "Test member",
        "name": "foo",
        "longname": "module:test#foo",
        "kind": "member",
        "memberof": "module:test",
        "scope": "instance"
    },
    {
        "comment": "/** Test method */",
        "meta": {
            "range": [
                257,
                266
            ],
            "filename": "anonymousclass.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000454",
                "name": "test",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Test method",
        "name": "test",
        "longname": "module:test#test",
        "kind": "function",
        "scope": "instance",
        "memberof": "module:test",
        "params": []
    },
    {
        "comment": "/** Test static method */",
        "meta": {
            "range": [
                302,
                324
            ],
            "filename": "anonymousclass.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000458",
                "name": "staticTest",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Test static method",
        "name": "staticTest",
        "longname": "module:test.staticTest",
        "kind": "function",
        "scope": "static",
        "memberof": "module:test",
        "params": []
    },
    {
        "comment": "/** @module foo */",
        "meta": {
            "filename": "anonymousclassparam.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "foo",
        "longname": "module:foo"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20,
                85
            ],
            "filename": "anonymousclassparam.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000464",
                "name": "exports.Foo",
                "type": "VariableDeclaration"
            }
        },
        "undocumented": true,
        "name": "Foo",
        "longname": "module:foo.Foo",
        "kind": "constant",
        "memberof": "module:foo",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                33,
                84
            ],
            "filename": "anonymousclassparam.js",
            "lineno": 3,
            "columnno": 13,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000466",
                "name": "Foo",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Foo",
        "longname": "module:foo~Foo",
        "kind": "constant",
        "scope": "inner",
        "memberof": "module:foo",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                67,
                81
            ],
            "filename": "anonymousclassparam.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000476",
                "name": "qux",
                "type": "ClassProperty"
            }
        },
        "undocumented": true,
        "name": "qux",
        "longname": "<anonymous>#qux",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Increment a number by 1.\n *\n * @param {number} n - The number to increment.\n */",
        "meta": {
            "range": [
                91,
                113
            ],
            "filename": "arrowfunction.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000482",
                "name": "increment",
                "type": "ArrowFunctionExpression"
            }
        },
        "description": "Increment a number by 1.",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number to increment.",
                "name": "n"
            }
        ],
        "name": "increment",
        "longname": "increment",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Print a value to the console.\n */",
        "meta": {
            "range": [
                161,
                211
            ],
            "filename": "arrowfunction.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000490",
                "name": "print",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "val": "print.val"
            }
        },
        "description": "Print a value to the console.",
        "name": "print",
        "longname": "print",
        "kind": "function",
        "scope": "global",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "",
                "name": "val"
            }
        ]
    },
    {
        "comment": "/** @type {*} */",
        "meta": {
            "range": [
                187,
                190
            ],
            "filename": "arrowfunction.js",
            "lineno": 11,
            "columnno": 30,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000493",
                "name": "val",
                "type": "Identifier"
            }
        },
        "type": {
            "names": [
                "*"
            ]
        },
        "name": "val",
        "longname": "print.val",
        "kind": "param",
        "memberof": "print",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "/**\n * Create a class with a `name` property.\n */",
        "meta": {
            "range": [
                268,
                404
            ],
            "filename": "arrowfunction.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000500",
                "name": "createClass",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "undefined": null
            }
        },
        "description": "Create a class with a `name` property.",
        "name": "createClass",
        "longname": "createClass",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                300,
                345
            ],
            "filename": "arrowfunction.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000505",
                "name": "name",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "name",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                351,
                402
            ],
            "filename": "arrowfunction.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000513",
                "name": "name",
                "type": "MethodDefinition",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "name",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                377,
                395
            ],
            "filename": "arrowfunction.js",
            "lineno": 22,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000519",
                "name": "this._name",
                "type": "Identifier",
                "value": "value",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_name",
        "longname": "<anonymous>#_name",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                149
            ],
            "filename": "asyncfunction.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000526",
                "name": "resolveAfter2Seconds",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "resolveAfter2Seconds",
        "longname": "resolveAfter2Seconds",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Add a number.\n * @param {number} x - The number to add.\n */",
        "meta": {
            "range": [
                218,
                353
            ],
            "filename": "asyncfunction.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000546",
                "name": "add",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            },
            "vars": {
                "a": "add~a",
                "b": "add~b"
            }
        },
        "description": "Add a number.",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number to add.",
                "name": "x"
            }
        ],
        "name": "add",
        "longname": "add",
        "kind": "function",
        "scope": "global",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                250,
                278
            ],
            "filename": "asyncfunction.js",
            "lineno": 14,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000551",
                "name": "a",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "a",
        "longname": "add~a",
        "kind": "member",
        "memberof": "add",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                288,
                316
            ],
            "filename": "asyncfunction.js",
            "lineno": 15,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000557",
                "name": "b",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "b",
        "longname": "add~b",
        "kind": "member",
        "memberof": "add",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Subtract a number.\n * @param {number} x - The number to subtract.\n */",
        "meta": {
            "range": [
                436,
                587
            ],
            "filename": "asyncfunction.js",
            "lineno": 23,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000571",
                "name": "subtract",
                "type": "FunctionExpression",
                "value": "subtract"
            },
            "vars": {
                "a": "subtract~a",
                "b": "subtract~b"
            }
        },
        "description": "Subtract a number.",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number to subtract.",
                "name": "x"
            }
        ],
        "name": "subtract",
        "longname": "subtract",
        "kind": "function",
        "scope": "global",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                484,
                512
            ],
            "filename": "asyncfunction.js",
            "lineno": 24,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000578",
                "name": "a",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "a",
        "longname": "subtract~a",
        "kind": "member",
        "memberof": "subtract",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                522,
                550
            ],
            "filename": "asyncfunction.js",
            "lineno": 25,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000584",
                "name": "b",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "b",
        "longname": "subtract~b",
        "kind": "member",
        "memberof": "subtract",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Adder class.\n */",
        "meta": {
            "range": [
                613,
                805
            ],
            "filename": "asyncfunction.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000597",
                "name": "Adder",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Adder class.",
        "name": "Adder",
        "longname": "Adder",
        "kind": "class",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "/**\n     * Construct an Adder instance.\n     */",
        "meta": {
            "range": [
                683,
                699
            ],
            "filename": "asyncfunction.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000600",
                "name": "Adder",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Construct an Adder instance.",
        "name": "Adder",
        "longname": "Adder",
        "kind": "class",
        "scope": "global",
        "params": [],
        "undocumented": true
    },
    {
        "comment": "/**\n * Adder class.\n */",
        "meta": {
            "range": [
                613,
                805
            ],
            "filename": "asyncfunction.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000597",
                "name": "Adder",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "name": "Adder",
        "longname": "Adder",
        "kind": "class",
        "classdesc": "Adder class.",
        "scope": "global",
        "description": "Construct an Adder instance."
    },
    {
        "comment": "/**\n     * Add a number.\n     * @param {number} x - The number to add.\n     */",
        "meta": {
            "range": [
                788,
                803
            ],
            "filename": "asyncfunction.js",
            "lineno": 42,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000604",
                "name": "Adder#add",
                "type": "MethodDefinition",
                "paramnames": [
                    "x"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Add a number.",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number to add.",
                "name": "x"
            }
        ],
        "name": "add",
        "longname": "Adder#add",
        "kind": "function",
        "memberof": "Adder",
        "scope": "instance",
        "async": true
    },
    {
        "comment": "/**\n * Asynchronous function.\n *\n * @function foo\n * @async\n */",
        "meta": {
            "filename": "asynctag.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Asynchronous function.",
        "kind": "function",
        "name": "foo",
        "async": true,
        "longname": "foo",
        "scope": "global"
    },
    {
        "comment": "/**\n * Parent interface.\n * @interface\n */",
        "meta": {
            "range": [
                43,
                67
            ],
            "filename": "augmentall.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000613",
                "name": "Connection",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Parent interface.",
        "kind": "interface",
        "name": "Connection",
        "longname": "Connection",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Open the connection.\n */",
        "meta": {
            "range": [
                101,
                142
            ],
            "filename": "augmentall.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000617",
                "name": "Connection.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Open the connection.",
        "name": "open",
        "longname": "Connection#open",
        "kind": "function",
        "memberof": "Connection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Child class.\n * @class\n * @implements {Connection}\n */",
        "meta": {
            "range": [
                207,
                227
            ],
            "filename": "augmentall.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000625",
                "name": "Socket",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Child class.",
        "kind": "class",
        "implements": [
            "Connection"
        ],
        "name": "Socket",
        "longname": "Socket",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @inheritdoc */",
        "meta": {
            "range": [
                248,
                285
            ],
            "filename": "augmentall.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000629",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "inheritdoc": "",
        "name": "open",
        "longname": "Socket#open",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "ignore": true
    },
    {
        "comment": "/**\n * Extension of child class.\n * @class\n * @extends {Socket}\n */",
        "meta": {
            "range": [
                356,
                385
            ],
            "filename": "augmentall.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000637",
                "name": "EncryptedSocket",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Extension of child class.",
        "kind": "class",
        "augments": [
            "Socket"
        ],
        "name": "EncryptedSocket",
        "longname": "EncryptedSocket",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Parent interface.\n * @interface\n */",
        "meta": {
            "range": [
                43,
                67
            ],
            "filename": "augmentall2.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000642",
                "name": "Connection",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Parent interface.",
        "kind": "interface",
        "name": "Connection",
        "longname": "Connection",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Open the connection.\n */",
        "meta": {
            "range": [
                101,
                142
            ],
            "filename": "augmentall2.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000646",
                "name": "Connection.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Open the connection.",
        "name": "open",
        "longname": "Connection#open",
        "kind": "function",
        "memberof": "Connection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Child interface.\n * @interface\n * @extends {Connection}\n */",
        "meta": {
            "range": [
                212,
                232
            ],
            "filename": "augmentall2.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000654",
                "name": "Socket",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Child interface.",
        "kind": "interface",
        "augments": [
            "Connection"
        ],
        "name": "Socket",
        "longname": "Socket",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Implementation of child interface.\n * @class\n * @implements {Socket}\n */",
        "meta": {
            "range": [
                314,
                343
            ],
            "filename": "augmentall2.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000657",
                "name": "EncryptedSocket",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Implementation of child interface.",
        "kind": "class",
        "implements": [
            "Socket"
        ],
        "name": "EncryptedSocket",
        "longname": "EncryptedSocket",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @inheritdoc */",
        "meta": {
            "range": [
                364,
                410
            ],
            "filename": "augmentall2.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000661",
                "name": "EncryptedSocket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "inheritdoc": "",
        "name": "open",
        "longname": "EncryptedSocket#open",
        "kind": "function",
        "memberof": "EncryptedSocket",
        "scope": "instance",
        "ignore": true
    },
    {
        "comment": "/**\n * @constructor\n */",
        "meta": {
            "range": [
                24,
                91
            ],
            "filename": "augmentstag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000671",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this.prop1": "Foo#prop1"
            }
        },
        "kind": "class",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** First property */",
        "meta": {
            "range": [
                71,
                88
            ],
            "filename": "augmentstag.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000675",
                "name": "this.prop1",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "description": "First property",
        "name": "prop1",
        "longname": "Foo#prop1",
        "kind": "member",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Second property\n * @type {String}\n */",
        "meta": {
            "range": [
                138,
                174
            ],
            "filename": "augmentstag.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000681",
                "name": "Foo.prototype.prop2",
                "type": "Literal",
                "value": "parent prop2",
                "paramnames": []
            }
        },
        "description": "Second property",
        "type": {
            "names": [
                "String"
            ]
        },
        "name": "prop2",
        "longname": "Foo#prop2",
        "kind": "member",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "/**\n * First parent method.\n */",
        "meta": {
            "range": [
                209,
                246
            ],
            "filename": "augmentstag.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000689",
                "name": "Foo.prototype.method1",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "First parent method.",
        "name": "method1",
        "longname": "Foo#method1",
        "kind": "function",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Second parent method.\n */",
        "meta": {
            "range": [
                282,
                319
            ],
            "filename": "augmentstag.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000698",
                "name": "Foo.prototype.method2",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Second parent method.",
        "name": "method2",
        "longname": "Foo#method2",
        "kind": "function",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Third parent method.\n */",
        "meta": {
            "range": [
                354,
                391
            ],
            "filename": "augmentstag.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000707",
                "name": "Foo.prototype.method3",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Third parent method.",
        "name": "method3",
        "longname": "Foo#method3",
        "kind": "function",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @constructor\n * @extends Foo\n */",
        "meta": {
            "range": [
                434,
                498
            ],
            "filename": "augmentstag.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000715",
                "name": "Bar",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this.prop3": "Bar#prop3"
            }
        },
        "kind": "class",
        "augments": [
            "Foo"
        ],
        "name": "Bar",
        "longname": "Bar",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Third prop **/",
        "meta": {
            "range": [
                478,
                495
            ],
            "filename": "augmentstag.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000719",
                "name": "this.prop3",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "description": "Third prop",
        "name": "prop3",
        "longname": "Bar#prop3",
        "kind": "member",
        "memberof": "Bar",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Second child method.\n */",
        "meta": {
            "range": [
                532,
                569
            ],
            "filename": "augmentstag.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000725",
                "name": "Bar.prototype.method2",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Second child method.",
        "name": "method2",
        "longname": "Bar#method2",
        "kind": "function",
        "memberof": "Bar",
        "scope": "instance",
        "overrides": "Foo#method2"
    },
    {
        "comment": "/**\n * @constructor\n * @extends {Bar}\n */",
        "meta": {
            "range": [
                614,
                682
            ],
            "filename": "augmentstag.js",
            "lineno": 48,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000733",
                "name": "Baz",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this.prop1": "Baz#prop1"
            }
        },
        "kind": "class",
        "augments": [
            "Bar"
        ],
        "name": "Baz",
        "longname": "Baz",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Override prop1 */",
        "meta": {
            "range": [
                661,
                679
            ],
            "filename": "augmentstag.js",
            "lineno": 50,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000737",
                "name": "this.prop1",
                "type": "Literal",
                "value": "new",
                "paramnames": []
            }
        },
        "description": "Override prop1",
        "name": "prop1",
        "longname": "Baz#prop1",
        "kind": "member",
        "memberof": "Baz",
        "scope": "instance",
        "overrides": "Bar#prop1"
    },
    {
        "comment": "/**\n * Third grandchild method.\n */",
        "meta": {
            "range": [
                720,
                757
            ],
            "filename": "augmentstag.js",
            "lineno": 56,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000743",
                "name": "Baz.prototype.method3",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Third grandchild method.",
        "name": "method3",
        "longname": "Baz#method3",
        "kind": "function",
        "memberof": "Baz",
        "scope": "instance",
        "overrides": "Bar#method3"
    },
    {
        "comment": "/**\n * @constructor\n * @extends UndocumentedThing\n */",
        "meta": {
            "range": [
                122,
                139
            ],
            "filename": "augmentstag2.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000753",
                "name": "Qux",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "augments": [
            "UndocumentedThing"
        ],
        "name": "Qux",
        "longname": "Qux",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                87,
                105
            ],
            "filename": "augmentstag3.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000758",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** A method. */",
        "meta": {
            "range": [
                123,
                161
            ],
            "filename": "augmentstag3.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000762",
                "name": "Foo.prototype.method1",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "A method.",
        "name": "method1",
        "longname": "Foo#method1",
        "kind": "function",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                178,
                196
            ],
            "filename": "augmentstag3.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000770",
                "name": "Bar",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "name": "Bar",
        "longname": "Bar",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Another method. */",
        "meta": {
            "range": [
                220,
                258
            ],
            "filename": "augmentstag3.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000774",
                "name": "Bar.prototype.method2",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Another method.",
        "name": "method2",
        "longname": "Bar#method2",
        "kind": "function",
        "memberof": "Bar",
        "scope": "instance",
        "overrides": "Foo#method2"
    },
    {
        "comment": "/** @class\n * @augments Foo\n * @augments Bar */",
        "meta": {
            "range": [
                308,
                329
            ],
            "filename": "augmentstag3.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000782",
                "name": "FooBar",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "augments": [
            "Foo",
            "Bar"
        ],
        "name": "FooBar",
        "longname": "FooBar",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @constructor\n * @classdesc Base class\n */",
        "meta": {
            "range": [
                101,
                321
            ],
            "filename": "augmentstag4.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000788",
                "name": "Base",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.test1": "Base#test1",
                "this.test2": "Base#test2",
                "this.test3": "Base#test3",
                "": null
            }
        },
        "kind": "class",
        "classdesc": "Base class",
        "name": "Base",
        "longname": "Base",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** member */",
        "meta": {
            "range": [
                143,
                162
            ],
            "filename": "augmentstag4.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000793",
                "name": "this.test1",
                "type": "Literal",
                "value": "base",
                "paramnames": []
            }
        },
        "description": "member",
        "name": "test1",
        "longname": "Base#test1",
        "kind": "member",
        "memberof": "Base",
        "scope": "instance"
    },
    {
        "comment": "/** another member */",
        "meta": {
            "range": [
                194,
                211
            ],
            "filename": "augmentstag4.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000799",
                "name": "this.test2",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "description": "another member",
        "name": "test2",
        "longname": "Base#test2",
        "kind": "member",
        "memberof": "Base",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * explicitly named member\n     * @function Base#test3\n     */",
        "meta": {
            "filename": "augmentstag4.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "explicitly named member",
        "kind": "function",
        "name": "test3",
        "memberof": "Base",
        "longname": "Base#test3",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                292,
                318
            ],
            "filename": "augmentstag4.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000805",
                "name": "this.test3",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "test3",
        "longname": "Base#test3",
        "kind": "function",
        "memberof": "Base",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @constructor\n * @extends Base\n * @classdesc Extension of Base\n */",
        "meta": {
            "range": [
                401,
                453
            ],
            "filename": "augmentstag4.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000812",
                "name": "Derived",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.test1": "Derived#test1"
            }
        },
        "kind": "class",
        "augments": [
            "Base"
        ],
        "classdesc": "Extension of Base",
        "name": "Derived",
        "longname": "Derived",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                428,
                450
            ],
            "filename": "augmentstag4.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000817",
                "name": "this.test1",
                "type": "Literal",
                "value": "derived",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "test1",
        "longname": "Derived#test1",
        "kind": "member",
        "memberof": "Derived",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29,
                48
            ],
            "filename": "augmentstag5.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000826",
                "name": "Base0",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Base0",
        "longname": "Base0",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Description for {@link Base0#methodOfBaseCommon}. */",
        "meta": {
            "range": [
                156,
                189
            ],
            "filename": "augmentstag5.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000835",
                "name": "methodOfBaseCommon",
                "type": "FunctionExpression"
            }
        },
        "description": "Description for {@link Base0#methodOfBaseCommon}.",
        "name": "methodOfBaseCommon",
        "longname": "Base0#methodOfBaseCommon",
        "kind": "function",
        "memberof": "Base0",
        "scope": "instance"
    },
    {
        "comment": "/** Description for {@link Base0#methodOfBase0}. */",
        "meta": {
            "range": [
                252,
                280
            ],
            "filename": "augmentstag5.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000838",
                "name": "methodOfBase0",
                "type": "FunctionExpression"
            }
        },
        "description": "Description for {@link Base0#methodOfBase0}.",
        "name": "methodOfBase0",
        "longname": "Base0#methodOfBase0",
        "kind": "function",
        "memberof": "Base0",
        "scope": "instance"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                299,
                318
            ],
            "filename": "augmentstag5.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000841",
                "name": "Base1",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "name": "Base1",
        "longname": "Base1",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Description for {@link Base1#methodOfBaseCommon}. */",
        "meta": {
            "range": [
                426,
                459
            ],
            "filename": "augmentstag5.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000850",
                "name": "methodOfBaseCommon",
                "type": "FunctionExpression"
            }
        },
        "description": "Description for {@link Base1#methodOfBaseCommon}.",
        "name": "methodOfBaseCommon",
        "longname": "Base1#methodOfBaseCommon",
        "kind": "function",
        "memberof": "Base1",
        "scope": "instance"
    },
    {
        "comment": "/** Description for {@link Base1#methodOfBase1}. */",
        "meta": {
            "range": [
                522,
                550
            ],
            "filename": "augmentstag5.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000853",
                "name": "methodOfBase1",
                "type": "FunctionExpression"
            }
        },
        "description": "Description for {@link Base1#methodOfBase1}.",
        "name": "methodOfBase1",
        "longname": "Base1#methodOfBase1",
        "kind": "function",
        "memberof": "Base1",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @class\n * @augments Base0\n * @augments Base1\n */",
        "meta": {
            "range": [
                611,
                630
            ],
            "filename": "augmentstag5.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000856",
                "name": "Class",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "augments": [
            "Base0",
            "Base1"
        ],
        "name": "Class",
        "longname": "Class",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @interface */",
        "meta": {
            "range": [
                33,
                58
            ],
            "filename": "augmentstag6.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000906",
                "name": "IConnection",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "interface",
        "name": "IConnection",
        "longname": "IConnection",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Open the connection. */",
        "meta": {
            "range": [
                88,
                130
            ],
            "filename": "augmentstag6.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000910",
                "name": "IConnection.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Open the connection.",
        "name": "open",
        "longname": "IConnection#open",
        "kind": "function",
        "memberof": "IConnection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @interface\n * @extends {IConnection}\n */",
        "meta": {
            "range": [
                181,
                214
            ],
            "filename": "augmentstag6.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000918",
                "name": "IClosableConnection",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "interface",
        "augments": [
            "IConnection"
        ],
        "name": "IClosableConnection",
        "longname": "IClosableConnection",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Close the connection. */",
        "meta": {
            "range": [
                245,
                296
            ],
            "filename": "augmentstag6.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000922",
                "name": "IClosableConnection.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Close the connection.",
        "name": "close",
        "longname": "IClosableConnection#close",
        "kind": "function",
        "memberof": "IClosableConnection",
        "scope": "instance"
    },
    {
        "comment": "/** @constructor\n    @author Michael Mathews <micmath@gmail.com>\n*/",
        "meta": {
            "range": [
                68,
                89
            ],
            "filename": "authortag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000932",
                "name": "Thingy",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "author": [
            "Michael Mathews <micmath@gmail.com>"
        ],
        "name": "Thingy",
        "longname": "Thingy",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @author John Doe <john.doe@gmail.com>\n * @author Jane Doe <jane.doe@gmail.com> */",
        "meta": {
            "range": [
                177,
                199
            ],
            "filename": "authortag.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000935",
                "name": "Thingy2",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "author": [
            "John Doe <john.doe@gmail.com>",
            "Jane Doe <jane.doe@gmail.com>"
        ],
        "name": "Thingy2",
        "longname": "Thingy2",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @namespace\n    @borrows trstr as trim\n*/",
        "meta": {
            "range": [
                49,
                77
            ],
            "filename": "borrowstag.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000941",
                "name": "util",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "kind": "namespace",
        "name": "util",
        "longname": "util",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                75
            ],
            "filename": "borrowstag.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000944",
                "name": "trim",
                "type": "Identifier",
                "value": "trstr"
            }
        },
        "undocumented": true,
        "name": "trim",
        "longname": "util.trim",
        "kind": "member",
        "memberof": "util",
        "scope": "static"
    },
    {
        "comment": "/**\n    Remove whitespace from around a string.\n    @param {string} str\n */",
        "meta": {
            "range": [
                156,
                179
            ],
            "filename": "borrowstag.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000946",
                "name": "trstr",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            }
        },
        "description": "Remove whitespace from around a string.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "str"
            }
        ],
        "name": "trstr",
        "longname": "trstr",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/** @namespace\n    @borrows rtrim\n*/",
        "meta": {
            "range": [
                41,
                72
            ],
            "filename": "borrowstag2.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000953",
                "name": "str",
                "type": "ObjectExpression",
                "value": "{\"rtrim\":\"\"}"
            }
        },
        "kind": "namespace",
        "name": "str",
        "longname": "str",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                53,
                70
            ],
            "filename": "borrowstag2.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000956",
                "name": "rtrim",
                "type": "MemberExpression",
                "value": "util.rtrim"
            }
        },
        "undocumented": true,
        "name": "rtrim",
        "longname": "str.rtrim",
        "kind": "member",
        "memberof": "str",
        "scope": "static"
    },
    {
        "comment": "/** @namespace\n    @borrows rtrim\n*/",
        "meta": {
            "range": [
                116,
                143
            ],
            "filename": "borrowstag2.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000961",
                "name": "util",
                "type": "ObjectExpression",
                "value": "{\"rtrim\":\"\"}"
            }
        },
        "kind": "namespace",
        "name": "util",
        "longname": "util",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                129,
                141
            ],
            "filename": "borrowstag2.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000964",
                "name": "rtrim",
                "type": "Identifier",
                "value": "rtrim"
            }
        },
        "undocumented": true,
        "name": "rtrim",
        "longname": "util.rtrim",
        "kind": "member",
        "memberof": "util",
        "scope": "static"
    },
    {
        "comment": "/**\n    Remove whitespace from the right side of a string.\n    @param {string} str\n */",
        "meta": {
            "range": [
                233,
                256
            ],
            "filename": "borrowstag2.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000966",
                "name": "rtrim",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            }
        },
        "description": "Remove whitespace from the right side of a string.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "str"
            }
        ],
        "name": "rtrim",
        "longname": "rtrim",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Remove whitespace from around a string.\n * @param {string} str\n */",
        "meta": {
            "range": [
                89,
                111
            ],
            "filename": "borrowstag3.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000974",
                "name": "trstr",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            }
        },
        "description": "Remove whitespace from around a string.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "str"
            }
        ],
        "name": "trstr",
        "longname": "trstr",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                117,
                197
            ],
            "filename": "borrowstag3.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000979",
                "name": "_util",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "_util",
        "longname": "_util",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Hidden utility function. */",
        "meta": {
            "range": [
                167,
                195
            ],
            "filename": "borrowstag3.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000982",
                "name": "\"hidden util\"",
                "type": "FunctionExpression"
            }
        },
        "description": "Hidden utility function.",
        "name": "\"hidden util\"",
        "longname": "_util.\"hidden util\"",
        "kind": "function",
        "memberof": "_util",
        "scope": "static"
    },
    {
        "comment": "/**\n * @namespace\n * @borrows trstr as trim string\n * @borrows util.hidden util as hidden\n */",
        "meta": {
            "range": [
                298,
                367
            ],
            "filename": "borrowstag3.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000986",
                "name": "util",
                "type": "ObjectExpression",
                "value": "{\"hidden\":\"\",\"undefined\":\"\"}"
            }
        },
        "kind": "namespace",
        "name": "util",
        "longname": "util",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                311,
                339
            ],
            "filename": "borrowstag3.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000989",
                "name": "hidden",
                "type": "MemberExpression",
                "value": "_util['trim string']"
            }
        },
        "undocumented": true,
        "name": "hidden",
        "longname": "util.hidden",
        "kind": "member",
        "memberof": "util",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                345,
                365
            ],
            "filename": "borrowstag3.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000993",
                "name": "\"trim string\"",
                "type": "Identifier",
                "value": "trstr"
            }
        },
        "undocumented": true,
        "name": "\"trim string\"",
        "longname": "util.\"trim string\"",
        "kind": "member",
        "memberof": "util",
        "scope": "static"
    },
    {
        "comment": "/**\n * @callback requestResponseCallback\n * @param {number} responseCode\n * @param {string} responseText\n */",
        "meta": {
            "filename": "callbacktag.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "typedef",
        "name": "requestResponseCallback",
        "type": {
            "names": [
                "function"
            ]
        },
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "responseCode"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "responseText"
            }
        ],
        "longname": "requestResponseCallback",
        "scope": "global"
    },
    {
        "comment": "/**\n * @callback {(object|string)} wrongTypeCallback\n */",
        "meta": {
            "filename": "callbacktag.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "typedef",
        "name": "wrongTypeCallback",
        "type": {
            "names": [
                "function"
            ]
        },
        "longname": "wrongTypeCallback",
        "scope": "global"
    },
    {
        "comment": "/**\n * @param {requestResponseCallback} cb\n */",
        "meta": {
            "range": [
                47,
                82
            ],
            "filename": "callbacktag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000997",
                "name": "makeSpecialRequest",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "cb"
                ]
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "requestResponseCallback"
                    ]
                },
                "name": "cb"
            }
        ],
        "name": "makeSpecialRequest",
        "longname": "makeSpecialRequest",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * @param {wrongTypeCallback} cb\n */",
        "meta": {
            "range": [
                125,
                165
            ],
            "filename": "callbacktag.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001001",
                "name": "makeExtraSpecialRequest",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "cb"
                ]
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "wrongTypeCallback"
                    ]
                },
                "name": "cb"
            }
        ],
        "name": "makeExtraSpecialRequest",
        "longname": "makeExtraSpecialRequest",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Asdf.\n * @class\n * @classdesc A description of the class.\n */",
        "meta": {
            "range": [
                84,
                101
            ],
            "filename": "classdesctag.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001009",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Asdf.",
        "kind": "class",
        "classdesc": "A description of the class.",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @classdesc A description of the class.\n * @class Bar\n * @constructor\n */",
        "meta": {
            "filename": "classdesctag.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "classdesc": "A description of the class.",
        "kind": "class",
        "name": "Bar",
        "longname": "Bar",
        "scope": "global"
    },
    {
        "comment": "/**\n * The Baz class.\n * @class\n * Description of the Baz class.\n */",
        "meta": {
            "range": [
                253,
                270
            ],
            "filename": "classdesctag.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001012",
                "name": "Baz",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "The Baz class.",
        "kind": "class",
        "classdesc": "Description of the Baz class.",
        "name": "Baz",
        "longname": "Baz",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Sample class. */",
        "meta": {
            "range": [
                21,
                171
            ],
            "filename": "classproperties.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001017",
                "name": "A",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Sample class.",
        "name": "A",
        "longname": "A",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/** Public property. */",
        "meta": {
            "range": [
                63,
                69
            ],
            "filename": "classproperties.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001020",
                "name": "b",
                "type": "ClassProperty"
            }
        },
        "description": "Public property.",
        "name": "b",
        "longname": "A#b",
        "kind": "member",
        "memberof": "A",
        "scope": "instance"
    },
    {
        "comment": "/** Private property. */",
        "meta": {
            "range": [
                104,
                111
            ],
            "filename": "classproperties.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001022",
                "name": "c",
                "type": "ClassPrivateProperty"
            }
        },
        "description": "Private property.",
        "name": "c",
        "longname": "A#c",
        "kind": "member",
        "memberof": "A",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "/** Property with no value assigned to it. */",
        "meta": {
            "range": [
                167,
                169
            ],
            "filename": "classproperties.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001024",
                "name": "d",
                "type": "ClassProperty"
            }
        },
        "description": "Property with no value assigned to it.",
        "name": "d",
        "longname": "A#d",
        "kind": "member",
        "memberof": "A",
        "scope": "instance"
    },
    {
        "comment": "/**\n    Describe the NewsSource class here.\n    @class NewsSource\n */",
        "meta": {
            "filename": "classtag.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Describe the NewsSource class here.",
        "kind": "class",
        "name": "NewsSource",
        "longname": "NewsSource",
        "scope": "global"
    },
    {
        "comment": "/**\n    Describe the Ticker class here.\n    @class\n */",
        "meta": {
            "range": [
                59,
                83
            ],
            "filename": "classtag.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001028",
                "name": "Ticker",
                "type": "FunctionExpression"
            }
        },
        "description": "Describe the Ticker class here.",
        "kind": "class",
        "name": "Ticker",
        "longname": "Ticker",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Describe the Subscription class here.\n */",
        "meta": {
            "range": [
                49,
                341
            ],
            "filename": "classtag2.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001034",
                "name": "Subscription",
                "type": "ClassDeclaration",
                "paramnames": [
                    "name"
                ]
            }
        },
        "classdesc": "Describe the Subscription class here.",
        "name": "Subscription",
        "longname": "Subscription",
        "kind": "class",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "/**\n     * Describe the constructor here.\n     *\n     * @param {string} name - The name of the subscription.\n     * @example\n     * var subscription = new Subscription();\n     */",
        "meta": {
            "range": [
                257,
                277
            ],
            "filename": "classtag2.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001037",
                "name": "Subscription",
                "type": "MethodDefinition",
                "paramnames": [
                    "name"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Describe the constructor here.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The name of the subscription.",
                "name": "name"
            }
        ],
        "examples": [
            "var subscription = new Subscription();"
        ],
        "name": "Subscription",
        "longname": "Subscription",
        "kind": "class",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "/**\n * Describe the Subscription class here.\n */",
        "meta": {
            "range": [
                49,
                341
            ],
            "filename": "classtag2.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001034",
                "name": "Subscription",
                "type": "ClassDeclaration",
                "paramnames": [
                    "name"
                ]
            }
        },
        "name": "Subscription",
        "longname": "Subscription",
        "kind": "class",
        "classdesc": "Describe the Subscription class here.",
        "scope": "global",
        "description": "Describe the constructor here.",
        "examples": [
            "var subscription = new Subscription();"
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The name of the subscription.",
                "name": "name"
            }
        ]
    },
    {
        "comment": "/** Force the subscription to expire. */",
        "meta": {
            "range": [
                328,
                339
            ],
            "filename": "classtag2.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001042",
                "name": "Subscription#expire",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Force the subscription to expire.",
        "name": "expire",
        "longname": "Subscription#expire",
        "kind": "function",
        "memberof": "Subscription",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n * Describe the Subscriber class here.\n */",
        "meta": {
            "range": [
                396,
                644
            ],
            "filename": "classtag2.js",
            "lineno": 21,
            "columnno": 6,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001047",
                "name": "Subscriber",
                "type": "ClassExpression",
                "value": ""
            }
        },
        "classdesc": "Describe the Subscriber class here.",
        "name": "Subscriber",
        "longname": "Subscriber",
        "kind": "class",
        "scope": "global",
        "params": [],
        "undocumented": true
    },
    {
        "comment": "/**\n     * Describe the constructor here.\n     *\n     * @param {string} name - The name of the subscriber.\n     */",
        "meta": {
            "range": [
                544,
                564
            ],
            "filename": "classtag2.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001052",
                "name": "Subscriber",
                "type": "MethodDefinition",
                "paramnames": [
                    "name"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Describe the constructor here.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The name of the subscriber.",
                "name": "name"
            }
        ],
        "name": "Subscriber",
        "longname": "Subscriber",
        "kind": "class",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "/**\n * Describe the Subscriber class here.\n */",
        "meta": {
            "range": [
                396,
                644
            ],
            "filename": "classtag2.js",
            "lineno": 21,
            "columnno": 6,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001047",
                "name": "Subscriber",
                "type": "ClassExpression",
                "value": ""
            }
        },
        "name": "Subscriber",
        "longname": "Subscriber",
        "kind": "class",
        "classdesc": "Describe the Subscriber class here.",
        "scope": "global",
        "description": "Describe the constructor here.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The name of the subscriber.",
                "name": "name"
            }
        ]
    },
    {
        "comment": "/** Check whether the subscriber has a callback. */",
        "meta": {
            "range": [
                626,
                642
            ],
            "filename": "classtag2.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001057",
                "name": "Subscriber#hasCallback",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Check whether the subscriber has a callback.",
        "name": "hasCallback",
        "longname": "Subscriber#hasCallback",
        "kind": "function",
        "memberof": "Subscriber",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n * Subclass namespace.\n * @namespace\n */",
        "meta": {
            "range": [
                695,
                710
            ],
            "filename": "classtag2.js",
            "lineno": 37,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001062",
                "name": "subclasses",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "description": "Subclass namespace.",
        "kind": "namespace",
        "name": "subclasses",
        "longname": "subclasses",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Expiring subscription subclass.\n * @class\n */",
        "meta": {
            "range": [
                766,
                976
            ],
            "filename": "classtag2.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001066",
                "name": "subclasses.ExpiringSubscription",
                "type": "ClassExpression",
                "value": "",
                "paramnames": []
            }
        },
        "classdesc": "Expiring subscription subclass.",
        "kind": "class",
        "name": "ExpiringSubscription",
        "longname": "subclasses.ExpiringSubscription",
        "memberof": "subclasses",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "/**\n     * Describe the constructor here.\n     *\n     * @param {string} name - The name of the subscription.\n     */",
        "meta": {
            "range": [
                954,
                974
            ],
            "filename": "classtag2.js",
            "lineno": 49,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001073",
                "name": "subclasses.ExpiringSubscription",
                "type": "MethodDefinition",
                "paramnames": [
                    "name"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Describe the constructor here.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The name of the subscription.",
                "name": "name"
            }
        ],
        "name": "ExpiringSubscription",
        "longname": "subclasses~subclasses.ExpiringSubscription",
        "kind": "class",
        "memberof": "subclasses~subclasses",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "/**\n * Expiring subscription subclass.\n * @class\n */",
        "meta": {
            "range": [
                766,
                976
            ],
            "filename": "classtag2.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001066",
                "name": "subclasses.ExpiringSubscription",
                "type": "ClassExpression",
                "value": "",
                "paramnames": []
            }
        },
        "name": "ExpiringSubscription",
        "longname": "subclasses.ExpiringSubscription",
        "kind": "class",
        "classdesc": "Expiring subscription subclass.",
        "memberof": "subclasses",
        "scope": "static",
        "description": "Describe the constructor here.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The name of the subscription.",
                "name": "name"
            }
        ]
    },
    {
        "comment": "/** @memberof subclasses */",
        "meta": {
            "range": [
                1006,
                1076
            ],
            "filename": "classtag2.js",
            "lineno": 53,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001078",
                "name": "InvalidSubscription",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "memberof": "subclasses",
        "name": "InvalidSubscription",
        "longname": "subclasses.InvalidSubscription",
        "kind": "class",
        "scope": "static"
    },
    {
        "comment": "/** Instance method. */",
        "meta": {
            "range": [
                1066,
                1074
            ],
            "filename": "classtag2.js",
            "lineno": 55,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001081",
                "name": "InvalidSubscription#foo",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Instance method.",
        "name": "foo",
        "longname": "subclasses.InvalidSubscription#foo",
        "kind": "function",
        "memberof": "subclasses.InvalidSubscription",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                69,
                199
            ],
            "filename": "classwithoutname.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001088",
                "name": "MyClass",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "MyClass",
        "longname": "MyClass",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n     * Create an instance of MyClass.\n     * @constructs\n     */",
        "meta": {
            "range": [
                171,
                196
            ],
            "filename": "classwithoutname.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001095",
                "name": "initialize",
                "type": "FunctionExpression"
            }
        },
        "description": "Create an instance of MyClass.",
        "alias": "",
        "kind": "class",
        "name": "",
        "longname": "",
        "scope": "global"
    },
    {
        "comment": "/** @constant */",
        "meta": {
            "range": [
                21,
                28
            ],
            "filename": "constanttag.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001101",
                "name": "FOO",
                "type": "Literal",
                "value": 1
            }
        },
        "kind": "constant",
        "name": "FOO",
        "longname": "FOO",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @const BAR */",
        "meta": {
            "filename": "constanttag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "constant",
        "name": "BAR",
        "longname": "BAR",
        "scope": "global"
    },
    {
        "comment": "/** @const {string} BAZ */",
        "meta": {
            "filename": "constanttag.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "constant",
        "name": "BAZ",
        "type": {
            "names": [
                "string"
            ]
        },
        "longname": "BAZ",
        "scope": "global"
    },
    {
        "comment": "/** @const {number} */",
        "meta": {
            "range": [
                105,
                112
            ],
            "filename": "constanttag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001105",
                "name": "QUX",
                "type": "Literal",
                "value": 0
            }
        },
        "kind": "constant",
        "type": {
            "names": [
                "number"
            ]
        },
        "name": "QUX",
        "longname": "QUX",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @const {Object} SOCKET */",
        "meta": {
            "filename": "constanttag.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "constant",
        "name": "SOCKET",
        "type": {
            "names": [
                "Object"
            ]
        },
        "longname": "SOCKET",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                149,
                157
            ],
            "filename": "constanttag.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001109",
                "name": "mySocket"
            }
        },
        "undocumented": true,
        "name": "mySocket",
        "longname": "mySocket",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @const ROCKET */",
        "meta": {
            "filename": "constanttag.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "constant",
        "name": "ROCKET",
        "longname": "ROCKET",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                185,
                193
            ],
            "filename": "constanttag.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001112",
                "name": "myRocket"
            }
        },
        "undocumented": true,
        "name": "myRocket",
        "longname": "myRocket",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** auto-detected const */",
        "meta": {
            "range": [
                229,
                241
            ],
            "filename": "constanttag.js",
            "lineno": 18,
            "columnno": 6,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001115",
                "name": "myPocket",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "auto-detected const",
        "name": "myPocket",
        "longname": "myPocket",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * ES 2015 class assigned to a const\n */",
        "meta": {
            "range": [
                51,
                69
            ],
            "filename": "constanttag2.js",
            "lineno": 4,
            "columnno": 6,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001121",
                "name": "Foo",
                "type": "ClassExpression",
                "value": ""
            }
        },
        "classdesc": "ES 2015 class assigned to a const",
        "name": "Foo",
        "longname": "Foo",
        "kind": "class",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    Describe your constructor function here.\n    @class Describe your class here.\n    @constructor\n    @param {string} url\n    @throws MalformedURL\n */",
        "meta": {
            "range": [
                156,
                178
            ],
            "filename": "constructortag.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001128",
                "name": "Feed",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "url"
                ]
            }
        },
        "description": "Describe your constructor function here.",
        "kind": "class",
        "classdesc": "Describe your class here.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "url"
            }
        ],
        "exceptions": [
            {
                "description": "MalformedURL"
            }
        ],
        "name": "Feed",
        "longname": "Feed",
        "scope": "global"
    },
    {
        "comment": "/**\n    Document your method here.\n*/",
        "meta": {
            "range": [
                218,
                257
            ],
            "filename": "constructortag.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001133",
                "name": "Feed.prototype.refresh",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Document your method here.",
        "name": "refresh",
        "longname": "Feed#refresh",
        "kind": "function",
        "memberof": "Feed",
        "scope": "instance"
    },
    {
        "comment": "/**\n        Document your constructor function here.\n        @constructs TextBlock\n        @classdesc Describe your class here\n        @param {object} opts\n        @throws MissingNode\n     */",
        "meta": {
            "range": [
                225,
                264
            ],
            "filename": "constructstag.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001148",
                "name": "construct",
                "type": "FunctionExpression"
            }
        },
        "description": "Document your constructor function here.",
        "alias": "TextBlock",
        "kind": "class",
        "classdesc": "Describe your class here",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "name": "opts"
            }
        ],
        "exceptions": [
            {
                "description": "MissingNode"
            }
        ],
        "name": "TextBlock",
        "longname": "TextBlock",
        "scope": "global"
    },
    {
        "comment": "/**\n        Document your method here.\n        @memberof TextBlock#\n     */",
        "meta": {
            "range": [
                351,
                376
            ],
            "filename": "constructstag.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001153",
                "name": "align",
                "type": "FunctionExpression"
            }
        },
        "description": "Document your method here.",
        "memberof": "TextBlock",
        "name": "align",
        "longname": "TextBlock#align",
        "kind": "function",
        "scope": "instance"
    },
    {
        "comment": "/**\n        @constructs Menu\n        @param items\n     */",
        "meta": {
            "range": [
                83,
                108
            ],
            "filename": "constructstag2.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001162",
                "type": "FunctionExpression",
                "paramnames": [
                    "items"
                ]
            }
        },
        "alias": "Menu",
        "kind": "class",
        "params": [
            {
                "name": "items"
            }
        ],
        "name": "Menu",
        "longname": "Menu",
        "scope": "global"
    },
    {
        "comment": "/**\n            @memberof Menu#\n         */",
        "meta": {
            "range": [
                176,
                203
            ],
            "filename": "constructstag2.js",
            "lineno": 13,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001166",
                "name": "show",
                "type": "FunctionExpression"
            }
        },
        "memberof": "Menu",
        "name": "show",
        "longname": "Menu#show",
        "kind": "function",
        "scope": "instance"
    },
    {
        "comment": "/**\n    A class that represents a person.\n    @class\n */",
        "meta": {
            "range": [
                61,
                446
            ],
            "filename": "constructstag3.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001172",
                "name": "Person",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "A class that represents a person.",
        "kind": "class",
        "name": "Person",
        "longname": "Person",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n        @constructs Person\n        @param {string} name\n     */",
        "meta": {
            "range": [
                162,
                262
            ],
            "filename": "constructstag3.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001179",
                "name": "initialize",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.name": "Person#name"
            }
        },
        "alias": "Person",
        "kind": "class",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "name"
            }
        ],
        "name": "Person",
        "longname": "Person",
        "scope": "global"
    },
    {
        "comment": "/** The name of the person. */",
        "meta": {
            "range": [
                239,
                255
            ],
            "filename": "constructstag3.js",
            "lineno": 14,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001184",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "description": "The name of the person.",
        "name": "name",
        "longname": "Person#name",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/**\n        @memberof Person#\n        @param {string} message\n     */",
        "meta": {
            "range": [
                343,
                443
            ],
            "filename": "constructstag3.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001189",
                "name": "say",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.message": "Person#message"
            }
        },
        "memberof": "Person",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "message"
            }
        ],
        "name": "say",
        "longname": "Person#say",
        "kind": "function",
        "scope": "instance"
    },
    {
        "comment": "/** The person's message. */",
        "meta": {
            "range": [
                414,
                436
            ],
            "filename": "constructstag3.js",
            "lineno": 24,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001194",
                "name": "this.message",
                "type": "Identifier",
                "value": "message",
                "paramnames": []
            }
        },
        "description": "The person's message.",
        "name": "message",
        "longname": "Person#message",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                464
            ],
            "filename": "constructstag4.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001202",
                "name": "Person",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Person",
        "longname": "Person",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n        Describe the constructor.\n        @classdesc A class that represents a person.\n        @constructs\n        @param {string} name\n     */",
        "meta": {
            "range": [
                206,
                306
            ],
            "filename": "constructstag4.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001209",
                "name": "initialize",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.name": "Person#name"
            }
        },
        "description": "Describe the constructor.",
        "classdesc": "A class that represents a person.",
        "alias": "Person",
        "kind": "class",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "name"
            }
        ],
        "name": "Person",
        "longname": "Person",
        "scope": "global"
    },
    {
        "comment": "/** The name of the person. */",
        "meta": {
            "range": [
                283,
                299
            ],
            "filename": "constructstag4.js",
            "lineno": 12,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001214",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "description": "The name of the person.",
        "name": "name",
        "longname": "Person#name",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/**\n        @param {string} message\n     */",
        "meta": {
            "range": [
                361,
                461
            ],
            "filename": "constructstag4.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001219",
                "name": "say",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.message": "Person#message"
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "message"
            }
        ],
        "name": "say",
        "longname": "Person#say",
        "kind": "function",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/** The person's message. */",
        "meta": {
            "range": [
                432,
                454
            ],
            "filename": "constructstag4.js",
            "lineno": 21,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001224",
                "name": "this.message",
                "type": "Identifier",
                "value": "message",
                "paramnames": []
            }
        },
        "description": "The person's message.",
        "name": "message",
        "longname": "Person#message",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                322
            ],
            "filename": "constructstag5.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001232",
                "name": "Duck",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Duck",
        "longname": "Duck",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n               Constructs a duck.\n               @constructs\n               @param tog\n            */",
        "meta": {
            "range": [
                188,
                230
            ],
            "filename": "constructstag5.js",
            "lineno": 8,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001239",
                "name": "constructor",
                "type": "FunctionExpression"
            }
        },
        "description": "Constructs a duck.",
        "alias": "Duck",
        "kind": "class",
        "params": [
            {
                "name": "tog"
            }
        ],
        "name": "Duck",
        "longname": "Duck",
        "scope": "global"
    },
    {
        "comment": "/** Say hello. */",
        "meta": {
            "range": [
                274,
                307
            ],
            "filename": "constructstag5.js",
            "lineno": 11,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001243",
                "name": "quack",
                "type": "FunctionExpression"
            }
        },
        "description": "Say hello.",
        "name": "quack",
        "longname": "Duck#quack",
        "kind": "function",
        "memberof": "Duck",
        "scope": "instance"
    },
    {
        "comment": "/** @constructor\n    @copyright (c) 2011 Michael Mathews\n*/",
        "meta": {
            "range": [
                60,
                82
            ],
            "filename": "copyrighttag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001248",
                "name": "Thingy",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "copyright": "(c) 2011 Michael Mathews",
        "name": "Thingy",
        "longname": "Thingy",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                122
            ],
            "filename": "defaultparams.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001256",
                "name": "PIZZA_TOPPING_DEFAULTS",
                "type": "ObjectExpression",
                "value": "{\"SARDINES\":true,\"MUSTARD\":true,\"PIQUANT_CHILI_SPRINKLES\":true}"
            }
        },
        "undocumented": true,
        "name": "PIZZA_TOPPING_DEFAULTS",
        "longname": "PIZZA_TOPPING_DEFAULTS",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                66
            ],
            "filename": "defaultparams.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001259",
                "name": "SARDINES",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "SARDINES",
        "longname": "PIZZA_TOPPING_DEFAULTS.SARDINES",
        "kind": "member",
        "memberof": "PIZZA_TOPPING_DEFAULTS",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                72,
                85
            ],
            "filename": "defaultparams.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001261",
                "name": "MUSTARD",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "MUSTARD",
        "longname": "PIZZA_TOPPING_DEFAULTS.MUSTARD",
        "kind": "member",
        "memberof": "PIZZA_TOPPING_DEFAULTS",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                91,
                120
            ],
            "filename": "defaultparams.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001263",
                "name": "PIQUANT_CHILI_SPRINKLES",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "PIQUANT_CHILI_SPRINKLES",
        "longname": "PIZZA_TOPPING_DEFAULTS.PIQUANT_CHILI_SPRINKLES",
        "kind": "member",
        "memberof": "PIZZA_TOPPING_DEFAULTS",
        "scope": "static"
    },
    {
        "comment": "/**\n * Set the user's first name.\n *\n * @param {string} firstName - The user's first name.\n */",
        "meta": {
            "range": [
                220,
                266
            ],
            "filename": "defaultparams.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001265",
                "name": "setFirstName",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "firstName"
                ]
            }
        },
        "description": "Set the user's first name.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The user's first name.",
                "name": "firstName",
                "defaultvalue": "Buster"
            }
        ],
        "name": "setFirstName",
        "longname": "setFirstName",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Set the user's last name.\n *\n * @param {string} [lastName=Braun] - The user's last name.\n */",
        "meta": {
            "range": [
                368,
                411
            ],
            "filename": "defaultparams.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001271",
                "name": "setLastName",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "lastName"
                ]
            }
        },
        "description": "Set the user's last name.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "Braun",
                "description": "The user's last name.",
                "name": "lastName"
            }
        ],
        "name": "setLastName",
        "longname": "setLastName",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Set the user's first, middle, and last names.\n *\n * @param {string} firstName - The user's first name.\n * @param {string} middleName - The user's middle name.\n * @param {string} lastName - The user's last name.\n */",
        "meta": {
            "range": [
                635,
                709
            ],
            "filename": "defaultparams.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001277",
                "name": "setName",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "firstName",
                    "middleName",
                    "lastName"
                ]
            }
        },
        "description": "Set the user's first, middle, and last names.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The user's first name.",
                "name": "firstName"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The user's middle name.",
                "name": "middleName",
                "defaultvalue": "Bluster"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The user's last name.",
                "name": "lastName",
                "defaultvalue": "Brown"
            }
        ],
        "name": "setName",
        "longname": "setName",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Set the user's manager.\n *\n * @param {Manager} manager - The manager.\n */",
        "meta": {
            "range": [
                792,
                828
            ],
            "filename": "defaultparams.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001287",
                "name": "setManager",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "manager"
                ]
            }
        },
        "description": "Set the user's manager.",
        "params": [
            {
                "type": {
                    "names": [
                        "Manager"
                    ]
                },
                "description": "The manager.",
                "name": "manager"
            }
        ],
        "name": "setManager",
        "longname": "setManager",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Set whether the user is currently active.\n *\n * @param {boolean} isActive - Set to `true` if active; otherwise, `false`.\n */",
        "meta": {
            "range": [
                962,
                1000
            ],
            "filename": "defaultparams.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001293",
                "name": "setActive",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "isActive"
                ]
            }
        },
        "description": "Set whether the user is currently active.",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Set to `true` if active; otherwise, `false`.",
                "name": "isActive",
                "defaultvalue": true
            }
        ],
        "name": "setActive",
        "longname": "setActive",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Set the year in which the employee was born.\n * @param {number} year - The four-digit birth year.\n */",
        "meta": {
            "range": [
                1111,
                1148
            ],
            "filename": "defaultparams.js",
            "lineno": 50,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001299",
                "name": "setBirthYear",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "year"
                ]
            }
        },
        "description": "Set the year in which the employee was born.",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The four-digit birth year.",
                "name": "year",
                "defaultvalue": 3000
            }
        ],
        "name": "setBirthYear",
        "longname": "setBirthYear",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Set the name of the user's dog. At this time, only one dog is supported.\n *\n * @param {string} dogName - The name of the user's dog.\n */",
        "meta": {
            "range": [
                1294,
                1330
            ],
            "filename": "defaultparams.js",
            "lineno": 57,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001305",
                "name": "setDogName",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "dogName"
                ]
            }
        },
        "description": "Set the name of the user's dog. At this time, only one dog is supported.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The name of the user's dog.",
                "name": "dogName"
            }
        ],
        "name": "setDogName",
        "longname": "setDogName",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Set the user's favorite pizza toppings.\n *\n * @param {PizzaToppings} toppings - The user's favorite toppings.\n */",
        "meta": {
            "range": [
                1453,
                1516
            ],
            "filename": "defaultparams.js",
            "lineno": 64,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001311",
                "name": "setPizzaToppings",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "toppings"
                ]
            }
        },
        "description": "Set the user's favorite pizza toppings.",
        "params": [
            {
                "type": {
                    "names": [
                        "PizzaToppings"
                    ]
                },
                "description": "The user's favorite toppings.",
                "name": "toppings"
            }
        ],
        "name": "setPizzaToppings",
        "longname": "setPizzaToppings",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Set whether the user is a ninja.\n *\n * @param {boolean} isNinja - Set to `true` if the user is a ninja; otherwise, `false`.\n */",
        "meta": {
            "range": [
                1657,
                1697
            ],
            "filename": "defaultparams.js",
            "lineno": 71,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001318",
                "name": "setIsNinja",
                "type": "FunctionExpression"
            }
        },
        "description": "Set whether the user is a ninja.",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Set to `true` if the user is a ninja; otherwise, `false`.",
                "name": "isNinja",
                "defaultvalue": true
            }
        ],
        "name": "setIsNinja",
        "longname": "setIsNinja",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/** Class representing pizza toppings. */",
        "meta": {
            "range": [
                57,
                273
            ],
            "filename": "defaultparams2.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001329",
                "name": "PizzaToppings",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Class representing pizza toppings.",
        "name": "PizzaToppings",
        "longname": "PizzaToppings",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/**\n     * Set whether sardines are included in the pizza toppings.\n     * @param {boolean} [bool] `true` to include sardines, `false` to omit them.\n     */",
        "meta": {
            "range": [
                244,
                271
            ],
            "filename": "defaultparams2.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001332",
                "name": "PizzaToppings#setSardines",
                "type": "MethodDefinition",
                "paramnames": [
                    "bool"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Set whether sardines are included in the pizza toppings.",
        "params": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "optional": true,
                "description": "`true` to include sardines, `false` to omit them.",
                "name": "bool",
                "defaultvalue": true
            }
        ],
        "name": "setSardines",
        "longname": "PizzaToppings#setSardines",
        "kind": "function",
        "memberof": "PizzaToppings",
        "scope": "instance"
    },
    {
        "comment": "/**\n    @default\n */",
        "meta": {
            "range": [
                25,
                39
            ],
            "filename": "defaulttag.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001342",
                "name": "request",
                "type": "Literal",
                "value": null
            }
        },
        "defaultvalue": null,
        "name": "request",
        "longname": "request",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @default\n */",
        "meta": {
            "range": [
                67,
                82
            ],
            "filename": "defaulttag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001346",
                "name": "response",
                "type": "Literal",
                "value": "ok"
            }
        },
        "defaultvalue": "ok",
        "name": "response",
        "longname": "response",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @default\n */",
        "meta": {
            "range": [
                110,
                121
            ],
            "filename": "defaulttag.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001350",
                "name": "rcode",
                "type": "Literal",
                "value": 200
            }
        },
        "defaultvalue": 200,
        "name": "rcode",
        "longname": "rcode",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @default\n */",
        "meta": {
            "range": [
                149,
                162
            ],
            "filename": "defaulttag.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001354",
                "name": "rvalid",
                "type": "Literal",
                "value": true
            }
        },
        "defaultvalue": true,
        "name": "rvalid",
        "longname": "rvalid",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @default\n */",
        "meta": {
            "range": [
                190,
                206
            ],
            "filename": "defaulttag.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001358",
                "name": "rerrored",
                "type": "Literal",
                "value": false
            }
        },
        "defaultvalue": false,
        "name": "rerrored",
        "longname": "rerrored",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @default the parent window\n */",
        "meta": {
            "range": [
                252,
                275
            ],
            "filename": "defaulttag.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001362",
                "name": "win",
                "type": "CallExpression",
                "value": ""
            }
        },
        "defaultvalue": "the parent window",
        "name": "win",
        "longname": "win",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @default\n */",
        "meta": {
            "range": [
                303,
                331
            ],
            "filename": "defaulttag.js",
            "lineno": 34,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001367",
                "name": "header",
                "type": "CallExpression",
                "value": ""
            }
        },
        "name": "header",
        "longname": "header",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @default\n */",
        "meta": {
            "range": [
                359,
                404
            ],
            "filename": "defaulttag.js",
            "lineno": 39,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001373",
                "name": "obj",
                "type": "ObjectExpression",
                "value": "{\"valueA\":\"a\",\"valueB\":false,\"valueC\":7}"
            }
        },
        "defaultvalue": "{\"valueA\":\"a\",\"valueB\":false,\"valueC\":7}",
        "defaultvaluetype": "object",
        "name": "obj",
        "longname": "obj",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                366,
                377
            ],
            "filename": "defaulttag.js",
            "lineno": 39,
            "columnno": 11,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001376",
                "name": "valueA",
                "type": "Literal",
                "value": "a"
            }
        },
        "undocumented": true,
        "name": "valueA",
        "longname": "obj.valueA",
        "kind": "member",
        "memberof": "obj",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                379,
                392
            ],
            "filename": "defaulttag.js",
            "lineno": 39,
            "columnno": 24,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001378",
                "name": "valueB",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "valueB",
        "longname": "obj.valueB",
        "kind": "member",
        "memberof": "obj",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                394,
                403
            ],
            "filename": "defaulttag.js",
            "lineno": 39,
            "columnno": 39,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001380",
                "name": "valueC",
                "type": "Literal",
                "value": 7
            }
        },
        "undocumented": true,
        "name": "valueC",
        "longname": "obj.valueC",
        "kind": "member",
        "memberof": "obj",
        "scope": "static"
    },
    {
        "comment": "/**\n * @default\n */",
        "meta": {
            "range": [
                431,
                505
            ],
            "filename": "defaulttag.js",
            "lineno": 44,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001383",
                "name": "multilineObject",
                "type": "ObjectExpression",
                "value": "{\"valueA\":\"a\",\"valueB\":false,\"valueC\":7}"
            }
        },
        "defaultvalue": "{\"valueA\":\"a\",\"valueB\":false,\"valueC\":7}",
        "defaultvaluetype": "object",
        "name": "multilineObject",
        "longname": "multilineObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                455,
                467
            ],
            "filename": "defaulttag.js",
            "lineno": 45,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001386",
                "name": "valueA",
                "type": "Literal",
                "value": "a"
            }
        },
        "undocumented": true,
        "name": "valueA",
        "longname": "multilineObject.valueA",
        "kind": "member",
        "memberof": "multilineObject",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                473,
                487
            ],
            "filename": "defaulttag.js",
            "lineno": 46,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001388",
                "name": "valueB",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "valueB",
        "longname": "multilineObject.valueB",
        "kind": "member",
        "memberof": "multilineObject",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                493,
                503
            ],
            "filename": "defaulttag.js",
            "lineno": 47,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001390",
                "name": "valueC",
                "type": "Literal",
                "value": 7
            }
        },
        "undocumented": true,
        "name": "valueC",
        "longname": "multilineObject.valueC",
        "kind": "member",
        "memberof": "multilineObject",
        "scope": "static"
    },
    {
        "comment": "/** @default */",
        "meta": {
            "range": [
                528,
                551
            ],
            "filename": "defaulttag.js",
            "lineno": 51,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001393",
                "name": "arr",
                "type": "ArrayExpression",
                "value": "[\"foo\",true,19]"
            }
        },
        "defaultvalue": "[\"foo\",true,19]",
        "defaultvaluetype": "array",
        "name": "arr",
        "longname": "arr",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @default\n * @type {string}\n */",
        "meta": {
            "range": [
                596,
                617
            ],
            "filename": "defaulttag.js",
            "lineno": 57,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001400",
                "name": "defaultWithType",
                "type": "Literal",
                "value": "a"
            }
        },
        "defaultvalue": "a",
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "defaultWithType",
        "longname": "defaultWithType",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Controls whether debugging is enabled.\n *\n * @define {boolean} `true` if enabled, `false` otherwise\n */",
        "meta": {
            "filename": "definetag.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Controls whether debugging is enabled.",
        "kind": "constant",
        "type": {
            "names": [
                "boolean"
            ]
        },
        "name": "`true`",
        "longname": "`true`",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                115,
                134
            ],
            "filename": "definetag.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001406",
                "name": "ENABLE_DEBUG",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "ENABLE_DEBUG",
        "longname": "ENABLE_DEBUG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @deprecated\n*/",
        "meta": {
            "range": [
                19,
                38
            ],
            "filename": "deprecatedtag.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001411",
                "name": "foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "deprecated": true,
        "name": "foo",
        "longname": "foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @deprecated since version 2.0\n*/",
        "meta": {
            "range": [
                77,
                96
            ],
            "filename": "deprecatedtag.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001414",
                "name": "bar",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "deprecated": "since version 2.0",
        "name": "bar",
        "longname": "bar",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Blah Blah Blah\n * @desc halb halb halb\n */",
        "meta": {
            "range": [
                51,
                52
            ],
            "filename": "descriptiontag.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001420",
                "name": "x"
            }
        },
        "description": "halb halb halb",
        "name": "x",
        "longname": "x",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @description lkjasdf */",
        "meta": {
            "range": [
                87,
                88
            ],
            "filename": "descriptiontag.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001423",
                "name": "y"
            }
        },
        "description": "lkjasdf",
        "name": "y",
        "longname": "y",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    A builder function for the Stick application;\n    @var {function} Application\n */",
        "meta": {
            "filename": "destructuring.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "A builder function for the Stick application;",
        "kind": "member",
        "name": "Application",
        "type": {
            "names": [
                "function"
            ]
        },
        "longname": "Application",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                95,
                106
            ],
            "filename": "destructuring.js",
            "lineno": 5,
            "columnno": 5,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001430",
                "name": "Application",
                "type": "Identifier",
                "value": "Application"
            }
        },
        "undocumented": true,
        "name": "Application",
        "longname": "Application",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * @constructor\n * @dict\n */",
        "meta": {
            "range": [
                33,
                50
            ],
            "filename": "dicttag.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001437",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    Markdown asterisks in a doclet that does not use leading asterisks.\n    **Strong** is strong.\n\n    * List item 1.\n    * List item 2.\n    @param {string} thingy - The thingy.\n */",
        "meta": {
            "range": [
                186,
                213
            ],
            "filename": "doclet.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001442",
                "name": "test1",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "thingy"
                ]
            }
        },
        "description": "Markdown asterisks in a doclet that does not use leading asterisks.\n*Strong** is strong.\nList item 1.\nList item 2.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The thingy.",
                "name": "thingy"
            }
        ],
        "name": "test1",
        "longname": "test1",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Markdown asterisks in a doclet that uses leading asterisks.\n * **Strong** is strong.\n *\n * * List item 1.\n * * List item 2.\n * @param {string} thingy - The thingy.\n */",
        "meta": {
            "range": [
                390,
                417
            ],
            "filename": "doclet.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001446",
                "name": "test2",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "thingy"
                ]
            }
        },
        "description": "Markdown asterisks in a doclet that uses leading asterisks.\n**Strong** is strong.\n\n* List item 1.\n* List item 2.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The thingy.",
                "name": "thingy"
            }
        ],
        "name": "test2",
        "longname": "test2",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/** */",
        "meta": {
            "range": [
                7,
                26
            ],
            "filename": "emptycomments.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001452",
                "name": "first",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "name": "first",
        "longname": "first",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**    */",
        "meta": {
            "range": [
                38,
                58
            ],
            "filename": "emptycomments.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001455",
                "name": "second",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "name": "second",
        "longname": "second",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** \t */",
        "meta": {
            "range": [
                135,
                154
            ],
            "filename": "emptycomments.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001458",
                "name": "third",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "name": "third",
        "longname": "third",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** \t\t\t */",
        "meta": {
            "range": [
                238,
                258
            ],
            "filename": "emptycomments.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001461",
                "name": "fourth",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "name": "fourth",
        "longname": "fourth",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n */",
        "meta": {
            "range": [
                328,
                347
            ],
            "filename": "emptycomments.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001464",
                "name": "fifth",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "name": "fifth",
        "longname": "fifth",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n *\n *\n *\n *\n */",
        "meta": {
            "range": [
                435,
                454
            ],
            "filename": "emptycomments.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001467",
                "name": "sixth",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "name": "sixth",
        "longname": "sixth",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Enum for tri-state values.\n * @enum {number}\n */",
        "meta": {
            "range": [
                60,
                161
            ],
            "filename": "enumtag.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001473",
                "name": "TriState",
                "type": "ObjectExpression",
                "value": "{\"TRUE\":1,\"FALSE\":\"\",\"MAYBE\":true}"
            }
        },
        "description": "Enum for tri-state values.",
        "kind": "member",
        "isEnum": true,
        "type": {
            "names": [
                "number"
            ]
        },
        "name": "TriState",
        "longname": "TriState",
        "scope": "global",
        "params": [],
        "properties": [
            {
                "comment": "/** true */",
                "meta": {
                    "range": [
                        93,
                        100
                    ],
                    "filename": "enumtag.js",
                    "lineno": 7,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001476",
                        "name": "TRUE",
                        "type": "Literal",
                        "value": 1
                    }
                },
                "description": "true",
                "name": "TRUE",
                "longname": "TriState.TRUE",
                "kind": "member",
                "memberof": "TriState",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": 1
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        106,
                        115
                    ],
                    "filename": "enumtag.js",
                    "lineno": 8,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001478",
                        "name": "FALSE",
                        "type": "UnaryExpression",
                        "value": -1
                    }
                },
                "name": "FALSE",
                "longname": "TriState.FALSE",
                "kind": "member",
                "memberof": "TriState",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": -1
            },
            {
                "comment": "/** @type {boolean} */",
                "meta": {
                    "range": [
                        148,
                        159
                    ],
                    "filename": "enumtag.js",
                    "lineno": 10,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001481",
                        "name": "MAYBE",
                        "type": "Literal",
                        "value": true
                    }
                },
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "name": "MAYBE",
                "longname": "TriState.MAYBE",
                "kind": "member",
                "memberof": "TriState",
                "scope": "static",
                "defaultvalue": true
            }
        ]
    },
    {
        "comment": "/** true */",
        "meta": {
            "range": [
                93,
                100
            ],
            "filename": "enumtag.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001476",
                "name": "TRUE",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "true",
        "name": "TRUE",
        "longname": "TriState.TRUE",
        "kind": "member",
        "memberof": "TriState",
        "scope": "static",
        "type": {
            "names": [
                "number"
            ]
        },
        "defaultvalue": 1
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                115
            ],
            "filename": "enumtag.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001478",
                "name": "FALSE",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "name": "FALSE",
        "longname": "TriState.FALSE",
        "kind": "member",
        "memberof": "TriState",
        "scope": "static",
        "type": {
            "names": [
                "number"
            ]
        },
        "defaultvalue": -1
    },
    {
        "comment": "/** @type {boolean} */",
        "meta": {
            "range": [
                148,
                159
            ],
            "filename": "enumtag.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001481",
                "name": "MAYBE",
                "type": "Literal",
                "value": true
            }
        },
        "type": {
            "names": [
                "boolean"
            ]
        },
        "name": "MAYBE",
        "longname": "TriState.MAYBE",
        "kind": "member",
        "memberof": "TriState",
        "scope": "static",
        "defaultvalue": true
    },
    {
        "comment": "/**\n * Numeric enum for true/false values.\n * @enum {boolean}\n */",
        "meta": {
            "range": [
                234,
                299
            ],
            "filename": "enumtag.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001484",
                "name": "TrueFalseNumeric",
                "type": "ObjectExpression",
                "value": "{\"undefined\":true}"
            }
        },
        "description": "Numeric enum for true/false values.",
        "kind": "member",
        "isEnum": true,
        "type": {
            "names": [
                "boolean"
            ]
        },
        "name": "TrueFalseNumeric",
        "longname": "TrueFalseNumeric",
        "scope": "global",
        "params": [],
        "properties": [
            {
                "comment": "/** false */",
                "meta": {
                    "range": [
                        276,
                        284
                    ],
                    "filename": "enumtag.js",
                    "lineno": 19,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001487",
                        "type": "Literal",
                        "value": false
                    }
                },
                "description": "false",
                "name": "0",
                "longname": "TrueFalseNumeric.0",
                "kind": "member",
                "memberof": "TrueFalseNumeric",
                "scope": "static",
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "defaultvalue": false
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        290,
                        297
                    ],
                    "filename": "enumtag.js",
                    "lineno": 20,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001489",
                        "name": 1,
                        "type": "Literal",
                        "value": true
                    }
                },
                "name": "1",
                "longname": "TrueFalseNumeric.1",
                "kind": "member",
                "memberof": "TrueFalseNumeric",
                "scope": "static",
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "defaultvalue": true
            }
        ]
    },
    {
        "comment": "/** false */",
        "meta": {
            "range": [
                276,
                284
            ],
            "filename": "enumtag.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001487",
                "type": "Literal",
                "value": false
            }
        },
        "description": "false",
        "name": "0",
        "longname": "TrueFalseNumeric.0",
        "kind": "member",
        "memberof": "TrueFalseNumeric",
        "scope": "static",
        "type": {
            "names": [
                "boolean"
            ]
        },
        "defaultvalue": false
    },
    {
        "comment": "",
        "meta": {
            "range": [
                290,
                297
            ],
            "filename": "enumtag.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001489",
                "name": 1,
                "type": "Literal",
                "value": true
            }
        },
        "name": "1",
        "longname": "TrueFalseNumeric.1",
        "kind": "member",
        "memberof": "TrueFalseNumeric",
        "scope": "static",
        "type": {
            "names": [
                "boolean"
            ]
        },
        "defaultvalue": true
    },
    {
        "comment": "/** @module my/enums */",
        "meta": {
            "filename": "enumtag2.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "my/enums",
        "longname": "module:my/enums"
    },
    {
        "comment": "/**\n * Enum for quad-state values.\n * @enum {number}\n * @memberof module:my/enums\n */",
        "meta": {
            "range": [
                115,
                225
            ],
            "filename": "enumtag2.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001494",
                "name": "QuadState",
                "type": "AssignmentExpression",
                "value": "exports.QuadState"
            }
        },
        "description": "Enum for quad-state values.",
        "kind": "member",
        "isEnum": true,
        "type": {
            "names": [
                "number"
            ]
        },
        "memberof": "module:my/enums",
        "name": "QuadState",
        "longname": "module:my/enums.QuadState",
        "scope": "static",
        "params": [],
        "properties": [
            {
                "comment": "/** true */",
                "meta": {
                    "range": [
                        169,
                        176
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 10,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001501",
                        "name": "TRUE",
                        "type": "Literal",
                        "value": 1
                    }
                },
                "description": "true",
                "name": "TRUE",
                "longname": "module:my/enums.QuadState.TRUE",
                "kind": "member",
                "memberof": "module:my/enums.QuadState",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": 1
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        182,
                        191
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 11,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001503",
                        "name": "FALSE",
                        "type": "UnaryExpression",
                        "value": -1
                    }
                },
                "name": "FALSE",
                "longname": "module:my/enums.QuadState.FALSE",
                "kind": "member",
                "memberof": "module:my/enums.QuadState",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": -1
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        197,
                        205
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 12,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001506",
                        "name": "MAYBE",
                        "type": "Literal",
                        "value": 0
                    }
                },
                "name": "MAYBE",
                "longname": "module:my/enums.QuadState.MAYBE",
                "kind": "member",
                "memberof": "module:my/enums.QuadState",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": 0
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        211,
                        223
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 13,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001508",
                        "name": "UNKNOWN",
                        "type": "UnaryExpression",
                        "value": -99
                    }
                },
                "name": "UNKNOWN",
                "longname": "module:my/enums.QuadState.UNKNOWN",
                "kind": "member",
                "memberof": "module:my/enums.QuadState",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": -99
            }
        ]
    },
    {
        "comment": "",
        "meta": {
            "range": [
                127,
                225
            ],
            "filename": "enumtag2.js",
            "lineno": 8,
            "columnno": 16,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001496",
                "name": "exports.QuadState",
                "type": "ObjectExpression",
                "value": "{\"TRUE\":1,\"FALSE\":\"\",\"MAYBE\":0,\"UNKNOWN\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "QuadState",
        "longname": "module:my/enums.QuadState",
        "kind": "member",
        "memberof": "module:my/enums",
        "scope": "static"
    },
    {
        "comment": "/** true */",
        "meta": {
            "range": [
                169,
                176
            ],
            "filename": "enumtag2.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001501",
                "name": "TRUE",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "true",
        "name": "TRUE",
        "longname": "module:my/enums.QuadState.TRUE",
        "kind": "member",
        "memberof": "module:my/enums.QuadState",
        "scope": "static",
        "type": {
            "names": [
                "number"
            ]
        },
        "defaultvalue": 1
    },
    {
        "comment": "",
        "meta": {
            "range": [
                182,
                191
            ],
            "filename": "enumtag2.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001503",
                "name": "FALSE",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "name": "FALSE",
        "longname": "module:my/enums.QuadState.FALSE",
        "kind": "member",
        "memberof": "module:my/enums.QuadState",
        "scope": "static",
        "type": {
            "names": [
                "number"
            ]
        },
        "defaultvalue": -1
    },
    {
        "comment": "",
        "meta": {
            "range": [
                197,
                205
            ],
            "filename": "enumtag2.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001506",
                "name": "MAYBE",
                "type": "Literal",
                "value": 0
            }
        },
        "name": "MAYBE",
        "longname": "module:my/enums.QuadState.MAYBE",
        "kind": "member",
        "memberof": "module:my/enums.QuadState",
        "scope": "static",
        "type": {
            "names": [
                "number"
            ]
        },
        "defaultvalue": 0
    },
    {
        "comment": "",
        "meta": {
            "range": [
                211,
                223
            ],
            "filename": "enumtag2.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001508",
                "name": "UNKNOWN",
                "type": "UnaryExpression",
                "value": -99
            }
        },
        "name": "UNKNOWN",
        "longname": "module:my/enums.QuadState.UNKNOWN",
        "kind": "member",
        "memberof": "module:my/enums.QuadState",
        "scope": "static",
        "type": {
            "names": [
                "number"
            ]
        },
        "defaultvalue": -99
    },
    {
        "comment": "/**\n * Enum for penta-state values.\n * @enum {number}\n */",
        "meta": {
            "range": [
                286,
                496
            ],
            "filename": "enumtag2.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001512",
                "name": "exports.PentaState",
                "type": "AssignmentExpression",
                "value": "exports.PENTASTATE",
                "paramnames": []
            }
        },
        "description": "Enum for penta-state values.",
        "kind": "member",
        "isEnum": true,
        "type": {
            "names": [
                "number"
            ]
        },
        "name": "PentaState",
        "longname": "module:my/enums.PentaState",
        "memberof": "module:my/enums",
        "scope": "static",
        "properties": [
            {
                "comment": "/** true */",
                "meta": {
                    "range": [
                        422,
                        429
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 27,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001521",
                        "name": "TRUE",
                        "type": "Literal",
                        "value": 1
                    }
                },
                "description": "true",
                "name": "TRUE",
                "longname": "module:my/enums.PENTASTATE.TRUE",
                "kind": "member",
                "memberof": "module:my/enums.PENTASTATE",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": 1
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        435,
                        444
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 28,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001523",
                        "name": "FALSE",
                        "type": "UnaryExpression",
                        "value": -1
                    }
                },
                "name": "FALSE",
                "longname": "module:my/enums.PENTASTATE.FALSE",
                "kind": "member",
                "memberof": "module:my/enums.PENTASTATE",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": -1
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        450,
                        458
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 29,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001526",
                        "name": "MAYBE",
                        "type": "Literal",
                        "value": 0
                    }
                },
                "name": "MAYBE",
                "longname": "module:my/enums.PENTASTATE.MAYBE",
                "kind": "member",
                "memberof": "module:my/enums.PENTASTATE",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": 0
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        464,
                        476
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 30,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001528",
                        "name": "UNKNOWN",
                        "type": "UnaryExpression",
                        "value": -99
                    }
                },
                "name": "UNKNOWN",
                "longname": "module:my/enums.PENTASTATE.UNKNOWN",
                "kind": "member",
                "memberof": "module:my/enums.PENTASTATE",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": -99
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        482,
                        494
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 31,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001531",
                        "name": "DONTCARE",
                        "type": "Literal",
                        "value": 99
                    }
                },
                "name": "DONTCARE",
                "longname": "module:my/enums.PENTASTATE.DONTCARE",
                "kind": "member",
                "memberof": "module:my/enums.PENTASTATE",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": 99
            }
        ]
    },
    {
        "comment": "/**\n * Enum for penta-state values, BUT SHOUTIER.\n * @enum {number}\n */",
        "meta": {
            "range": [
                379,
                496
            ],
            "filename": "enumtag2.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001516",
                "name": "exports.PENTASTATE",
                "type": "ObjectExpression",
                "value": "{\"TRUE\":1,\"FALSE\":\"\",\"MAYBE\":0,\"UNKNOWN\":\"\",\"DONTCARE\":99}",
                "paramnames": []
            }
        },
        "description": "Enum for penta-state values, BUT SHOUTIER.",
        "kind": "member",
        "isEnum": true,
        "type": {
            "names": [
                "number"
            ]
        },
        "name": "PENTASTATE",
        "longname": "module:my/enums.PENTASTATE",
        "memberof": "module:my/enums",
        "scope": "static",
        "properties": [
            {
                "comment": "/** true */",
                "meta": {
                    "range": [
                        422,
                        429
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 27,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001521",
                        "name": "TRUE",
                        "type": "Literal",
                        "value": 1
                    }
                },
                "description": "true",
                "name": "TRUE",
                "longname": "module:my/enums.PENTASTATE.TRUE",
                "kind": "member",
                "memberof": "module:my/enums.PENTASTATE",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": 1
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        435,
                        444
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 28,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001523",
                        "name": "FALSE",
                        "type": "UnaryExpression",
                        "value": -1
                    }
                },
                "name": "FALSE",
                "longname": "module:my/enums.PENTASTATE.FALSE",
                "kind": "member",
                "memberof": "module:my/enums.PENTASTATE",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": -1
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        450,
                        458
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 29,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001526",
                        "name": "MAYBE",
                        "type": "Literal",
                        "value": 0
                    }
                },
                "name": "MAYBE",
                "longname": "module:my/enums.PENTASTATE.MAYBE",
                "kind": "member",
                "memberof": "module:my/enums.PENTASTATE",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": 0
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        464,
                        476
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 30,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001528",
                        "name": "UNKNOWN",
                        "type": "UnaryExpression",
                        "value": -99
                    }
                },
                "name": "UNKNOWN",
                "longname": "module:my/enums.PENTASTATE.UNKNOWN",
                "kind": "member",
                "memberof": "module:my/enums.PENTASTATE",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": -99
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        482,
                        494
                    ],
                    "filename": "enumtag2.js",
                    "lineno": 31,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001531",
                        "name": "DONTCARE",
                        "type": "Literal",
                        "value": 99
                    }
                },
                "name": "DONTCARE",
                "longname": "module:my/enums.PENTASTATE.DONTCARE",
                "kind": "member",
                "memberof": "module:my/enums.PENTASTATE",
                "scope": "static",
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "defaultvalue": 99
            }
        ]
    },
    {
        "comment": "/** true */",
        "meta": {
            "range": [
                422,
                429
            ],
            "filename": "enumtag2.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001521",
                "name": "TRUE",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "true",
        "name": "TRUE",
        "longname": "module:my/enums.PENTASTATE.TRUE",
        "kind": "member",
        "memberof": "module:my/enums.PENTASTATE",
        "scope": "static",
        "type": {
            "names": [
                "number"
            ]
        },
        "defaultvalue": 1
    },
    {
        "comment": "",
        "meta": {
            "range": [
                435,
                444
            ],
            "filename": "enumtag2.js",
            "lineno": 28,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001523",
                "name": "FALSE",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "name": "FALSE",
        "longname": "module:my/enums.PENTASTATE.FALSE",
        "kind": "member",
        "memberof": "module:my/enums.PENTASTATE",
        "scope": "static",
        "type": {
            "names": [
                "number"
            ]
        },
        "defaultvalue": -1
    },
    {
        "comment": "",
        "meta": {
            "range": [
                450,
                458
            ],
            "filename": "enumtag2.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001526",
                "name": "MAYBE",
                "type": "Literal",
                "value": 0
            }
        },
        "name": "MAYBE",
        "longname": "module:my/enums.PENTASTATE.MAYBE",
        "kind": "member",
        "memberof": "module:my/enums.PENTASTATE",
        "scope": "static",
        "type": {
            "names": [
                "number"
            ]
        },
        "defaultvalue": 0
    },
    {
        "comment": "",
        "meta": {
            "range": [
                464,
                476
            ],
            "filename": "enumtag2.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001528",
                "name": "UNKNOWN",
                "type": "UnaryExpression",
                "value": -99
            }
        },
        "name": "UNKNOWN",
        "longname": "module:my/enums.PENTASTATE.UNKNOWN",
        "kind": "member",
        "memberof": "module:my/enums.PENTASTATE",
        "scope": "static",
        "type": {
            "names": [
                "number"
            ]
        },
        "defaultvalue": -99
    },
    {
        "comment": "",
        "meta": {
            "range": [
                482,
                494
            ],
            "filename": "enumtag2.js",
            "lineno": 31,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001531",
                "name": "DONTCARE",
                "type": "Literal",
                "value": 99
            }
        },
        "name": "DONTCARE",
        "longname": "module:my/enums.PENTASTATE.DONTCARE",
        "kind": "member",
        "memberof": "module:my/enums.PENTASTATE",
        "scope": "static",
        "type": {
            "names": [
                "number"
            ]
        },
        "defaultvalue": 99
    },
    {
        "comment": "/**\n     * @exports mymodule\n     * @enum {string}\n      */",
        "meta": {
            "range": [
                93,
                127
            ],
            "filename": "enumtag3.js",
            "lineno": 6,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001541",
                "name": "exports",
                "type": "ObjectExpression",
                "value": "{\"A\":\"abc\"}"
            }
        },
        "alias": "mymodule",
        "kind": "module",
        "isEnum": true,
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "mymodule",
        "longname": "module:mymodule",
        "params": [],
        "properties": [
            {
                "comment": "",
                "meta": {
                    "range": [
                        113,
                        121
                    ],
                    "filename": "enumtag3.js",
                    "lineno": 7,
                    "columnno": 8,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100001544",
                        "name": "A",
                        "type": "Literal",
                        "value": "abc"
                    }
                },
                "name": "A",
                "longname": "module:mymodule.A",
                "kind": "member",
                "memberof": "module:mymodule",
                "scope": "static",
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "defaultvalue": "abc"
            }
        ]
    },
    {
        "comment": "",
        "meta": {
            "range": [
                113,
                121
            ],
            "filename": "enumtag3.js",
            "lineno": 7,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001544",
                "name": "A",
                "type": "Literal",
                "value": "abc"
            }
        },
        "name": "A",
        "longname": "module:mymodule.A",
        "kind": "member",
        "memberof": "module:mymodule",
        "scope": "static",
        "type": {
            "names": [
                "string"
            ]
        },
        "defaultvalue": "abc"
    },
    {
        "comment": "/**\n * @class\n */",
        "meta": {
            "range": [
                22,
                44
            ],
            "filename": "eventfirestag.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001551",
                "name": "Hurl",
                "type": "FunctionExpression"
            }
        },
        "kind": "class",
        "name": "Hurl",
        "longname": "Hurl",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Throw a snowball.\n *\n * @fires Hurl#snowball\n * @fires Hurl#event:brick\n */",
        "meta": {
            "range": [
                130,
                246
            ],
            "filename": "eventfirestag.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001556",
                "name": "Hurl.prototype.snowball",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Throw a snowball.",
        "fires": [
            "Hurl#event:snowball",
            "Hurl#event:brick"
        ],
        "name": "snowball",
        "longname": "Hurl#snowball",
        "kind": "function",
        "memberof": "Hurl",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * @event Hurl#snowball\n     */",
        "meta": {
            "filename": "eventfirestag.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "event",
        "name": "snowball",
        "memberof": "Hurl",
        "longname": "Hurl#event:snowball",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Throw a football match.\n *\n * @emits Hurl#footballMatch\n */",
        "meta": {
            "range": [
                316,
                447
            ],
            "filename": "eventfirestag.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001572",
                "name": "Hurl.prototype.footballMatch",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Throw a football match.",
        "fires": [
            "Hurl#event:footballMatch"
        ],
        "name": "footballMatch",
        "longname": "Hurl#footballMatch",
        "kind": "function",
        "memberof": "Hurl",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * @event Hurl#footballMatch\n     */",
        "meta": {
            "filename": "eventfirestag.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "event",
        "name": "footballMatch",
        "memberof": "Hurl",
        "longname": "Hurl#event:footballMatch",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19,
                40
            ],
            "filename": "eventorder.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001592",
                "name": "_",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "_",
        "longname": "_",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Socket class.\n * @class\n */",
        "meta": {
            "range": [
                78,
                110
            ],
            "filename": "eventorder.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001597",
                "name": "Socket",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Socket class.",
        "kind": "class",
        "name": "Socket",
        "longname": "Socket",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Send a packet.\n * @param {Packet} packet - The packet to send.\n * @return {boolean} `true` on success, `false` on failure.\n */",
        "meta": {
            "range": [
                246,
                301
            ],
            "filename": "eventorder.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001601",
                "name": "Socket.prototype.send",
                "type": "FunctionExpression",
                "paramnames": [
                    "packet"
                ]
            }
        },
        "description": "Send a packet.",
        "params": [
            {
                "type": {
                    "names": [
                        "Packet"
                    ]
                },
                "description": "The packet to send.",
                "name": "packet"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "`true` on success, `false` on failure."
            }
        ],
        "name": "send",
        "longname": "Socket#send",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Virtual doclet for `Packet` class.\n * @class Packet\n */",
        "meta": {
            "filename": "eventorder.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Virtual doclet for `Packet` class.",
        "kind": "class",
        "name": "Packet",
        "longname": "Packet",
        "scope": "global"
    },
    {
        "comment": "/**\n * Close the socket.\n */",
        "meta": {
            "range": [
                397,
                447
            ],
            "filename": "eventorder.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001611",
                "name": "Socket.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Close the socket.",
        "name": "close",
        "longname": "Socket#close",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "ignore": true
    },
    {
        "comment": "/** @example\n * console.log(\"foo\");\n * console.log(\"bar\");\n */",
        "meta": {
            "range": [
                67,
                68
            ],
            "filename": "exampletag.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001622",
                "name": "x"
            }
        },
        "examples": [
            "console.log(\"foo\");\nconsole.log(\"bar\");"
        ],
        "name": "x",
        "longname": "x",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @example\n * console.log(\"foo\");\n * console.log(\"bar\");\n * @example\n * <caption>Example 2</caption>\n * 1 + 2;\n */",
        "meta": {
            "range": [
                192,
                193
            ],
            "filename": "exampletag.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001625",
                "name": "y"
            }
        },
        "examples": [
            "console.log(\"foo\");\nconsole.log(\"bar\");",
            "<caption>Example 2</caption>\n1 + 2;"
        ],
        "name": "y",
        "longname": "y",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @throws {InvalidArgumentException}\n*/",
        "meta": {
            "range": [
                46,
                66
            ],
            "filename": "exceptiontag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001629",
                "name": "foo",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "exceptions": [
            {
                "type": {
                    "names": [
                        "InvalidArgumentException"
                    ]
                }
            }
        ],
        "name": "foo",
        "longname": "foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @exception Will throw an error if argument is null.\n*/",
        "meta": {
            "range": [
                131,
                151
            ],
            "filename": "exceptiontag.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001633",
                "name": "bar",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "exceptions": [
            {
                "description": "Will throw an error if argument is null."
            }
        ],
        "name": "bar",
        "longname": "bar",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @exception {DivideByZero} Argument x must be non-zero.\n*/",
        "meta": {
            "range": [
                219,
                239
            ],
            "filename": "exceptiontag.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001637",
                "name": "pez",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "exceptions": [
            {
                "type": {
                    "names": [
                        "DivideByZero"
                    ]
                },
                "description": "Argument x must be non-zero."
            }
        ],
        "name": "pez",
        "longname": "pez",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * A description of the function.\n *\n * @exception {Object} A description of the exception.\n */",
        "meta": {
            "range": [
                341,
                359
            ],
            "filename": "exceptiontag.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001641",
                "name": "cos",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "description": "A description of the function.",
        "exceptions": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "A description of the exception."
            }
        ],
        "name": "cos",
        "longname": "cos",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Foo module\n * @module foo\n */",
        "meta": {
            "filename": "exportclass.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Foo module",
        "kind": "module",
        "name": "foo",
        "longname": "module:foo"
    },
    {
        "comment": "/** Class description */",
        "meta": {
            "range": [
                63,
                83
            ],
            "filename": "exportclass.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001647",
                "name": "exports.Bar",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "Class description",
        "name": "Bar",
        "longname": "module:foo.Bar",
        "kind": "class",
        "memberof": "module:foo",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                70,
                83
            ],
            "filename": "exportclass.js",
            "lineno": 7,
            "columnno": 7,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001648",
                "name": "Bar",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Bar",
        "longname": "module:foo.Bar",
        "kind": "class",
        "scope": "static",
        "memberof": "module:foo"
    },
    {
        "comment": "/** @module test */",
        "meta": {
            "filename": "exportdefault.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "test",
        "longname": "module:test"
    },
    {
        "comment": "/** Test value */",
        "meta": {
            "range": [
                39,
                60
            ],
            "filename": "exportdefault.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001653",
                "name": "module.exports",
                "type": "Literal"
            }
        },
        "description": "Test value",
        "name": "module:test",
        "longname": "module:test",
        "kind": "member"
    },
    {
        "comment": "/** @module test */",
        "meta": {
            "filename": "exportdefaultclass.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "test",
        "longname": "module:test"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39,
                116
            ],
            "filename": "exportdefaultclass.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001657",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "undocumented": true,
        "name": "module:test",
        "longname": "module:test",
        "kind": "class"
    },
    {
        "comment": "/** Test class */",
        "meta": {
            "range": [
                54,
                116
            ],
            "filename": "exportdefaultclass.js",
            "lineno": 4,
            "columnno": 15,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001658",
                "name": "module.exports",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Test class",
        "name": "module:test",
        "longname": "module:test",
        "kind": "class",
        "undocumented": true
    },
    {
        "comment": "/** Test constructor */",
        "meta": {
            "range": [
                98,
                114
            ],
            "filename": "exportdefaultclass.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001661",
                "name": "module.exports",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Test constructor",
        "name": "module:test",
        "longname": "module:test",
        "kind": "class",
        "params": [],
        "undocumented": true
    },
    {
        "comment": "/** Test class */",
        "meta": {
            "range": [
                54,
                116
            ],
            "filename": "exportdefaultclass.js",
            "lineno": 4,
            "columnno": 15,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001658",
                "name": "module.exports",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "name": "module:test",
        "longname": "module:test",
        "kind": "class",
        "classdesc": "Test class",
        "description": "Test constructor"
    },
    {
        "comment": "/**\n * An example of a server-side JavaScript module.\n * @module hello/world\n * @example\n *    var g = require('hello/world').sayHello('Gracie');\n */",
        "meta": {
            "filename": "exports.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "An example of a server-side JavaScript module.",
        "kind": "module",
        "name": "hello/world",
        "examples": [
            "var g = require('hello/world').sayHello('Gracie');"
        ],
        "longname": "module:hello/world"
    },
    {
        "comment": "/**\n * Generate a greeting.\n * @param {string} [subject=\"world\"] To whom we say hello.\n * @returns {string}\n */",
        "meta": {
            "range": [
                263,
                347
            ],
            "filename": "exports.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001668",
                "name": "exports.sayHello",
                "type": "FunctionExpression",
                "paramnames": [
                    "subject"
                ]
            }
        },
        "description": "Generate a greeting.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "\"world\"",
                "description": "To whom we say hello.",
                "name": "subject"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                }
            }
        ],
        "name": "sayHello",
        "longname": "module:hello/world.sayHello",
        "kind": "function",
        "memberof": "module:hello/world",
        "scope": "static"
    },
    {
        "comment": "/**\n * Generate a morose farewell.\n * @param {string} [subject=\"world\"] To whom we say goodbye.\n * @returns {string}\n */",
        "meta": {
            "range": [
                471,
                572
            ],
            "filename": "exports.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001682",
                "name": "module.exports.sayGoodbye",
                "type": "FunctionExpression",
                "paramnames": [
                    "subject"
                ]
            }
        },
        "description": "Generate a morose farewell.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "\"world\"",
                "description": "To whom we say goodbye.",
                "name": "subject"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                }
            }
        ],
        "name": "sayGoodbye",
        "longname": "module:hello/world.sayGoodbye",
        "kind": "function",
        "memberof": "module:hello/world",
        "scope": "static"
    },
    {
        "comment": "/**\n        A module representing a shirt.\n        @exports my/shirt\n        @version 1.0\n     */",
        "meta": {
            "range": [
                130,
                361
            ],
            "filename": "exportstag.js",
            "lineno": 7,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001705",
                "name": "shirt",
                "type": "ObjectExpression",
                "value": "{\"color\":\"black\",\"Turtleneck\":\"\"}"
            }
        },
        "description": "A module representing a shirt.",
        "alias": "my/shirt",
        "kind": "module",
        "version": "1.0",
        "name": "my/shirt",
        "longname": "module:my/shirt",
        "params": []
    },
    {
        "comment": "/** A property of the module. */",
        "meta": {
            "range": [
                190,
                204
            ],
            "filename": "exportstag.js",
            "lineno": 10,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001708",
                "name": "color",
                "type": "Literal",
                "value": "black"
            }
        },
        "description": "A property of the module.",
        "name": "color",
        "longname": "module:my/shirt.color",
        "kind": "member",
        "memberof": "module:my/shirt",
        "scope": "static"
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                243,
                355
            ],
            "filename": "exportstag.js",
            "lineno": 13,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001710",
                "name": "Turtleneck",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.size": "module:my/shirt.Turtleneck#size"
            }
        },
        "kind": "class",
        "name": "Turtleneck",
        "longname": "module:my/shirt.Turtleneck",
        "memberof": "module:my/shirt",
        "scope": "static"
    },
    {
        "comment": "/** A property of the class. */",
        "meta": {
            "range": [
                328,
                344
            ],
            "filename": "exportstag.js",
            "lineno": 15,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001715",
                "name": "this.size",
                "type": "Identifier",
                "value": "size",
                "paramnames": []
            }
        },
        "description": "A property of the class.",
        "name": "size",
        "longname": "module:my/shirt.Turtleneck#size",
        "kind": "member",
        "memberof": "module:my/shirt.Turtleneck",
        "scope": "instance"
    },
    {
        "comment": "/**\n            A module representing a coat.\n            @exports my/coat\n            @requires my/buttons\n            @version 1.0\n         */",
        "meta": {
            "range": [
                210,
                308
            ],
            "filename": "exportstag2.js",
            "lineno": 10,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001732",
                "name": "myModule",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.wool": "module:my/coat#wool"
            }
        },
        "description": "A module representing a coat.",
        "alias": "my/coat",
        "kind": "module",
        "requires": [
            "module:my/buttons"
        ],
        "version": "1.0",
        "name": "my/coat",
        "longname": "module:my/coat",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                281,
                297
            ],
            "filename": "exportstag2.js",
            "lineno": 12,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001738",
                "name": "this.wool",
                "type": "Identifier",
                "value": "wool",
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "wool",
        "longname": "module:my/coat#wool",
        "kind": "member",
        "memberof": "module:my/coat",
        "scope": "instance"
    },
    {
        "comment": "/**\n        Utility functions to ease working with DOM elements.\n        @exports html/utils\n     */",
        "meta": {
            "range": [
                117,
                501
            ],
            "filename": "exportstag3.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001750",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "exports": "module:html/utils",
                "": null,
                "exports.isInHead": "module:html/utils.isInHead"
            }
        },
        "description": "Utility functions to ease working with DOM elements.",
        "alias": "html/utils",
        "kind": "module",
        "name": "html/utils",
        "longname": "module:html/utils",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                144,
                328
            ],
            "filename": "exportstag3.js",
            "lineno": 8,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001753",
                "name": "exports",
                "type": "ObjectExpression",
                "value": "{\"getStyleProperty\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "module:html/utils",
        "longname": "module:html/utils",
        "kind": "member",
        "memberof": "module:html/utils",
        "params": []
    },
    {
        "comment": "/** Get the value of a property on an element. */",
        "meta": {
            "range": [
                230,
                318
            ],
            "filename": "exportstag3.js",
            "lineno": 10,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001756",
                "name": "getStyleProperty",
                "type": "FunctionExpression"
            }
        },
        "description": "Get the value of a property on an element.",
        "name": "getStyleProperty",
        "longname": "module:html/utils.getStyleProperty",
        "kind": "function",
        "memberof": "module:html/utils",
        "scope": "static"
    },
    {
        "comment": "/** Determine if an element is in the document head. */",
        "meta": {
            "range": [
                403,
                470
            ],
            "filename": "exportstag3.js",
            "lineno": 16,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001762",
                "name": "exports.isInHead",
                "type": "FunctionExpression",
                "funcscope": "module:html/utils",
                "paramnames": [
                    "element"
                ]
            }
        },
        "description": "Determine if an element is in the document head.",
        "name": "isInHead",
        "longname": "module:html/utils.isInHead",
        "kind": "function",
        "memberof": "module:html/utils",
        "scope": "static"
    },
    {
        "comment": "/** @exports some/module */",
        "meta": {
            "range": [
                42,
                219
            ],
            "filename": "exportstag4.js",
            "lineno": 3,
            "columnno": 3,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001776",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "myClass": "module:some/module~myClass",
                "myClass.prototype.myMethod": "module:some/module~myClass#myMethod",
                "": null
            }
        },
        "alias": "some/module",
        "kind": "module",
        "name": "some/module",
        "longname": "module:some/module",
        "params": []
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                84,
                105
            ],
            "filename": "exportstag4.js",
            "lineno": 5,
            "columnno": 7,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001778",
                "name": "myClass",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "name": "myClass",
        "longname": "module:some/module~myClass",
        "memberof": "module:some/module",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** Some method */",
        "meta": {
            "range": [
                140,
                183
            ],
            "filename": "exportstag4.js",
            "lineno": 8,
            "columnno": 7,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001782",
                "name": "myClass.prototype.myMethod",
                "type": "FunctionExpression",
                "funcscope": "module:some/module",
                "paramnames": []
            }
        },
        "description": "Some method",
        "name": "myMethod",
        "longname": "module:some/module~myClass#myMethod",
        "kind": "function",
        "memberof": "module:some/module~myClass",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                46,
                65
            ],
            "filename": "exportstag5.js",
            "lineno": 3,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001803",
                "name": "bar",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "bar",
        "longname": "<anonymous>~bar",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** @exports Foo */",
        "meta": {
            "range": [
                99,
                277
            ],
            "filename": "exportstag5.js",
            "lineno": 5,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001808",
                "name": "Foo",
                "type": "CallExpression",
                "value": ""
            }
        },
        "alias": "Foo",
        "kind": "module",
        "name": "Foo",
        "longname": "module:Foo",
        "params": []
    },
    {
        "comment": "/** This should be in the Foo module doc. */",
        "meta": {
            "range": [
                242,
                261
            ],
            "filename": "exportstag5.js",
            "lineno": 9,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001815",
                "name": "bar",
                "type": "FunctionExpression"
            }
        },
        "description": "This should be in the Foo module doc.",
        "name": "bar",
        "longname": "module:Foo#bar",
        "kind": "function",
        "memberof": "module:Foo",
        "scope": "instance"
    },
    {
        "comment": "/**\n * A module representing a shirt.\n * @exports my/shirt\n * @version 1.0\n */",
        "meta": {
            "range": [
                96,
                107
            ],
            "filename": "exportstag6.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001826",
                "name": "shirtModule",
                "type": "Identifier"
            }
        },
        "description": "A module representing a shirt.",
        "alias": "my/shirt",
        "kind": "module",
        "version": "1.0",
        "name": "my/shirt",
        "longname": "module:my/shirt"
    },
    {
        "comment": "/** A property of the module. */",
        "meta": {
            "range": [
                152,
                179
            ],
            "filename": "exportstag6.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001829",
                "name": "shirtModule.color",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": "black",
                "paramnames": []
            }
        },
        "description": "A property of the module.",
        "name": "color",
        "longname": "module:my/shirt.color",
        "kind": "member",
        "memberof": "module:my/shirt",
        "scope": "static"
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                210,
                323
            ],
            "filename": "exportstag6.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001835",
                "name": "shirtModule.Turtleneck",
                "type": "FunctionExpression",
                "funcscope": "<anonymous>",
                "paramnames": [
                    "size"
                ]
            },
            "vars": {
                "this.size": "module:my/shirt.Turtleneck#size"
            }
        },
        "kind": "class",
        "name": "Turtleneck",
        "longname": "module:my/shirt.Turtleneck",
        "memberof": "module:my/shirt",
        "scope": "static"
    },
    {
        "comment": "/** A property of the class. */",
        "meta": {
            "range": [
                300,
                316
            ],
            "filename": "exportstag6.js",
            "lineno": 14,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001843",
                "name": "this.size",
                "type": "Identifier",
                "value": "size",
                "paramnames": []
            }
        },
        "description": "A property of the class.",
        "name": "size",
        "longname": "module:my/shirt.Turtleneck#size",
        "kind": "member",
        "memberof": "module:my/shirt.Turtleneck",
        "scope": "instance"
    },
    {
        "comment": "/** @exports my/shirt */",
        "meta": {
            "range": [
                44,
                61
            ],
            "filename": "exportstag7.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001855",
                "name": "myShirt",
                "type": "Identifier",
                "value": "exports"
            }
        },
        "alias": "my/shirt",
        "kind": "module",
        "name": "my/shirt",
        "longname": "module:my/shirt",
        "params": []
    },
    {
        "comment": "/** A property of the module. */",
        "meta": {
            "range": [
                97,
                120
            ],
            "filename": "exportstag7.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001859",
                "name": "myShirt.color",
                "type": "Literal",
                "value": "black",
                "paramnames": []
            }
        },
        "description": "A property of the module.",
        "name": "color",
        "longname": "module:my/shirt.color",
        "kind": "member",
        "memberof": "module:my/shirt",
        "scope": "static"
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                143,
                240
            ],
            "filename": "exportstag7.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001865",
                "name": "myShirt.Turtleneck",
                "type": "FunctionExpression",
                "paramnames": [
                    "size"
                ]
            },
            "vars": {
                "this.size": "module:my/shirt.Turtleneck#size"
            }
        },
        "kind": "class",
        "name": "Turtleneck",
        "longname": "module:my/shirt.Turtleneck",
        "memberof": "module:my/shirt",
        "scope": "static"
    },
    {
        "comment": "/** A property of the class. */",
        "meta": {
            "range": [
                221,
                237
            ],
            "filename": "exportstag7.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001873",
                "name": "this.size",
                "type": "Identifier",
                "value": "size",
                "paramnames": []
            }
        },
        "description": "A property of the class.",
        "name": "size",
        "longname": "module:my/shirt.Turtleneck#size",
        "kind": "member",
        "memberof": "module:my/shirt.Turtleneck",
        "scope": "instance"
    },
    {
        "comment": "/** Iron the turtleneck. */",
        "meta": {
            "range": [
                271,
                320
            ],
            "filename": "exportstag7.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001879",
                "name": "myShirt.Turtleneck.prototype.iron",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Iron the turtleneck.",
        "name": "iron",
        "longname": "module:my/shirt.Turtleneck#iron",
        "kind": "function",
        "memberof": "module:my/shirt.Turtleneck",
        "scope": "instance"
    },
    {
        "comment": "/** @exports module:my/shirt */",
        "meta": {
            "range": [
                51,
                68
            ],
            "filename": "exportstag8.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001894",
                "name": "myShirt",
                "type": "Identifier",
                "value": "exports"
            }
        },
        "alias": "my/shirt",
        "kind": "module",
        "name": "my/shirt",
        "longname": "module:my/shirt",
        "params": []
    },
    {
        "comment": "/**\n * My class.\n *\n * @constructor\n * @export\n */",
        "meta": {
            "range": [
                51,
                72
            ],
            "filename": "exporttag.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001899",
                "name": "MyClass",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "My class.",
        "kind": "class",
        "name": "MyClass",
        "longname": "MyClass",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * My public method.\n *\n * @export\n */",
        "meta": {
            "range": [
                117,
                165
            ],
            "filename": "exporttag.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001903",
                "name": "MyClass.prototype.myPublicMethod",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "My public method.",
        "name": "myPublicMethod",
        "longname": "MyClass#myPublicMethod",
        "kind": "function",
        "memberof": "MyClass",
        "scope": "instance"
    },
    {
        "comment": "/**\n * The built in string object.\n * @external String\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String String}\n */",
        "meta": {
            "filename": "externaltag.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "The built in string object.",
        "kind": "external",
        "name": "String",
        "see": [
            "{@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String String}"
        ],
        "longname": "external:String",
        "scope": "global"
    },
    {
        "comment": "/**\n * Adds a new method to the built-in string.\n * @function external:String#rot13\n * @example\n * var greeting = new String('hello world');\n * console.log( greeting.rot13() ); // uryyb jbeyq\n */",
        "meta": {
            "filename": "externaltag.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Adds a new method to the built-in string.",
        "kind": "function",
        "name": "rot13",
        "examples": [
            "var greeting = new String('hello world');\nconsole.log( greeting.rot13() ); // uryyb jbeyq"
        ],
        "memberof": "external:String",
        "longname": "external:String#rot13",
        "scope": "instance"
    },
    {
        "comment": "/**\n * The jQuery plugin namespace.\n * @external \"jQuery.fn\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */",
        "meta": {
            "filename": "externaltag.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "The jQuery plugin namespace.",
        "kind": "external",
        "name": "\"jQuery.fn\"",
        "see": [
            "{@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}"
        ],
        "longname": "external:\"jQuery.fn\"",
        "scope": "global"
    },
    {
        "comment": "/**\n * A jQuery plugin to make stars fly around your home page.\n * @function external:\"jQuery.fn\".starfairy\n */",
        "meta": {
            "filename": "externaltag.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "A jQuery plugin to make stars fly around your home page.",
        "kind": "function",
        "name": "starfairy",
        "memberof": "external:\"jQuery.fn\"",
        "longname": "external:\"jQuery.fn\".starfairy",
        "scope": "static"
    },
    {
        "comment": "/**\n    Namespace provided by the browser.\n    @external XMLHttpRequest\n    @see https://developer.mozilla.org/en/xmlhttprequest\n */",
        "meta": {
            "filename": "externaltag2.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Namespace provided by the browser.",
        "kind": "external",
        "name": "XMLHttpRequest",
        "see": [
            "https://developer.mozilla.org/en/xmlhttprequest"
        ],
        "longname": "external:XMLHttpRequest",
        "scope": "global"
    },
    {
        "comment": "/**\n    Extends the built in XMLHttpRequest to send data encoded with a secret key.\n    @class EncryptedRequest\n    @extends external:XMLHttpRequest\n*/",
        "meta": {
            "filename": "externaltag2.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Extends the built in XMLHttpRequest to send data encoded with a secret key.",
        "kind": "class",
        "name": "EncryptedRequest",
        "augments": [
            "external:XMLHttpRequest"
        ],
        "longname": "EncryptedRequest",
        "scope": "global"
    },
    {
        "comment": "/**\n * The built in string object.\n * @external {String}\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String String}\n */",
        "meta": {
            "filename": "externaltag3.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "The built in string object.",
        "kind": "external",
        "type": {
            "names": [
                "String"
            ]
        },
        "name": "String",
        "see": [
            "{@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String String}"
        ],
        "longname": "external:String",
        "scope": "global"
    },
    {
        "comment": "/**\n * Adds a new method to the built-in string.\n * @function external:String#rot13\n * @example\n * var greeting = new String('hello world');\n * console.log( greeting.rot13() ); // uryyb jbeyq\n */",
        "meta": {
            "filename": "externaltag3.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Adds a new method to the built-in string.",
        "kind": "function",
        "name": "rot13",
        "examples": [
            "var greeting = new String('hello world');\nconsole.log( greeting.rot13() ); // uryyb jbeyq"
        ],
        "memberof": "external:String",
        "longname": "external:String#rot13",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @external {\"foo.bar.baz\"}\n */",
        "meta": {
            "filename": "externaltag3.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "external",
        "type": {
            "names": [
                "\"foo.bar.baz\""
            ]
        },
        "name": "\"foo.bar.baz\"",
        "longname": "external:\"foo.bar.baz\"",
        "scope": "global"
    },
    {
        "comment": "/**\n  * Blah blah\n  * @function external:\"foo.bar.baz\"#blah\n  */",
        "meta": {
            "filename": "externaltag3.js",
            "lineno": 19,
            "columnno": 1,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Blah blah",
        "kind": "function",
        "name": "blah",
        "memberof": "external:\"foo.bar.baz\"",
        "longname": "external:\"foo.bar.baz\"#blah",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @overview This is a file doclet.\n * @copyright Michael Mathews 2011\n */",
        "meta": {
            "filename": "file.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "name": "file.js",
        "kind": "file",
        "description": "This is a file doclet.",
        "preserveName": true,
        "copyright": "Michael Mathews 2011",
        "longname": "file.js",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                80,
                103
            ],
            "filename": "file.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001921",
                "name": "ignoreMe",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "ignoreMe",
        "longname": "ignoreMe",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @fileoverview Overview of this file.\n */",
        "meta": {
            "filename": "fileoverviewtag.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "name": "fileoverviewtag.js",
        "kind": "file",
        "description": "Overview of this file.",
        "preserveName": true,
        "longname": "fileoverviewtag.js",
        "scope": "global"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                18,
                129
            ],
            "filename": "funcExpression.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001929",
                "name": "Foo",
                "type": "FunctionExpression",
                "value": "Bar"
            },
            "vars": {
                "var1": "Foo~var1",
                "this.member1": "Foo#member1"
            }
        },
        "kind": "class",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                73,
                81
            ],
            "filename": "funcExpression.js",
            "lineno": 4,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001936",
                "name": "var1",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "document me",
        "name": "var1",
        "longname": "Foo~var1",
        "kind": "member",
        "memberof": "Foo",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                110,
                126
            ],
            "filename": "funcExpression.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001940",
                "name": "this.member1",
                "type": "Literal",
                "value": 2,
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "member1",
        "longname": "Foo#member1",
        "kind": "member",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                14,
                125
            ],
            "filename": "funcExpression2.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001948",
                "name": "Foo",
                "type": "FunctionExpression",
                "value": "Bar",
                "paramnames": [
                    "a"
                ]
            },
            "vars": {
                "var1": "Foo~var1",
                "this.member1": "Foo#member1"
            }
        },
        "kind": "class",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                69,
                77
            ],
            "filename": "funcExpression2.js",
            "lineno": 4,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001955",
                "name": "var1",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "document me",
        "name": "var1",
        "longname": "Foo~var1",
        "kind": "member",
        "memberof": "Foo",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                106,
                122
            ],
            "filename": "funcExpression2.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001959",
                "name": "this.member1",
                "type": "Literal",
                "value": 2,
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "member1",
        "longname": "Foo#member1",
        "kind": "member",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                161
            ],
            "filename": "funcExpression3.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001967",
                "name": "ns",
                "type": "ObjectExpression",
                "value": "{\"Foo\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "ns",
        "longname": "ns",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                29,
                159
            ],
            "filename": "funcExpression3.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001970",
                "name": "Foo",
                "type": "FunctionExpression",
                "value": "Bar"
            },
            "vars": {
                "var1": "ns.Foo~var1",
                "this.member1": "ns.Foo#member1"
            }
        },
        "kind": "class",
        "name": "Foo",
        "longname": "ns.Foo",
        "memberof": "ns",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                91,
                99
            ],
            "filename": "funcExpression3.js",
            "lineno": 5,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001976",
                "name": "var1",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "document me",
        "name": "var1",
        "longname": "ns.Foo~var1",
        "kind": "member",
        "memberof": "ns.Foo",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                136,
                152
            ],
            "filename": "funcExpression3.js",
            "lineno": 7,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001980",
                "name": "this.member1",
                "type": "Literal",
                "value": 2,
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "member1",
        "longname": "ns.Foo#member1",
        "kind": "member",
        "memberof": "ns.Foo",
        "scope": "instance"
    },
    {
        "comment": "/** @func Foo */",
        "meta": {
            "filename": "functiontag.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "function",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17,
                35
            ],
            "filename": "functiontag.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001987",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Foo",
        "longname": "Foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @method */",
        "meta": {
            "range": [
                52,
                70
            ],
            "filename": "functiontag.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001990",
                "name": "Bar",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "function",
        "name": "Bar",
        "longname": "Bar",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Generate unique IDs starting at 0. */",
        "meta": {
            "range": [
                57,
                149
            ],
            "filename": "generators.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001997",
                "name": "startsAt0",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "index": "startsAt0~index"
            }
        },
        "description": "Generate unique IDs starting at 0.",
        "name": "startsAt0",
        "longname": "startsAt0",
        "kind": "function",
        "scope": "global",
        "params": [],
        "generator": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                89,
                98
            ],
            "filename": "generators.js",
            "lineno": 5,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002001",
                "name": "index",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "startsAt0~index",
        "kind": "member",
        "memberof": "startsAt0",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** Generate unique IDs starting at 1. */",
        "meta": {
            "range": [
                197,
                301
            ],
            "filename": "generators.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002012",
                "name": "startsAt1",
                "type": "FunctionExpression",
                "value": "startsAt1"
            },
            "vars": {
                "index": "startsAt1~index"
            }
        },
        "description": "Generate unique IDs starting at 1.",
        "name": "startsAt1",
        "longname": "startsAt1",
        "kind": "function",
        "scope": "global",
        "params": [],
        "generator": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                241,
                250
            ],
            "filename": "generators.js",
            "lineno": 13,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002018",
                "name": "index",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "startsAt1~index",
        "kind": "member",
        "memberof": "startsAt1",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** Generator class. */",
        "meta": {
            "range": [
                328,
                502
            ],
            "filename": "generators.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002028",
                "name": "Generator",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Generator class.",
        "name": "Generator",
        "longname": "Generator",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/** Generate unique IDs starting at 2. */",
        "meta": {
            "range": [
                396,
                500
            ],
            "filename": "generators.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002031",
                "name": "Generator#startsAt2",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Generate unique IDs starting at 2.",
        "name": "startsAt2",
        "longname": "Generator#startsAt2",
        "kind": "function",
        "memberof": "Generator",
        "scope": "instance",
        "params": [],
        "generator": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                424,
                433
            ],
            "filename": "generators.js",
            "lineno": 23,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002036",
                "name": "index",
                "type": "Literal",
                "value": 2
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "<anonymous>~index",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Sample generator function.\n * @function idMaker\n * @generator\n */",
        "meta": {
            "filename": "generatortag.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Sample generator function.",
        "kind": "function",
        "name": "idMaker",
        "generator": true,
        "longname": "idMaker",
        "scope": "global"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                18,
                684
            ],
            "filename": "getset.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002053",
                "name": "Person",
                "type": "CallExpression",
                "value": ""
            }
        },
        "kind": "class",
        "name": "Person",
        "longname": "Person",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Set up initial values. */",
        "meta": {
            "range": [
                116,
                154
            ],
            "filename": "getset.js",
            "lineno": 6,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002058",
                "name": "initialize",
                "type": "FunctionExpression"
            }
        },
        "description": "Set up initial values.",
        "name": "initialize",
        "longname": "Person#initialize",
        "kind": "function",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/** Speak a message. */",
        "meta": {
            "range": [
                197,
                283
            ],
            "filename": "getset.js",
            "lineno": 10,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002062",
                "name": "say",
                "type": "FunctionExpression"
            }
        },
        "description": "Speak a message.",
        "name": "say",
        "longname": "Person#say",
        "kind": "function",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/**\n         * The name of the person.\n         * @type {string}\n         */",
        "meta": {
            "range": [
                379,
                432
            ],
            "filename": "getset.js",
            "lineno": 18,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002074",
                "name": "name",
                "paramnames": []
            }
        },
        "description": "The name of the person.",
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "name",
        "longname": "Person#name",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/**\n         * @type {string}\n         * @param val\n         */",
        "meta": {
            "range": [
                515,
                571
            ],
            "filename": "getset.js",
            "lineno": 26,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002081",
                "name": "name",
                "paramnames": [
                    "val"
                ]
            },
            "vars": {
                "this._name": "Person#name#_name"
            }
        },
        "type": {
            "names": [
                "string"
            ]
        },
        "params": [
            {
                "name": "val"
            }
        ],
        "name": "name",
        "longname": "Person#name",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                543,
                560
            ],
            "filename": "getset.js",
            "lineno": 27,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002086",
                "name": "this._name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_name",
        "longname": "Person#name#_name",
        "kind": "member",
        "memberof": "Person#name",
        "scope": "instance"
    },
    {
        "comment": "/**\n         * @type {number}\n         */",
        "meta": {
            "range": [
                632,
                676
            ],
            "filename": "getset.js",
            "lineno": 33,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002091",
                "name": "age",
                "paramnames": []
            }
        },
        "type": {
            "names": [
                "number"
            ]
        },
        "name": "age",
        "longname": "Person#age",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/** Employee class. */",
        "meta": {
            "range": [
                23,
                241
            ],
            "filename": "getset2.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002098",
                "name": "Employee",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Employee class.",
        "name": "Employee",
        "longname": "Employee",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/**\n     * Location.\n     * @type {string}\n     */",
        "meta": {
            "range": [
                99,
                152
            ],
            "filename": "getset2.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002101",
                "name": "Employee#location",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Location.",
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "location",
        "longname": "Employee#location",
        "kind": "member",
        "memberof": "Employee",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/** @type {string} */",
        "meta": {
            "range": [
                184,
                239
            ],
            "filename": "getset2.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002109",
                "name": "Employee#location",
                "type": "MethodDefinition",
                "paramnames": [
                    "loc"
                ]
            },
            "vars": {
                "": null
            }
        },
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "location",
        "longname": "Employee#location",
        "kind": "member",
        "memberof": "Employee",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                212,
                232
            ],
            "filename": "getset2.js",
            "lineno": 13,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002115",
                "name": "this._location",
                "type": "Identifier",
                "value": "loc",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_location",
        "longname": "Employee#_location",
        "kind": "member",
        "memberof": "Employee",
        "scope": "instance"
    },
    {
        "comment": "/**\n    @global\n    @constructor\n */",
        "meta": {
            "range": [
                37,
                75
            ],
            "filename": "globaltag.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002123",
                "name": "window.Bar",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "scope": "global",
        "kind": "class",
        "name": "Bar",
        "longname": "Bar"
    },
    {
        "comment": "/** @global */",
        "meta": {
            "range": [
                120,
                123
            ],
            "filename": "globaltag.js",
            "lineno": 10,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002139",
                "name": "foo"
            }
        },
        "scope": "global",
        "name": "foo",
        "longname": "foo",
        "kind": "member",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                130,
                147
            ],
            "filename": "globaltag.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002142",
                "name": "foo",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": "hello foo",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "foo",
        "longname": "<anonymous>~foo",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                168
            ],
            "filename": "globaltag.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002146",
                "name": "this.foo",
                "type": "Identifier",
                "value": "foo",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "foo",
        "longname": "foo",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * @classdesc Toaster singleton.\n * @class\n * @hideconstructor\n */",
        "meta": {
            "range": [
                75,
                808
            ],
            "filename": "hideconstructortag.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002156",
                "name": "Toaster",
                "type": "CallExpression",
                "value": ""
            }
        },
        "classdesc": "Toaster singleton.",
        "kind": "class",
        "hideconstructor": true,
        "name": "Toaster",
        "longname": "Toaster",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                107,
                122
            ],
            "filename": "hideconstructortag.js",
            "lineno": 7,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002162",
                "name": "instance",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "instance",
        "longname": "<anonymous>~instance",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                129,
                150
            ],
            "filename": "hideconstructortag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002165",
                "name": "Toaster",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Toaster",
        "longname": "<anonymous>~Toaster",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n     * Toast an item.\n     *\n     * @alias toast\n     * @memberof Toaster\n     * @instance\n     * @param {BreadyThing} item - The item to toast.\n     * @return {Toast} A toasted bready thing.\n     */",
        "meta": {
            "range": [
                364,
                407
            ],
            "filename": "hideconstructortag.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002169",
                "name": "Toaster.prototype.toast",
                "type": "FunctionExpression",
                "funcscope": "<anonymous>",
                "paramnames": [
                    "item"
                ]
            }
        },
        "description": "Toast an item.",
        "alias": "toast",
        "memberof": "Toaster",
        "scope": "instance",
        "params": [
            {
                "type": {
                    "names": [
                        "BreadyThing"
                    ]
                },
                "description": "The item to toast.",
                "name": "item"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Toast"
                    ]
                },
                "description": "A toasted bready thing."
            }
        ],
        "name": "toast",
        "longname": "Toaster#toast",
        "kind": "function"
    },
    {
        "comment": "/**\n         * Get the Toaster instance.\n         *\n         * @alias Toaster.getInstance\n         * @returns {Toaster} The Toaster instance.\n         */",
        "meta": {
            "range": [
                593,
                796
            ],
            "filename": "hideconstructortag.js",
            "lineno": 29,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002180",
                "name": "getInstance",
                "type": "FunctionExpression"
            },
            "vars": {
                "instance": "Toaster.getInstance~instance"
            }
        },
        "description": "Get the Toaster instance.",
        "alias": "Toaster.getInstance",
        "returns": [
            {
                "type": {
                    "names": [
                        "Toaster"
                    ]
                },
                "description": "The Toaster instance."
            }
        ],
        "name": "getInstance",
        "longname": "Toaster.getInstance",
        "kind": "function",
        "memberof": "Toaster",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                672,
                696
            ],
            "filename": "hideconstructortag.js",
            "lineno": 31,
            "columnno": 16,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002189",
                "name": "instance",
                "type": "NewExpression",
                "funcscope": "Toaster.getInstance",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "instance",
        "longname": "Toaster.getInstance~instance",
        "kind": "member",
        "memberof": "Toaster.getInstance",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Waffle iron singleton.\n */",
        "meta": {
            "range": [
                845,
                1476
            ],
            "filename": "hideconstructortag.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002200",
                "name": "WaffleIron",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Waffle iron singleton.",
        "name": "WaffleIron",
        "longname": "WaffleIron",
        "kind": "class",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                868,
                885
            ],
            "filename": "hideconstructortag.js",
            "lineno": 44,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002203",
                "name": "instance",
                "type": "ClassPrivateProperty"
            }
        },
        "undocumented": true,
        "name": "instance",
        "longname": "WaffleIron#instance",
        "kind": "member",
        "memberof": "WaffleIron",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "/**\n     * Create the waffle iron.\n     *\n     * @hideconstructor\n     */",
        "meta": {
            "range": [
                969,
                1302
            ],
            "filename": "hideconstructortag.js",
            "lineno": 51,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002205",
                "name": "WaffleIron",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Create the waffle iron.",
        "hideconstructor": true,
        "name": "WaffleIron",
        "longname": "WaffleIron",
        "kind": "class",
        "scope": "global",
        "params": [],
        "undocumented": true
    },
    {
        "comment": "/**\n * Waffle iron singleton.\n */",
        "meta": {
            "range": [
                845,
                1476
            ],
            "filename": "hideconstructortag.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002200",
                "name": "WaffleIron",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "name": "WaffleIron",
        "longname": "WaffleIron",
        "kind": "class",
        "classdesc": "Waffle iron singleton.",
        "scope": "global",
        "description": "Create the waffle iron.",
        "hideconstructor": true
    },
    {
        "comment": "/**\n         * Cook a waffle.\n         *\n         * @param {Batter} batter - The waffle batter.\n         * @return {Waffle} The cooked waffle.\n         */",
        "meta": {
            "range": [
                1232,
                1263
            ],
            "filename": "hideconstructortag.js",
            "lineno": 62,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002221",
                "name": "this.cook",
                "type": "FunctionExpression",
                "paramnames": [
                    "batter"
                ]
            }
        },
        "description": "Cook a waffle.",
        "params": [
            {
                "type": {
                    "names": [
                        "Batter"
                    ]
                },
                "description": "The waffle batter.",
                "name": "batter"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Waffle"
                    ]
                },
                "description": "The cooked waffle."
            }
        ],
        "name": "cook",
        "longname": "WaffleIron#cook",
        "kind": "function",
        "memberof": "WaffleIron",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1274,
                1295
            ],
            "filename": "hideconstructortag.js",
            "lineno": 64,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002229",
                "name": "this.",
                "type": "ThisExpression",
                "value": "this",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "WaffleIron",
        "longname": "WaffleIron.WaffleIron",
        "kind": "member",
        "memberof": "WaffleIron",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Get the WaffleIron instance.\n     *\n     * @return {WaffleIron} The WaffleIron instance.\n     */",
        "meta": {
            "range": [
                1420,
                1474
            ],
            "filename": "hideconstructortag.js",
            "lineno": 72,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002235",
                "name": "WaffleIron#getInstance",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Get the WaffleIron instance.",
        "returns": [
            {
                "type": {
                    "names": [
                        "WaffleIron"
                    ]
                },
                "description": "The WaffleIron instance."
            }
        ],
        "name": "getInstance",
        "longname": "WaffleIron#getInstance",
        "kind": "function",
        "memberof": "WaffleIron",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n    @ignore\n*/",
        "meta": {
            "range": [
                19,
                39
            ],
            "filename": "ignoretag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002244",
                "name": "foo",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "ignore": true,
        "name": "foo",
        "longname": "foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @ignore value that shouldn't be here\n*/",
        "meta": {
            "range": [
                48,
                68
            ],
            "filename": "ignoretag2.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002250",
                "name": "foo",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "ignore": true,
        "name": "foo",
        "longname": "foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                17
            ],
            "filename": "implicitcasttag.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002256",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Foo",
        "longname": "Foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @type {string}\n * @implicitCast\n */",
        "meta": {
            "range": [
                62,
                79
            ],
            "filename": "implicitcasttag.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002260",
                "name": "Foo.prototype.bar",
                "type": "MemberExpression"
            }
        },
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "bar",
        "longname": "Foo#bar",
        "kind": "member",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Parent class.\n * @class\n */",
        "meta": {
            "range": [
                35,
                59
            ],
            "filename": "inheritdoctag.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002267",
                "name": "Connection",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Parent class.",
        "kind": "class",
        "name": "Connection",
        "longname": "Connection",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Open the connection.\n * @virtual\n */",
        "meta": {
            "range": [
                105,
                146
            ],
            "filename": "inheritdoctag.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002271",
                "name": "Connection.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Open the connection.",
        "virtual": true,
        "name": "open",
        "longname": "Connection#open",
        "kind": "function",
        "memberof": "Connection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Close the connection.\n */",
        "meta": {
            "range": [
                182,
                224
            ],
            "filename": "inheritdoctag.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002280",
                "name": "Connection.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Close the connection.",
        "name": "close",
        "longname": "Connection#close",
        "kind": "function",
        "memberof": "Connection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Read the specified number of bytes from the connection.\n *\n * @function Connection#read\n * @param {number} bytes - The number of bytes to read.\n * @return {Buffer} The bytes that were read.\n */",
        "meta": {
            "filename": "inheritdoctag.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Read the specified number of bytes from the connection.",
        "kind": "function",
        "name": "read",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of bytes to read.",
                "name": "bytes"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "The bytes that were read."
            }
        ],
        "memberof": "Connection",
        "longname": "Connection#read",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                428,
                474
            ],
            "filename": "inheritdoctag.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002289",
                "name": "Connection.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "undocumented": true,
        "name": "read",
        "longname": "Connection#read",
        "kind": "function",
        "memberof": "Connection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Child class.\n * @class\n * @extends Connection\n */",
        "meta": {
            "range": [
                534,
                554
            ],
            "filename": "inheritdoctag.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002298",
                "name": "Socket",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Child class.",
        "kind": "class",
        "augments": [
            "Connection"
        ],
        "name": "Socket",
        "longname": "Socket",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @inheritdoc */",
        "meta": {
            "range": [
                575,
                612
            ],
            "filename": "inheritdoctag.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002302",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "inheritdoc": "",
        "name": "open",
        "longname": "Socket#open",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "ignore": true
    },
    {
        "comment": "/**\n * Close the socket.\n * @param {string} message - A message explaining why the socket is being closed.\n * @inheritdoc\n */",
        "meta": {
            "range": [
                741,
                779
            ],
            "filename": "inheritdoctag.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002311",
                "name": "Socket.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Close the socket.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A message explaining why the socket is being closed.",
                "name": "message"
            }
        ],
        "inheritdoc": "",
        "name": "close",
        "longname": "Socket#close",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "ignore": true
    },
    {
        "comment": "/** @inheritdoc */",
        "meta": {
            "range": [
                801,
                843
            ],
            "filename": "inheritdoctag.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002320",
                "name": "Socket.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "inheritdoc": "",
        "name": "read",
        "longname": "Socket#read",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "ignore": true
    },
    {
        "comment": "/** Inline Comment 1 */",
        "meta": {
            "range": [
                24,
                48
            ],
            "filename": "inlinecomment.js",
            "lineno": 1,
            "columnno": 24,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002332",
                "name": "this.test",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Inline Comment 1",
        "name": "test",
        "longname": "test",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/** Inline Comment 2 */",
        "meta": {
            "range": [
                73,
                98
            ],
            "filename": "inlinecomment.js",
            "lineno": 2,
            "columnno": 24,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002339",
                "name": "this.test2",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Inline Comment 2",
        "name": "test2",
        "longname": "test2",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                67
            ],
            "filename": "inlineparamcomment.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002348",
                "name": "ns",
                "type": "ObjectExpression",
                "value": "{\"foo\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "ns",
        "longname": "ns",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15,
                65
            ],
            "filename": "inlineparamcomment.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002351",
                "name": "foo",
                "type": "FunctionExpression"
            },
            "vars": {
                "a": "ns.foo.a",
                "b": "ns.foo.b"
            }
        },
        "undocumented": true,
        "name": "foo",
        "longname": "ns.foo",
        "kind": "function",
        "memberof": "ns",
        "scope": "static",
        "params": [
            {
                "type": {},
                "description": "",
                "name": "a"
            },
            {
                "type": {},
                "description": "",
                "name": "b"
            }
        ]
    },
    {
        "comment": "/** Number */",
        "meta": {
            "range": [
                43,
                44
            ],
            "filename": "inlineparamcomment.js",
            "lineno": 2,
            "columnno": 32,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002353",
                "name": "a",
                "type": "Identifier"
            }
        },
        "description": "Number",
        "name": "a",
        "longname": "ns.foo.a",
        "kind": "param",
        "memberof": "ns.foo",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "/** Number */",
        "meta": {
            "range": [
                60,
                61
            ],
            "filename": "inlineparamcomment.js",
            "lineno": 2,
            "columnno": 49,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002354",
                "name": "b",
                "type": "Identifier"
            }
        },
        "description": "Number",
        "name": "b",
        "longname": "ns.foo.b",
        "kind": "param",
        "memberof": "ns.foo",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                95
            ],
            "filename": "inlineparamcomment2.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002359",
                "name": "ns",
                "type": "ObjectExpression",
                "value": "{\"foo\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "ns",
        "longname": "ns",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15,
                93
            ],
            "filename": "inlineparamcomment2.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002362",
                "name": "foo",
                "type": "FunctionExpression"
            },
            "vars": {
                "bar": null,
                "baz": "ns.foo.baz"
            }
        },
        "undocumented": true,
        "name": "foo",
        "longname": "ns.foo",
        "kind": "function",
        "memberof": "ns",
        "scope": "static",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "",
                "name": "bar"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "",
                "name": "baz"
            }
        ]
    },
    {
        "comment": "/** @type {string} */",
        "meta": {
            "range": [
                51,
                59
            ],
            "filename": "inlineparamcomment2.js",
            "lineno": 2,
            "columnno": 40,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002364",
                "name": "bar",
                "type": "AssignmentPattern",
                "value": "bar"
            }
        },
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "bar",
        "longname": "bar",
        "kind": "param",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "/** @type {number} */",
        "meta": {
            "range": [
                83,
                89
            ],
            "filename": "inlineparamcomment2.js",
            "lineno": 2,
            "columnno": 72,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002367",
                "name": "baz",
                "type": "RestElement"
            }
        },
        "type": {
            "names": [
                "number"
            ]
        },
        "name": "baz",
        "longname": "ns.foo.baz",
        "kind": "param",
        "memberof": "ns.foo",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                129
            ],
            "filename": "inner.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002372",
                "name": "sendMessage",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "text"
                ]
            },
            "vars": {
                "encoding": "sendMessage~encoding",
                "encrypt": "sendMessage~encrypt"
            }
        },
        "undocumented": true,
        "name": "sendMessage",
        "longname": "sendMessage",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                60,
                77
            ],
            "filename": "inner.js",
            "lineno": 3,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002377",
                "name": "encoding",
                "type": "Literal",
                "value": "utf8"
            }
        },
        "description": "document me",
        "name": "encoding",
        "longname": "sendMessage~encoding",
        "kind": "member",
        "memberof": "sendMessage",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                107,
                127
            ],
            "filename": "inner.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002380",
                "name": "encrypt",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "encrypt",
        "longname": "sendMessage~encrypt",
        "kind": "function",
        "memberof": "sendMessage",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                20,
                271
            ],
            "filename": "innerscope.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002385",
                "name": "Message",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "to"
                ]
            },
            "vars": {
                "headers": "Message~headers",
                "response": "Message~response",
                "headers.to": "Message~headers.to",
                "": null
            }
        },
        "kind": "class",
        "name": "Message",
        "longname": "Message",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                64
            ],
            "filename": "innerscope.js",
            "lineno": 4,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002390",
                "name": "headers",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "headers",
        "longname": "Message~headers",
        "kind": "member",
        "memberof": "Message",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                74,
                82
            ],
            "filename": "innerscope.js",
            "lineno": 5,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002393",
                "name": "response"
            }
        },
        "undocumented": true,
        "name": "response",
        "longname": "Message~response",
        "kind": "member",
        "memberof": "Message",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                112,
                127
            ],
            "filename": "innerscope.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002396",
                "name": "headers.to",
                "type": "Identifier",
                "funcscope": "Message",
                "value": "to",
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "to",
        "longname": "Message~headers.to",
        "kind": "member",
        "memberof": "Message~headers",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                183,
                204
            ],
            "filename": "innerscope.js",
            "lineno": 12,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002406",
                "name": "response.code",
                "type": "Literal",
                "funcscope": "Message",
                "value": "200",
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "code",
        "longname": "Message~response.code",
        "kind": "member",
        "memberof": "Message~response",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                242,
                259
            ],
            "filename": "innerscope.js",
            "lineno": 15,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002412",
                "name": "headers.from",
                "type": "Literal",
                "funcscope": "Message",
                "value": "",
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "from",
        "longname": "Message~headers.from",
        "kind": "member",
        "memberof": "Message~headers",
        "scope": "static"
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                20,
                283
            ],
            "filename": "innerscope2.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002419",
                "name": "Message",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "to"
                ]
            },
            "vars": {
                "headers": "Message~headers",
                "headers.to": "Message~headers.to",
                "": null
            }
        },
        "kind": "class",
        "name": "Message",
        "longname": "Message",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                64
            ],
            "filename": "innerscope2.js",
            "lineno": 4,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002424",
                "name": "headers",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "headers",
        "longname": "Message~headers",
        "kind": "member",
        "memberof": "Message",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                94,
                109
            ],
            "filename": "innerscope2.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002428",
                "name": "headers.to",
                "type": "Identifier",
                "funcscope": "Message",
                "value": "to",
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "to",
        "longname": "Message~headers.to",
        "kind": "member",
        "memberof": "Message~headers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                142,
                216
            ],
            "filename": "innerscope2.js",
            "lineno": 10,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002438",
                "name": "headers",
                "type": "ObjectExpression",
                "value": "{\"cache\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "headers",
        "longname": "<anonymous>~headers",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                197,
                206
            ],
            "filename": "innerscope2.js",
            "lineno": 12,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002441",
                "name": "cache",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "description": "document me",
        "name": "cache",
        "longname": "<anonymous>~headers.cache",
        "kind": "member",
        "memberof": "<anonymous>~headers",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                254,
                271
            ],
            "filename": "innerscope2.js",
            "lineno": 16,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002444",
                "name": "headers.from",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "from",
        "longname": "<anonymous>~headers.from",
        "kind": "member",
        "memberof": "<anonymous>~headers",
        "scope": "static"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                14,
                31
            ],
            "filename": "instanceproperty.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002451",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Set the bar. */",
        "meta": {
            "range": [
                53,
                133
            ],
            "filename": "instanceproperty.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002455",
                "name": "Foo.prototype.setBar",
                "type": "FunctionExpression",
                "paramnames": [
                    "bar"
                ]
            },
            "vars": {
                "this.bar": "Foo#bar"
            }
        },
        "description": "Set the bar.",
        "name": "setBar",
        "longname": "Foo#setBar",
        "kind": "function",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "/** The bar. */",
        "meta": {
            "range": [
                116,
                130
            ],
            "filename": "instanceproperty.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002465",
                "name": "this.bar",
                "type": "Identifier",
                "value": "bar",
                "paramnames": []
            }
        },
        "description": "The bar.",
        "name": "bar",
        "longname": "Foo#bar",
        "kind": "member",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @interface\n */",
        "meta": {
            "range": [
                37,
                58
            ],
            "filename": "interface-implements.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002474",
                "name": "ITester",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "interface",
        "name": "ITester",
        "longname": "ITester",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @type {string}\n */",
        "meta": {
            "range": [
                86,
                117
            ],
            "filename": "interface-implements.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002478",
                "name": "ITester.prototype.hello",
                "type": "Literal",
                "value": "123",
                "paramnames": []
            }
        },
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "hello",
        "longname": "ITester#hello",
        "kind": "member",
        "memberof": "ITester",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @enum\n */",
        "meta": {
            "range": [
                137,
                185
            ],
            "filename": "interface-implements.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002486",
                "name": "ITester.type",
                "type": "ObjectExpression",
                "value": "{\"KEYDOWN\":9,\"KEYUP\":11}",
                "paramnames": []
            }
        },
        "kind": "member",
        "isEnum": true,
        "name": "type",
        "longname": "ITester.type",
        "memberof": "ITester",
        "scope": "static",
        "properties": [
            {
                "comment": "",
                "meta": {
                    "range": [
                        158,
                        168
                    ],
                    "filename": "interface-implements.js",
                    "lineno": 17,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100002491",
                        "name": "KEYDOWN",
                        "type": "Literal",
                        "value": 9
                    }
                },
                "name": "KEYDOWN",
                "longname": "ITester.type.KEYDOWN",
                "kind": "member",
                "memberof": "ITester.type",
                "scope": "static",
                "defaultvalue": 9
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        174,
                        183
                    ],
                    "filename": "interface-implements.js",
                    "lineno": 18,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100002493",
                        "name": "KEYUP",
                        "type": "Literal",
                        "value": 11
                    }
                },
                "name": "KEYUP",
                "longname": "ITester.type.KEYUP",
                "kind": "member",
                "memberof": "ITester.type",
                "scope": "static",
                "defaultvalue": 11
            }
        ]
    },
    {
        "comment": "",
        "meta": {
            "range": [
                158,
                168
            ],
            "filename": "interface-implements.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002491",
                "name": "KEYDOWN",
                "type": "Literal",
                "value": 9
            }
        },
        "name": "KEYDOWN",
        "longname": "ITester.type.KEYDOWN",
        "kind": "member",
        "memberof": "ITester.type",
        "scope": "static",
        "defaultvalue": 9
    },
    {
        "comment": "",
        "meta": {
            "range": [
                174,
                183
            ],
            "filename": "interface-implements.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002493",
                "name": "KEYUP",
                "type": "Literal",
                "value": 11
            }
        },
        "name": "KEYUP",
        "longname": "ITester.type.KEYUP",
        "kind": "member",
        "memberof": "ITester.type",
        "scope": "static",
        "defaultvalue": 11
    },
    {
        "comment": "/**\n * before each method\n */",
        "meta": {
            "range": [
                218,
                262
            ],
            "filename": "interface-implements.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002496",
                "name": "ITester.prototype.beforeEach",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "before each method",
        "name": "beforeEach",
        "longname": "ITester#beforeEach",
        "kind": "function",
        "memberof": "ITester",
        "scope": "instance"
    },
    {
        "comment": "/**\n * it method.\n */",
        "meta": {
            "range": [
                287,
                323
            ],
            "filename": "interface-implements.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002505",
                "name": "ITester.prototype.it",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "it method.",
        "name": "it",
        "longname": "ITester#it",
        "kind": "function",
        "memberof": "ITester",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @constructor\n * @implements {ITester}\n */",
        "meta": {
            "range": [
                375,
                397
            ],
            "filename": "interface-implements.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002513",
                "name": "MyTester",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "implements": [
            "ITester"
        ],
        "name": "MyTester",
        "longname": "MyTester",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @type {string} */",
        "meta": {
            "range": [
                421,
                453
            ],
            "filename": "interface-implements.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002517",
                "name": "MyTester.prototype.hello",
                "type": "Literal",
                "value": "234",
                "paramnames": []
            }
        },
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "hello",
        "longname": "MyTester#hello",
        "kind": "member",
        "memberof": "MyTester",
        "scope": "instance",
        "implements": [
            "ITester#hello"
        ]
    },
    {
        "comment": "/** @enum */",
        "meta": {
            "range": [
                469,
                558
            ],
            "filename": "interface-implements.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002525",
                "name": "MyTester.type",
                "type": "ObjectExpression",
                "value": "{\"KEYDOWN\":9,\"KEYUP\":11,\"KEYLEFT\":10}",
                "paramnames": []
            }
        },
        "kind": "member",
        "isEnum": true,
        "name": "type",
        "longname": "MyTester.type",
        "memberof": "MyTester",
        "scope": "static",
        "properties": [
            {
                "comment": "/** keyboard up */",
                "meta": {
                    "range": [
                        514,
                        524
                    ],
                    "filename": "interface-implements.js",
                    "lineno": 43,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100002530",
                        "name": "KEYDOWN",
                        "type": "Literal",
                        "value": 9
                    }
                },
                "description": "keyboard up",
                "name": "KEYDOWN",
                "longname": "MyTester.type.KEYDOWN",
                "kind": "member",
                "memberof": "MyTester.type",
                "scope": "static",
                "defaultvalue": 9
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        530,
                        539
                    ],
                    "filename": "interface-implements.js",
                    "lineno": 44,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100002532",
                        "name": "KEYUP",
                        "type": "Literal",
                        "value": 11
                    }
                },
                "name": "KEYUP",
                "longname": "MyTester.type.KEYUP",
                "kind": "member",
                "memberof": "MyTester.type",
                "scope": "static",
                "defaultvalue": 11
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        545,
                        556
                    ],
                    "filename": "interface-implements.js",
                    "lineno": 45,
                    "columnno": 4,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100002534",
                        "name": "KEYLEFT",
                        "type": "Literal",
                        "value": 10
                    }
                },
                "name": "KEYLEFT",
                "longname": "MyTester.type.KEYLEFT",
                "kind": "member",
                "memberof": "MyTester.type",
                "scope": "static",
                "defaultvalue": 10
            }
        ]
    },
    {
        "comment": "/** keyboard up */",
        "meta": {
            "range": [
                514,
                524
            ],
            "filename": "interface-implements.js",
            "lineno": 43,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002530",
                "name": "KEYDOWN",
                "type": "Literal",
                "value": 9
            }
        },
        "description": "keyboard up",
        "name": "KEYDOWN",
        "longname": "MyTester.type.KEYDOWN",
        "kind": "member",
        "memberof": "MyTester.type",
        "scope": "static",
        "defaultvalue": 9
    },
    {
        "comment": "",
        "meta": {
            "range": [
                530,
                539
            ],
            "filename": "interface-implements.js",
            "lineno": 44,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002532",
                "name": "KEYUP",
                "type": "Literal",
                "value": 11
            }
        },
        "name": "KEYUP",
        "longname": "MyTester.type.KEYUP",
        "kind": "member",
        "memberof": "MyTester.type",
        "scope": "static",
        "defaultvalue": 11
    },
    {
        "comment": "",
        "meta": {
            "range": [
                545,
                556
            ],
            "filename": "interface-implements.js",
            "lineno": 45,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002534",
                "name": "KEYLEFT",
                "type": "Literal",
                "value": 10
            }
        },
        "name": "KEYLEFT",
        "longname": "MyTester.type.KEYLEFT",
        "kind": "member",
        "memberof": "MyTester.type",
        "scope": "static",
        "defaultvalue": 10
    },
    {
        "comment": "/**\n * my tester's beforeEach method.\n */",
        "meta": {
            "range": [
                602,
                647
            ],
            "filename": "interface-implements.js",
            "lineno": 50,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002537",
                "name": "MyTester.prototype.beforeEach",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "my tester's beforeEach method.",
        "name": "beforeEach",
        "longname": "MyTester#beforeEach",
        "kind": "function",
        "memberof": "MyTester",
        "scope": "instance",
        "implements": [
            "ITester#beforeEach"
        ]
    },
    {
        "comment": "",
        "meta": {
            "range": [
                649,
                686
            ],
            "filename": "interface-implements.js",
            "lineno": 51,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002546",
                "name": "MyTester.prototype.it",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "it",
        "longname": "MyTester#it",
        "kind": "function",
        "memberof": "MyTester",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @interface\n */",
        "meta": {
            "range": [
                711,
                732
            ],
            "filename": "interface-implements.js",
            "lineno": 56,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002554",
                "name": "IWorker",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "interface",
        "name": "IWorker",
        "longname": "IWorker",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Interface for doing some work. */",
        "meta": {
            "range": [
                771,
                809
            ],
            "filename": "interface-implements.js",
            "lineno": 58,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002558",
                "name": "IWorker.prototype.work",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Interface for doing some work.",
        "name": "work",
        "longname": "IWorker#work",
        "kind": "function",
        "memberof": "IWorker",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @constructor\n * @implements {IWorker}\n */",
        "meta": {
            "range": [
                861,
                883
            ],
            "filename": "interface-implements.js",
            "lineno": 64,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002566",
                "name": "MyWorker",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "implements": [
            "IWorker"
        ],
        "name": "MyWorker",
        "longname": "MyWorker",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Do some work. */",
        "meta": {
            "range": [
                905,
                944
            ],
            "filename": "interface-implements.js",
            "lineno": 66,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002570",
                "name": "MyWorker.prototype.work",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Do some work.",
        "name": "work",
        "longname": "MyWorker#work",
        "kind": "function",
        "memberof": "MyWorker",
        "scope": "instance",
        "implements": [
            "IWorker#work"
        ]
    },
    {
        "comment": "",
        "meta": {
            "range": [
                946,
                988
            ],
            "filename": "interface-implements.js",
            "lineno": 67,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002579",
                "name": "MyWorker.prototype.process",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "process",
        "longname": "MyWorker#process",
        "kind": "function",
        "memberof": "MyWorker",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @constructor\n * @implements {IWorker}\n */",
        "meta": {
            "range": [
                1040,
                1072
            ],
            "filename": "interface-implements.js",
            "lineno": 73,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002587",
                "name": "MyIncompleteWorker",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "implements": [
            "IWorker"
        ],
        "name": "MyIncompleteWorker",
        "longname": "MyIncompleteWorker",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Virtual doclet for an interface.\n *\n * @interface VirtualInterface\n */",
        "meta": {
            "filename": "interfacetag2.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Virtual doclet for an interface.",
        "kind": "interface",
        "name": "VirtualInterface",
        "longname": "VirtualInterface",
        "scope": "global"
    },
    {
        "comment": "/**\n * My structural interface.\n *\n * @record\n */",
        "meta": {
            "range": [
                50,
                85
            ],
            "filename": "interfacetag3.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002594",
                "name": "MyStructuralInterface",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "My structural interface.",
        "kind": "interface",
        "name": "MyStructuralInterface",
        "longname": "MyStructuralInterface",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                42
            ],
            "filename": "jsx.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002600",
                "name": "myDivElement",
                "type": "JSXElement",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "myDivElement",
        "longname": "myDivElement",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @kind function */",
        "meta": {
            "range": [
                26,
                27
            ],
            "filename": "kindtag.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002622",
                "name": "x"
            }
        },
        "kind": "function",
        "name": "x",
        "longname": "x",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                18,
                364
            ],
            "filename": "lends.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002627",
                "name": "Person",
                "type": "CallExpression",
                "value": ""
            }
        },
        "kind": "class",
        "name": "Person",
        "longname": "Person",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Set up initial values. */",
        "meta": {
            "range": [
                116,
                227
            ],
            "filename": "lends.js",
            "lineno": 6,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002632",
                "name": "initialize",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.name": "Person#name"
            }
        },
        "description": "Set up initial values.",
        "name": "initialize",
        "longname": "Person#initialize",
        "kind": "function",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/** The name of the person. */",
        "meta": {
            "range": [
                200,
                216
            ],
            "filename": "lends.js",
            "lineno": 8,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002637",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "description": "The name of the person.",
        "name": "name",
        "longname": "Person#name",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/** Speak a message. */",
        "meta": {
            "range": [
                270,
                356
            ],
            "filename": "lends.js",
            "lineno": 12,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002642",
                "name": "say",
                "type": "FunctionExpression"
            }
        },
        "description": "Speak a message.",
        "name": "say",
        "longname": "Person#say",
        "kind": "function",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5,
                388
            ],
            "filename": "lends2.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002657",
                "name": "Person",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Person",
        "longname": "Person",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Construct a Person.\n            @constructs Person\n         */",
        "meta": {
            "range": [
                140,
                251
            ],
            "filename": "lends2.js",
            "lineno": 8,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002662",
                "name": "initialize",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.name": "Person#name"
            }
        },
        "description": "Construct a Person.",
        "alias": "Person",
        "kind": "class",
        "name": "Person",
        "longname": "Person",
        "scope": "global"
    },
    {
        "comment": "/** The name of the person. */",
        "meta": {
            "range": [
                224,
                240
            ],
            "filename": "lends2.js",
            "lineno": 10,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002667",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "description": "The name of the person.",
        "name": "name",
        "longname": "Person#name",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/** Speak a message. */",
        "meta": {
            "range": [
                294,
                380
            ],
            "filename": "lends2.js",
            "lineno": 14,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002672",
                "name": "say",
                "type": "FunctionExpression"
            }
        },
        "description": "Speak a message.",
        "name": "say",
        "longname": "Person#say",
        "kind": "function",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                18,
                376
            ],
            "filename": "lends3.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002687",
                "name": "Person",
                "type": "CallExpression",
                "value": ""
            }
        },
        "kind": "class",
        "name": "Person",
        "longname": "Person",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Set up initial values. */",
        "meta": {
            "range": [
                128,
                239
            ],
            "filename": "lends3.js",
            "lineno": 8,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002692",
                "name": "initialize",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.name": "Person#name"
            }
        },
        "description": "Set up initial values.",
        "name": "initialize",
        "longname": "Person#initialize",
        "kind": "function",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/** The name of the person. */",
        "meta": {
            "range": [
                212,
                228
            ],
            "filename": "lends3.js",
            "lineno": 10,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002697",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "description": "The name of the person.",
        "name": "name",
        "longname": "Person#name",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/** Speak a message. */",
        "meta": {
            "range": [
                282,
                368
            ],
            "filename": "lends3.js",
            "lineno": 14,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002702",
                "name": "say",
                "type": "FunctionExpression"
            }
        },
        "description": "Speak a message.",
        "name": "say",
        "longname": "Person#say",
        "kind": "function",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                33,
                381
            ],
            "filename": "lends4.js",
            "lineno": 2,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002723",
                "name": "Person",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Person",
        "longname": "<anonymous>~Person",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** @constructs */",
        "meta": {
            "range": [
                145,
                221
            ],
            "filename": "lends4.js",
            "lineno": 6,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002728",
                "name": "initialize",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.name": "Person#name"
            }
        },
        "alias": "Person",
        "kind": "class",
        "name": "Person",
        "longname": "Person",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                190,
                206
            ],
            "filename": "lends4.js",
            "lineno": 7,
            "columnno": 16,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002733",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "Person#name",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/** Speak a message. */",
        "meta": {
            "range": [
                271,
                365
            ],
            "filename": "lends4.js",
            "lineno": 10,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002738",
                "name": "say",
                "type": "FunctionExpression"
            }
        },
        "description": "Speak a message.",
        "name": "say",
        "longname": "Person#say",
        "kind": "function",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * @class Person\n     */",
        "meta": {
            "filename": "lends5.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "class",
        "name": "Person",
        "longname": "Person",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                55,
                79
            ],
            "filename": "lends5.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002759",
                "name": "Person",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "name"
                ]
            }
        },
        "undocumented": true,
        "name": "Person",
        "longname": "<anonymous>~Person",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** Speak a message. */",
        "meta": {
            "range": [
                197,
                283
            ],
            "filename": "lends5.js",
            "lineno": 9,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002774",
                "name": "say",
                "type": "FunctionExpression"
            }
        },
        "description": "Speak a message.",
        "name": "say",
        "longname": "Person#say",
        "kind": "function",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                297,
                317
            ],
            "filename": "lends5.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002787",
                "name": "this.Person",
                "type": "Identifier",
                "value": "Person",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Person",
        "longname": "Person",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32,
                380
            ],
            "filename": "lends6.js",
            "lineno": 2,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002803",
                "name": "Person",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Person",
        "longname": "<anonymous>~Person",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** @constructs */",
        "meta": {
            "range": [
                144,
                220
            ],
            "filename": "lends6.js",
            "lineno": 6,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002808",
                "name": "initialize",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.name": "Person#name"
            }
        },
        "alias": "Person",
        "kind": "class",
        "name": "Person",
        "longname": "Person",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                189,
                205
            ],
            "filename": "lends6.js",
            "lineno": 7,
            "columnno": 16,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002813",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "Person#name",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/** Speak a message. */",
        "meta": {
            "range": [
                270,
                364
            ],
            "filename": "lends6.js",
            "lineno": 10,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002818",
                "name": "say",
                "type": "FunctionExpression"
            }
        },
        "description": "Speak a message.",
        "name": "say",
        "longname": "Person#say",
        "kind": "function",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                391,
                724
            ],
            "filename": "lends6.js",
            "lineno": 16,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002831",
                "name": "Robot",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Robot",
        "longname": "<anonymous>~Robot",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** @constructs */",
        "meta": {
            "range": [
                501,
                577
            ],
            "filename": "lends6.js",
            "lineno": 20,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002836",
                "name": "initialize",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.name": "Robot#name"
            }
        },
        "alias": "Robot",
        "kind": "class",
        "name": "Robot",
        "longname": "Robot",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                546,
                562
            ],
            "filename": "lends6.js",
            "lineno": 21,
            "columnno": 16,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002841",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "Robot#name",
        "kind": "member",
        "memberof": "Robot",
        "scope": "instance"
    },
    {
        "comment": "/** Feign emotion. */",
        "meta": {
            "range": [
                625,
                708
            ],
            "filename": "lends6.js",
            "lineno": 24,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002846",
                "name": "emote",
                "type": "FunctionExpression"
            }
        },
        "description": "Feign emotion.",
        "name": "emote",
        "longname": "Robot#emote",
        "kind": "function",
        "memberof": "Robot",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14,
                229
            ],
            "filename": "lendsglobal.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002861",
                "name": "globals",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "globals",
        "longname": "globals",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37,
                229
            ],
            "filename": "lendsglobal.js",
            "lineno": 2,
            "columnno": 27,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002862",
                "type": "ObjectExpression"
            }
        },
        "alias": "<global>",
        "undocumented": true,
        "name": "<global>",
        "longname": "",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                75,
                97
            ],
            "filename": "lendsglobal.js",
            "lineno": 5,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002863",
                "name": "test",
                "type": "FunctionExpression"
            }
        },
        "description": "document me",
        "name": "test",
        "longname": "test",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/** @namespace */",
        "meta": {
            "range": [
                134,
                223
            ],
            "filename": "lendsglobal.js",
            "lineno": 8,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002866",
                "name": "test1",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "kind": "namespace",
        "name": "test1",
        "longname": "test1",
        "scope": "global"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                189,
                213
            ],
            "filename": "lendsglobal.js",
            "lineno": 11,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002868",
                "name": "test2",
                "type": "FunctionExpression"
            }
        },
        "description": "document me",
        "name": "test2",
        "longname": "test1.test2",
        "kind": "function",
        "memberof": "test1",
        "scope": "static"
    },
    {
        "comment": "/**\n     * My example module.\n     * @exports exampleModule\n     */",
        "meta": {
            "range": [
                149,
                258
            ],
            "filename": "letkeyword.js",
            "lineno": 9,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002882",
                "name": "myModule",
                "type": "ObjectExpression",
                "value": "{\"exampleMethod\":\"\"}"
            }
        },
        "description": "My example module.",
        "alias": "exampleModule",
        "kind": "module",
        "name": "exampleModule",
        "longname": "module:exampleModule",
        "params": []
    },
    {
        "comment": "/**\n         * My example method.\n         */",
        "meta": {
            "range": [
                224,
                252
            ],
            "filename": "letkeyword.js",
            "lineno": 13,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002885",
                "name": "exampleMethod",
                "type": "FunctionExpression"
            }
        },
        "description": "My example method.",
        "name": "exampleMethod",
        "longname": "module:exampleModule.exampleMethod",
        "kind": "function",
        "memberof": "module:exampleModule",
        "scope": "static"
    },
    {
        "comment": "/** @license GPL v2 */",
        "meta": {
            "range": [
                27,
                28
            ],
            "filename": "licensetag.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002893",
                "name": "x"
            }
        },
        "license": "GPL v2",
        "name": "x",
        "longname": "x",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @namespace ns */",
        "meta": {
            "filename": "linktag.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "namespace",
        "name": "ns",
        "longname": "ns",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25,
                32
            ],
            "filename": "linktag.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002898",
                "name": "ns",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "ns",
        "longname": "ns",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n*  Similar to [the bar function]{@link bar}.\n*  @see {@link bar}\n*/",
        "meta": {
            "range": [
                107,
                131
            ],
            "filename": "linktag.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002902",
                "name": "ns.foo",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Similar to [the bar function]{@link bar}.",
        "see": [
            "{@link bar}"
        ],
        "name": "foo",
        "longname": "ns.foo",
        "kind": "function",
        "memberof": "ns",
        "scope": "static"
    },
    {
        "comment": "/**\n*  @see {@link ns.foo}\n*/",
        "meta": {
            "range": [
                163,
                181
            ],
            "filename": "linktag.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002908",
                "name": "bar",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "see": [
            "{@link ns.foo}"
        ],
        "name": "bar",
        "longname": "bar",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @module myModule */",
        "meta": {
            "filename": "listenstag.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "myModule",
        "longname": "module:myModule"
    },
    {
        "comment": "/** An event (has listeners).\n * @event MyEvent\n * @memberof module:myModule\n * @param {number} foo - asdf. */",
        "meta": {
            "filename": "listenstag.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "An event (has listeners).",
        "kind": "event",
        "name": "MyEvent",
        "memberof": "module:myModule",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "asdf.",
                "name": "foo"
            }
        ],
        "scope": "static",
        "longname": "module:myModule.event:MyEvent"
    },
    {
        "comment": "/** Another event (has listeners).\n * @event Event2\n * @memberof module:myModule~Events\n */",
        "meta": {
            "filename": "listenstag.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Another event (has listeners).",
        "kind": "event",
        "name": "Event2",
        "memberof": "module:myModule~Events",
        "scope": "static",
        "longname": "module:myModule~Events.event:Event2"
    },
    {
        "comment": "/** An event with no listeners.\n * @event module:myModule#Event3 */",
        "meta": {
            "filename": "listenstag.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "An event with no listeners.",
        "kind": "event",
        "name": "Event3",
        "memberof": "module:myModule",
        "longname": "module:myModule#event:Event3",
        "scope": "instance"
    },
    {
        "comment": "/** A handler.\n * @listens module:myModule.MyEvent\n * @listens module:myModule~Events.event:Event2\n * @listens fakeEvent\n */",
        "meta": {
            "range": [
                262,
                286
            ],
            "filename": "listenstag.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002913",
                "name": "MyHandler",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "A handler.",
        "listens": [
            "module:myModule.event:MyEvent",
            "module:myModule~Events.event:Event2",
            "event:fakeEvent"
        ],
        "name": "MyHandler",
        "longname": "module:myModule~MyHandler",
        "kind": "function",
        "scope": "inner",
        "memberof": "module:myModule",
        "params": []
    },
    {
        "comment": "/** Another handler.\n * @listens module:myModule.MyEvent\n */",
        "meta": {
            "range": [
                349,
                378
            ],
            "filename": "listenstag.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002916",
                "name": "AnotherHandler",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Another handler.",
        "listens": [
            "module:myModule.event:MyEvent"
        ],
        "name": "AnotherHandler",
        "longname": "module:myModule~AnotherHandler",
        "kind": "function",
        "scope": "inner",
        "memberof": "module:myModule",
        "params": []
    },
    {
        "comment": "/** a namespace.\n * @namespace */",
        "meta": {
            "range": [
                418,
                430
            ],
            "filename": "listenstag.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002920",
                "name": "Events",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "description": "a namespace.",
        "kind": "namespace",
        "name": "Events",
        "longname": "module:myModule~Events",
        "scope": "inner",
        "memberof": "module:myModule",
        "params": []
    },
    {
        "comment": "/** @constructor\n    @memberof mathlib\n */",
        "meta": {
            "range": [
                43,
                103
            ],
            "filename": "memberoftag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002925",
                "name": "Data",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this.point": "mathlib.Data#point"
            }
        },
        "kind": "class",
        "memberof": "mathlib",
        "name": "Data",
        "longname": "mathlib.Data",
        "scope": "static",
        "params": []
    },
    {
        "comment": "/** @member */",
        "meta": {
            "range": [
                85,
                100
            ],
            "filename": "memberoftag.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002929",
                "name": "this.point",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "kind": "member",
        "name": "point",
        "longname": "mathlib.Data#point",
        "memberof": "mathlib.Data",
        "scope": "instance"
    },
    {
        "comment": "/** @namespace */",
        "meta": {
            "range": [
                123,
                145
            ],
            "filename": "memberoftag.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002935",
                "name": "mathlib",
                "type": "ObjectExpression",
                "value": "{\"Data\":\"\"}",
                "paramnames": []
            }
        },
        "kind": "namespace",
        "name": "mathlib",
        "longname": "mathlib",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                134,
                144
            ],
            "filename": "memberoftag.js",
            "lineno": 11,
            "columnno": 11,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002938",
                "name": "Data",
                "type": "Identifier",
                "value": "Data"
            }
        },
        "undocumented": true,
        "name": "Data",
        "longname": "mathlib.Data",
        "kind": "member",
        "memberof": "mathlib",
        "scope": "static"
    },
    {
        "comment": "/** @memberof Observable */",
        "meta": {
            "range": [
                76,
                85
            ],
            "filename": "memberoftag2.js",
            "lineno": 5,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002947",
                "name": "cache",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "memberof": "Observable",
        "name": "cache",
        "longname": "Observable.cache",
        "kind": "member",
        "scope": "static"
    },
    {
        "comment": "/** @memberof Observable.prototype */",
        "meta": {
            "range": [
                142,
                167
            ],
            "filename": "memberoftag2.js",
            "lineno": 8,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002949",
                "name": "publish",
                "type": "FunctionExpression"
            }
        },
        "memberof": "Observable",
        "name": "publish",
        "longname": "Observable#publish",
        "kind": "function",
        "scope": "instance"
    },
    {
        "comment": "/** @module terrain\n    @example\n        var terrain = require('terrain'),\n            forest = new terrain.Forest(),\n            tree = new forest.Tree();\n*/",
        "meta": {
            "filename": "memberoftag3.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "terrain",
        "examples": [
            "var terrain = require('terrain'),\n            forest = new terrain.Forest(),\n            tree = new forest.Tree();"
        ],
        "longname": "module:terrain"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                174,
                203
            ],
            "filename": "memberoftag3.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002956",
                "name": "exports.Forest",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "kind": "class",
        "name": "Forest",
        "longname": "module:terrain.Forest",
        "memberof": "module:terrain",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                208,
                231
            ],
            "filename": "memberoftag3.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002963",
                "name": "Forest",
                "type": "MemberExpression",
                "value": "exports.Forest"
            }
        },
        "undocumented": true,
        "name": "Forest",
        "longname": "module:terrain~Forest",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:terrain",
        "params": []
    },
    {
        "comment": "/**\n    @class\n    @memberof module:terrain\n*/",
        "meta": {
            "range": [
                281,
                356
            ],
            "filename": "memberoftag3.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002969",
                "name": "Forest.prototype.Tree",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "this.leaf": "module:terrain.Forest#Tree#leaf"
            }
        },
        "kind": "class",
        "memberof": "module:terrain",
        "name": "Forest#Tree",
        "longname": "module:terrain.Forest#Tree",
        "scope": "static"
    },
    {
        "comment": "/** A leaf */",
        "meta": {
            "range": [
                340,
                353
            ],
            "filename": "memberoftag3.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002978",
                "name": "this.leaf",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "description": "A leaf",
        "name": "leaf",
        "longname": "module:terrain.Forest#Tree#leaf",
        "kind": "member",
        "memberof": "module:terrain.Forest#Tree",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Namespace doStuff.\n * @namespace doStuff\n */",
        "meta": {
            "filename": "memberoftag4.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Namespace doStuff.",
        "kind": "namespace",
        "name": "doStuff",
        "longname": "doStuff",
        "scope": "global"
    },
    {
        "comment": "/**\n * Function with the same name as its namespace.\n * @memberof doStuff\n */",
        "meta": {
            "range": [
                131,
                152
            ],
            "filename": "memberoftag4.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002985",
                "name": "doStuff",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Function with the same name as its namespace.",
        "memberof": "doStuff",
        "name": "doStuff",
        "longname": "doStuff.doStuff",
        "kind": "function",
        "scope": "static",
        "params": []
    },
    {
        "comment": "/**\n * Function with a different name than the namespace.\n * @memberof doStuff\n */",
        "meta": {
            "range": [
                237,
                263
            ],
            "filename": "memberoftag4.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002988",
                "name": "doOtherStuff",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Function with a different name than the namespace.",
        "memberof": "doStuff",
        "name": "doOtherStuff",
        "longname": "doStuff.doOtherStuff",
        "kind": "function",
        "scope": "static",
        "params": []
    },
    {
        "comment": "/**\n * Socket class.\n * @class\n * @memberof module:network\n */",
        "meta": {
            "range": [
                78,
                98
            ],
            "filename": "memberoftag5.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002995",
                "name": "Socket",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Socket class.",
        "kind": "class",
        "memberof": "module:network",
        "name": "Socket",
        "longname": "module:network.Socket",
        "scope": "static",
        "params": []
    },
    {
        "comment": "/**\n * Open the socket.\n */",
        "meta": {
            "range": [
                128,
                165
            ],
            "filename": "memberoftag5.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002999",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Open the socket.",
        "name": "open",
        "longname": "module:network.Socket#open",
        "kind": "function",
        "memberof": "module:network.Socket",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Unique identifier for `Socket` class.\n */",
        "meta": {
            "range": [
                217,
                237
            ],
            "filename": "memberoftag5.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003008",
                "name": "Socket.uid",
                "type": "Literal",
                "value": "12345",
                "paramnames": []
            }
        },
        "description": "Unique identifier for `Socket` class.",
        "name": "uid",
        "longname": "module:network.Socket.uid",
        "kind": "member",
        "memberof": "module:network.Socket",
        "scope": "static"
    },
    {
        "comment": "/** @constructor\n*/",
        "meta": {
            "range": [
                21,
                617
            ],
            "filename": "memberoftagforced.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003015",
                "name": "Data",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this.point": "Data#point"
            }
        },
        "kind": "class",
        "name": "Data",
        "longname": "Data",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n        The current position.\n        @type {object}\n        @property {boolean} needsRevalidate Does this point need to be revalidated?\n     */",
        "meta": {
            "range": [
                197,
                614
            ],
            "filename": "memberoftagforced.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003019",
                "name": "this.point",
                "type": "ObjectExpression",
                "value": "{\"x\":0,\"y\":0,\"needsRevalidate\":false}",
                "paramnames": []
            }
        },
        "description": "The current position.",
        "type": {
            "names": [
                "object"
            ]
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Does this point need to be revalidated?",
                "name": "needsRevalidate"
            }
        ],
        "name": "point",
        "longname": "Data#point",
        "kind": "member",
        "memberof": "Data",
        "scope": "instance"
    },
    {
        "comment": "/**\n            The x coordinate of the point.\n            @type {number}\n            @name point.x\n            @memberof! Data#\n         */",
        "meta": {
            "filename": "memberoftagforced.js",
            "lineno": 12,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "The x coordinate of the point.",
        "type": {
            "names": [
                "number"
            ]
        },
        "name": "#point.x",
        "forceMemberof": true,
        "memberof": "Data",
        "longname": "Data#point.x",
        "scope": "instance",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                369,
                373
            ],
            "filename": "memberoftagforced.js",
            "lineno": 18,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003024",
                "name": "x",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "x",
        "longname": "Data#point.x",
        "kind": "member",
        "memberof": "Data#point",
        "scope": "static"
    },
    {
        "comment": "/**\n            The y coordinate of the point.\n            @type {number}\n            @name point.y\n            @memberof! Data#\n            @see {@link Data#point.x}\n         */",
        "meta": {
            "filename": "memberoftagforced.js",
            "lineno": 20,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "The y coordinate of the point.",
        "type": {
            "names": [
                "number"
            ]
        },
        "name": "#point.y",
        "forceMemberof": true,
        "memberof": "Data",
        "see": [
            "{@link Data#point.x}"
        ],
        "longname": "Data#point.y",
        "scope": "instance",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                571,
                575
            ],
            "filename": "memberoftagforced.js",
            "lineno": 27,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003026",
                "name": "y",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "y",
        "longname": "Data#point.y",
        "kind": "member",
        "memberof": "Data#point",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                586,
                608
            ],
            "filename": "memberoftagforced.js",
            "lineno": 29,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003028",
                "name": "needsRevalidate",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "needsRevalidate",
        "longname": "Data#point.needsRevalidate",
        "kind": "member",
        "memberof": "Data#point",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                623,
                775
            ],
            "filename": "memberoftagforced.js",
            "lineno": 33,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003031",
                "name": "map",
                "type": "ObjectExpression",
                "value": "{\"routes\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "map",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n        @type {Array}\n        @name map.routes\n        @memberof! <global>\n        @property {Data#point} point\n     */",
        "meta": {
            "filename": "memberoftagforced.js",
            "lineno": 34,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "type": {
            "names": [
                "Array"
            ]
        },
        "name": "map.routes",
        "forceMemberof": true,
        "scope": "global",
        "properties": [
            {
                "type": {
                    "names": [
                        "Data#point"
                    ]
                },
                "name": "point"
            }
        ],
        "longname": "map.routes",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                763,
                773
            ],
            "filename": "memberoftagforced.js",
            "lineno": 40,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003034",
                "name": "routes",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "routes",
        "longname": "map.routes",
        "kind": "member",
        "memberof": "map",
        "scope": "static"
    },
    {
        "comment": "/** The current cursor. */",
        "meta": {
            "range": [
                808,
                819
            ],
            "filename": "memberoftagforced.js",
            "lineno": 44,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003037",
                "name": "cursor",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "description": "The current cursor.",
        "name": "cursor",
        "longname": "cursor",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @member */",
        "meta": {
            "range": [
                19,
                20
            ],
            "filename": "membertag.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003043",
                "name": "x"
            }
        },
        "kind": "member",
        "name": "x",
        "longname": "x",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @var foobar */",
        "meta": {
            "filename": "membertag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "member",
        "name": "foobar",
        "longname": "foobar",
        "scope": "global"
    },
    {
        "comment": "/** @var {string} baz */",
        "meta": {
            "filename": "membertag.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "member",
        "name": "baz",
        "type": {
            "names": [
                "string"
            ]
        },
        "longname": "baz",
        "scope": "global"
    },
    {
        "comment": "/** @member {Object} */",
        "meta": {
            "range": [
                96,
                97
            ],
            "filename": "membertag.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003046",
                "name": "y"
            }
        },
        "kind": "member",
        "type": {
            "names": [
                "Object"
            ]
        },
        "name": "y",
        "longname": "y",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                113
            ],
            "filename": "methoddefinition.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003050",
                "name": "Test",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Test",
        "longname": "Test",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/** Document me. */",
        "meta": {
            "range": [
                41,
                54
            ],
            "filename": "methoddefinition.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003053",
                "name": "Test#run",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Document me.",
        "name": "run",
        "longname": "Test#run",
        "kind": "function",
        "memberof": "Test",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/** Static document me. */",
        "meta": {
            "range": [
                91,
                111
            ],
            "filename": "methoddefinition.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003057",
                "name": "Test.run",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Static document me.",
        "name": "run",
        "longname": "Test.run",
        "kind": "function",
        "memberof": "Test",
        "scope": "static",
        "params": []
    },
    {
        "comment": "/** @mixin AnotherMixin*/",
        "meta": {
            "filename": "mixintag.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "mixin",
        "name": "AnotherMixin",
        "longname": "AnotherMixin",
        "scope": "global"
    },
    {
        "comment": "/** I mix in multiple things\n * @constructor MyClass\n * @mixes Eventful\n * @mixes AnotherMixin */",
        "meta": {
            "filename": "mixintag.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "I mix in multiple things",
        "kind": "class",
        "name": "MyClass",
        "mixes": [
            "Eventful",
            "AnotherMixin"
        ],
        "longname": "MyClass",
        "scope": "global"
    },
    {
        "comment": "/**\n * This provides methods used for event handling. It's not meant to\n * be used directly, except as a provider of related methods.\n *\n * @mixin\n */",
        "meta": {
            "range": [
                155,
                276
            ],
            "filename": "mixintag.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003064",
                "name": "Eventful",
                "type": "ObjectExpression",
                "value": "{\"fires\":\"\",\"on\":\"\"}"
            }
        },
        "description": "This provides methods used for event handling. It's not meant to\nbe used directly, except as a provider of related methods.",
        "kind": "mixin",
        "name": "Eventful",
        "longname": "Eventful",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** fires something. */",
        "meta": {
            "range": [
                200,
                221
            ],
            "filename": "mixintag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003067",
                "name": "fires",
                "type": "FunctionExpression"
            }
        },
        "description": "fires something.",
        "name": "fires",
        "longname": "Eventful.fires",
        "kind": "function",
        "memberof": "Eventful",
        "scope": "static"
    },
    {
        "comment": "/** handles a signal. */",
        "meta": {
            "range": [
                256,
                274
            ],
            "filename": "mixintag.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003070",
                "name": "on",
                "type": "FunctionExpression"
            }
        },
        "description": "handles a signal.",
        "name": "on",
        "longname": "Eventful.on",
        "kind": "function",
        "memberof": "Eventful",
        "scope": "static"
    },
    {
        "comment": "/**\n * @constructor\n * @mixes Eventful\n */",
        "meta": {
            "range": [
                326,
                353
            ],
            "filename": "mixintag.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003074",
                "name": "FormButton",
                "type": "FunctionExpression"
            }
        },
        "kind": "class",
        "mixes": [
            "Eventful"
        ],
        "name": "FormButton",
        "longname": "FormButton",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @module mixy */",
        "meta": {
            "filename": "mixintag2.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "mixy",
        "longname": "module:mixy"
    },
    {
        "comment": "/**\n * Object A.\n * @mixin\n */",
        "meta": {
            "range": [
                66,
                137
            ],
            "filename": "mixintag2.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003083",
                "name": "exports.ObjectA",
                "type": "ObjectExpression",
                "value": "{\"method\":\"\"}",
                "paramnames": []
            }
        },
        "description": "Object A.",
        "kind": "mixin",
        "name": "ObjectA",
        "longname": "module:mixy.ObjectA",
        "memberof": "module:mixy",
        "scope": "static"
    },
    {
        "comment": "/** Some method. */",
        "meta": {
            "range": [
                114,
                135
            ],
            "filename": "mixintag2.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003088",
                "name": "method",
                "type": "FunctionExpression"
            }
        },
        "description": "Some method.",
        "name": "method",
        "longname": "module:mixy.ObjectA.method",
        "kind": "function",
        "memberof": "module:mixy.ObjectA",
        "scope": "static"
    },
    {
        "comment": "/**\n * Object B. Mixes Object A.\n * @mixin\n * @mixes module:mixy.ObjectA\n */",
        "meta": {
            "range": [
                217,
                237
            ],
            "filename": "mixintag2.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003092",
                "name": "exports.ObjectB",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "description": "Object B. Mixes Object A.",
        "kind": "mixin",
        "mixes": [
            "module:mixy.ObjectA"
        ],
        "name": "ObjectB",
        "longname": "module:mixy.ObjectB",
        "memberof": "module:mixy",
        "scope": "static"
    },
    {
        "comment": "/**\n * Object C. Mixes Object B and adds its own method.\n * @mixin\n * @mixes module:mixy.ObjectB\n */",
        "meta": {
            "range": [
                341,
                542
            ],
            "filename": "mixintag2.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003098",
                "name": "exports.ObjectC",
                "type": "ObjectExpression",
                "value": "{\"superSweet\":\"\"}",
                "paramnames": []
            }
        },
        "description": "Object C. Mixes Object B and adds its own method.",
        "kind": "mixin",
        "mixes": [
            "module:mixy.ObjectB"
        ],
        "name": "ObjectC",
        "longname": "module:mixy.ObjectC",
        "memberof": "module:mixy",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Super-sweet method that's named in the comment, making this a virtual comment.\n     * @function module:mixy.ObjectC.superSweet\n     */",
        "meta": {
            "filename": "mixintag2.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Super-sweet method that's named in the comment, making this a virtual comment.",
        "kind": "function",
        "name": "superSweet",
        "memberof": "module:mixy.ObjectC",
        "longname": "module:mixy.ObjectC.superSweet",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                515,
                540
            ],
            "filename": "mixintag2.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003103",
                "name": "superSweet",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "superSweet",
        "longname": "module:mixy.ObjectC.superSweet",
        "kind": "function",
        "memberof": "module:mixy.ObjectC",
        "scope": "static"
    },
    {
        "comment": "/**\n * Class that mixes Object A, so it gets {@link module:mixy.ClassA#method}.\n * @class\n * @mixes module:mixy.ObjectA\n */",
        "meta": {
            "range": [
                669,
                699
            ],
            "filename": "mixintag2.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003107",
                "name": "exports.ClassA",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Class that mixes Object A, so it gets {@link module:mixy.ClassA#method}.",
        "kind": "class",
        "mixes": [
            "module:mixy.ObjectA"
        ],
        "name": "ClassA",
        "longname": "module:mixy.ClassA",
        "memberof": "module:mixy",
        "scope": "static"
    },
    {
        "comment": "/** Do a thing. */",
        "meta": {
            "range": [
                721,
                773
            ],
            "filename": "mixintag2.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003114",
                "name": "exports.ClassA.prototype.doSomething",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Do a thing.",
        "name": "doSomething",
        "longname": "module:mixy.ClassA#doSomething",
        "kind": "function",
        "memberof": "module:mixy.ClassA",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Class that mixes Object C, so it gets {@link module:mixy.ClassB#method} and\n * {@link module:mixy.ClassB#superSweet}.\n * @class\n * @mixes module:mixy.ObjectC\n */",
        "meta": {
            "range": [
                945,
                975
            ],
            "filename": "mixintag2.js",
            "lineno": 49,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003125",
                "name": "exports.ClassB",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Class that mixes Object C, so it gets {@link module:mixy.ClassB#method} and\n{@link module:mixy.ClassB#superSweet}.",
        "kind": "class",
        "mixes": [
            "module:mixy.ObjectC"
        ],
        "name": "ClassB",
        "longname": "module:mixy.ClassB",
        "memberof": "module:mixy",
        "scope": "static"
    },
    {
        "comment": "/**\n * My mutator function.\n * @modifies {(foo|bar)}\n */",
        "meta": {
            "range": [
                57,
                86
            ],
            "filename": "modifiestag.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003133",
                "name": "mutator",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "foo",
                    "bar"
                ]
            }
        },
        "description": "My mutator function.",
        "modifies": [
            {
                "type": {
                    "names": [
                        "foo",
                        "bar"
                    ]
                }
            }
        ],
        "name": "mutator",
        "longname": "mutator",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @module foo */",
        "meta": {
            "filename": "moduleclasses.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "foo",
        "longname": "module:foo"
    },
    {
        "comment": "/** Bar class. */",
        "meta": {
            "range": [
                38,
                155
            ],
            "filename": "moduleclasses.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003140",
                "name": "Bar",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Bar class.",
        "name": "Bar",
        "longname": "module:foo~Bar",
        "kind": "class",
        "scope": "inner",
        "memberof": "module:foo",
        "undocumented": true
    },
    {
        "comment": "/** Construct a Bar. */",
        "meta": {
            "range": [
                82,
                153
            ],
            "filename": "moduleclasses.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003143",
                "name": "Bar",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Construct a Bar.",
        "name": "Bar",
        "longname": "module:foo~Bar",
        "kind": "class",
        "memberof": "module:foo",
        "scope": "inner",
        "params": [],
        "undocumented": true
    },
    {
        "comment": "/** Bar class. */",
        "meta": {
            "range": [
                38,
                155
            ],
            "filename": "moduleclasses.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003140",
                "name": "Bar",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "name": "Bar",
        "longname": "module:foo~Bar",
        "kind": "class",
        "classdesc": "Bar class.",
        "scope": "inner",
        "memberof": "module:foo",
        "description": "Construct a Bar."
    },
    {
        "comment": "/** bar property */",
        "meta": {
            "range": [
                134,
                146
            ],
            "filename": "moduleclasses.js",
            "lineno": 8,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003148",
                "name": "this.bar",
                "type": "Literal",
                "value": 0,
                "paramnames": []
            }
        },
        "description": "bar property",
        "name": "bar",
        "longname": "module:foo~Bar#bar",
        "kind": "member",
        "memberof": "module:foo~Bar",
        "scope": "instance"
    },
    {
        "comment": "/** Baz class. */",
        "meta": {
            "range": [
                175,
                299
            ],
            "filename": "moduleclasses.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003153",
                "name": "exports.Baz",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "Baz class.",
        "name": "Baz",
        "longname": "module:foo.Baz",
        "kind": "class",
        "memberof": "module:foo",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                182,
                299
            ],
            "filename": "moduleclasses.js",
            "lineno": 13,
            "columnno": 7,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003154",
                "name": "Baz",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Baz",
        "longname": "module:foo.Baz",
        "kind": "class",
        "scope": "static",
        "memberof": "module:foo"
    },
    {
        "comment": "/** Construct a Baz. */",
        "meta": {
            "range": [
                226,
                297
            ],
            "filename": "moduleclasses.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003157",
                "name": "exports.Baz",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Construct a Baz.",
        "name": "Baz",
        "longname": "module:foo.Baz",
        "kind": "class",
        "memberof": "module:foo",
        "scope": "static",
        "params": [],
        "undocumented": true
    },
    {
        "comment": "/** Baz class. */",
        "meta": {
            "range": [
                175,
                299
            ],
            "filename": "moduleclasses.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003153",
                "name": "exports.Baz",
                "type": "ClassDeclaration"
            }
        },
        "name": "Baz",
        "longname": "module:foo.Baz",
        "kind": "class",
        "classdesc": "Baz class.",
        "memberof": "module:foo",
        "scope": "static",
        "description": "Construct a Baz."
    },
    {
        "comment": "/** baz property */",
        "meta": {
            "range": [
                278,
                290
            ],
            "filename": "moduleclasses.js",
            "lineno": 17,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003162",
                "name": "this.baz",
                "type": "Literal",
                "value": 0,
                "paramnames": []
            }
        },
        "description": "baz property",
        "name": "baz",
        "longname": "module:foo.Baz#baz",
        "kind": "member",
        "memberof": "module:foo.Baz",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @module my/module\n*/",
        "meta": {
            "filename": "moduleinner.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "my/module",
        "longname": "module:my/module"
    },
    {
        "comment": "/** document fooIn */",
        "meta": {
            "range": [
                64,
                86
            ],
            "filename": "moduleinner.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003174",
                "name": "fooIn",
                "type": "FunctionExpression",
                "funcscope": "<anonymous>",
                "paramnames": []
            }
        },
        "description": "document fooIn",
        "name": "fooIn",
        "longname": "module:my/module~fooIn",
        "kind": "function",
        "scope": "inner",
        "memberof": "module:my/module"
    },
    {
        "comment": "/** @namespace */",
        "meta": {
            "range": [
                107,
                172
            ],
            "filename": "moduleinner.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003179",
                "name": "bar",
                "type": "ObjectExpression",
                "funcscope": "<anonymous>",
                "value": "{\"zop\":\"\"}",
                "paramnames": []
            }
        },
        "kind": "namespace",
        "name": "bar",
        "longname": "module:my/module~bar",
        "scope": "inner",
        "memberof": "module:my/module"
    },
    {
        "comment": "/** document bar.Zop */",
        "meta": {
            "range": [
                147,
                170
            ],
            "filename": "moduleinner.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003182",
                "name": "zop",
                "type": "FunctionExpression"
            }
        },
        "description": "document bar.Zop",
        "name": "zop",
        "longname": "module:my/module~bar.zop",
        "kind": "function",
        "memberof": "module:my/module~bar",
        "scope": "static"
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                194,
                282
            ],
            "filename": "moduleinner.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003186",
                "name": "exports.Frotz",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "this.quaz": "module:my/module.Frotz#quaz"
            }
        },
        "kind": "class",
        "name": "Frotz",
        "longname": "module:my/module.Frotz",
        "memberof": "module:my/module",
        "scope": "static"
    },
    {
        "comment": "/** document exports.Frotz#quaz */",
        "meta": {
            "range": [
                266,
                279
            ],
            "filename": "moduleinner.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003193",
                "name": "this.quaz",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "description": "document exports.Frotz#quaz",
        "name": "quaz",
        "longname": "module:my/module.Frotz#quaz",
        "kind": "member",
        "memberof": "module:my/module.Frotz",
        "scope": "instance"
    },
    {
        "comment": "/** document fooOut\n*/",
        "meta": {
            "range": [
                315,
                338
            ],
            "filename": "moduleinner.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003199",
                "name": "fooOut",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "document fooOut",
        "name": "fooOut",
        "longname": "module:my/module~fooOut",
        "kind": "function",
        "scope": "inner",
        "memberof": "module:my/module"
    },
    {
        "comment": "/**\n * Describe the module here.\n * @module mymodule/config\n */",
        "meta": {
            "filename": "moduleisconstructor.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Describe the module here.",
        "kind": "module",
        "name": "mymodule/config",
        "longname": "module:mymodule/config"
    },
    {
        "comment": "/**\n * Create a new configuration.\n *\n * @classdesc Describe the class here.\n * @class\n * @alias module:mymodule/config\n * @param {string} id\n */",
        "meta": {
            "range": [
                211,
                274
            ],
            "filename": "moduleisconstructor.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003205",
                "name": "Config",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "id"
                ]
            },
            "vars": {
                "this.id": "module:mymodule/config#id"
            }
        },
        "description": "Create a new configuration.",
        "classdesc": "Describe the class here.",
        "kind": "class",
        "alias": "module:mymodule/config",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "id"
            }
        ],
        "name": "module:mymodule/config",
        "longname": "module:mymodule/config"
    },
    {
        "comment": "/** Document me. */",
        "meta": {
            "range": [
                259,
                271
            ],
            "filename": "moduleisconstructor.js",
            "lineno": 16,
            "columnno": 3,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003210",
                "name": "this.id",
                "type": "Identifier",
                "value": "id",
                "paramnames": []
            }
        },
        "description": "Document me.",
        "name": "id",
        "longname": "module:mymodule/config#id",
        "kind": "member",
        "memberof": "module:mymodule/config",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Get the configuration ID.\n *\n * @return {string} The configuration ID.\n */",
        "meta": {
            "range": [
                358,
                417
            ],
            "filename": "moduleisconstructor.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003216",
                "name": "Config.prototype.getId",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Get the configuration ID.",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The configuration ID."
            }
        ],
        "name": "getId",
        "longname": "module:mymodule/config#getId",
        "kind": "function",
        "memberof": "module:mymodule/config",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                419,
                442
            ],
            "filename": "moduleisconstructor.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003229",
                "name": "module.exports",
                "type": "Identifier",
                "value": "Config",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "module:mymodule/config",
        "longname": "module:mymodule/config",
        "kind": "member"
    },
    {
        "comment": "/**\n * Describe the module here.\n * @module mymodule/config\n */",
        "meta": {
            "filename": "moduleisconstructor2.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Describe the module here.",
        "kind": "module",
        "name": "mymodule/config",
        "longname": "module:mymodule/config"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                97,
                430
            ],
            "filename": "moduleisconstructor2.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003236",
                "name": "module.exports",
                "type": "ClassDeclaration"
            }
        },
        "undocumented": true,
        "name": "module:mymodule/config",
        "longname": "module:mymodule/config",
        "kind": "class"
    },
    {
        "comment": "/** Describe the class here. */",
        "meta": {
            "range": [
                112,
                430
            ],
            "filename": "moduleisconstructor2.js",
            "lineno": 7,
            "columnno": 15,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003237",
                "name": "module.exports",
                "type": "ClassDeclaration",
                "paramnames": [
                    "id"
                ]
            }
        },
        "classdesc": "Describe the class here.",
        "name": "module:mymodule/config",
        "longname": "module:mymodule/config",
        "kind": "class",
        "undocumented": true
    },
    {
        "comment": "/**\n     * Create a new configuration.\n     * @param {string} id\n     */",
        "meta": {
            "range": [
                208,
                281
            ],
            "filename": "moduleisconstructor2.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003240",
                "name": "module.exports",
                "type": "MethodDefinition",
                "paramnames": [
                    "id"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create a new configuration.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "id"
            }
        ],
        "name": "module:mymodule/config",
        "longname": "module:mymodule/config",
        "kind": "class",
        "undocumented": true
    },
    {
        "comment": "/** Describe the class here. */",
        "meta": {
            "range": [
                112,
                430
            ],
            "filename": "moduleisconstructor2.js",
            "lineno": 7,
            "columnno": 15,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003237",
                "name": "module.exports",
                "type": "ClassDeclaration",
                "paramnames": [
                    "id"
                ]
            }
        },
        "name": "module:mymodule/config",
        "longname": "module:mymodule/config",
        "kind": "class",
        "classdesc": "Describe the class here.",
        "description": "Create a new configuration.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "id"
            }
        ]
    },
    {
        "comment": "/** Document me. */",
        "meta": {
            "range": [
                262,
                274
            ],
            "filename": "moduleisconstructor2.js",
            "lineno": 14,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003246",
                "name": "this.id",
                "type": "Identifier",
                "value": "id",
                "paramnames": []
            }
        },
        "description": "Document me.",
        "name": "id",
        "longname": "module:mymodule/config#id",
        "kind": "member",
        "memberof": "module:mymodule/config",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Get the configuration ID.\n     *\n     * @return {string} The configuration ID.\n     */",
        "meta": {
            "range": [
                389,
                428
            ],
            "filename": "moduleisconstructor2.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003251",
                "name": "getId",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Get the configuration ID.",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The configuration ID."
            }
        ],
        "name": "getId",
        "longname": "module:mymodule/config#getId",
        "kind": "function",
        "scope": "instance",
        "memberof": "module:mymodule/config",
        "params": []
    },
    {
        "comment": "/**\n * This is a module called foo.\n * @module foo\n */",
        "meta": {
            "filename": "moduleisfunction.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "This is a module called foo.",
        "kind": "module",
        "name": "foo",
        "longname": "module:foo"
    },
    {
        "comment": "/**\n * The module exports a single function.\n * @param {string} bar\n */",
        "meta": {
            "range": [
                128,
                161
            ],
            "filename": "moduleisfunction.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003262",
                "name": "module.exports",
                "type": "FunctionExpression",
                "paramnames": [
                    "bar"
                ]
            }
        },
        "description": "The module exports a single function.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "bar"
            }
        ],
        "name": "module:foo",
        "longname": "module:foo",
        "kind": "function"
    },
    {
        "comment": "/**\n * @module bookshelf\n */",
        "meta": {
            "filename": "moduletag.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "bookshelf",
        "longname": "module:bookshelf"
    },
    {
        "comment": "/**\n * @class\n */",
        "meta": {
            "range": [
                48,
                126
            ],
            "filename": "moduletag.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003272",
                "name": "this.Book",
                "type": "FunctionExpression",
                "paramnames": [
                    "title"
                ]
            },
            "vars": {
                "this.title": "module:bookshelf.Book#title"
            }
        },
        "kind": "class",
        "name": "Book",
        "longname": "module:bookshelf.Book",
        "memberof": "module:bookshelf",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                105,
                123
            ],
            "filename": "moduletag.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003280",
                "name": "this.title",
                "type": "Identifier",
                "value": "title",
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "title",
        "longname": "module:bookshelf.Book#title",
        "kind": "member",
        "memberof": "module:bookshelf.Book",
        "scope": "instance"
    },
    {
        "comment": "/** @module foo */",
        "meta": {
            "filename": "moduletag10.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "foo",
        "longname": "module:foo"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20,
                48
            ],
            "filename": "moduletag10.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003287",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "module:foo",
        "longname": "module:foo",
        "kind": "function"
    },
    {
        "comment": "/**\n * Test module.\n * @module foo\n */",
        "meta": {
            "filename": "moduletag11.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Test module.",
        "kind": "module",
        "name": "foo",
        "longname": "module:foo"
    },
    {
        "comment": "/** Test class. */",
        "meta": {
            "range": [
                59,
                180
            ],
            "filename": "moduletag11.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003293",
                "name": "exports.Foo",
                "type": "ClassDeclaration"
            }
        },
        "classdesc": "Test class.",
        "name": "Foo",
        "longname": "module:foo.Foo",
        "kind": "class",
        "memberof": "module:foo",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                180
            ],
            "filename": "moduletag11.js",
            "lineno": 7,
            "columnno": 7,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003294",
                "name": "Foo",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Foo",
        "longname": "module:foo.Foo",
        "kind": "class",
        "scope": "static",
        "memberof": "module:foo"
    },
    {
        "comment": "/** Test class constructor. */",
        "meta": {
            "range": [
                117,
                133
            ],
            "filename": "moduletag11.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003297",
                "name": "exports.Foo",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Test class constructor.",
        "name": "Foo",
        "longname": "module:foo.Foo",
        "kind": "class",
        "memberof": "module:foo",
        "scope": "static",
        "params": [],
        "undocumented": true
    },
    {
        "comment": "/** Test class. */",
        "meta": {
            "range": [
                59,
                180
            ],
            "filename": "moduletag11.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003293",
                "name": "exports.Foo",
                "type": "ClassDeclaration"
            }
        },
        "name": "Foo",
        "longname": "module:foo.Foo",
        "kind": "class",
        "classdesc": "Test class.",
        "memberof": "module:foo",
        "scope": "static",
        "description": "Test class constructor."
    },
    {
        "comment": "/** Test method. */",
        "meta": {
            "range": [
                163,
                178
            ],
            "filename": "moduletag11.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003301",
                "name": "Foo#testMethod",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Test method.",
        "name": "testMethod",
        "longname": "module:foo.Foo#testMethod",
        "kind": "function",
        "memberof": "module:foo.Foo",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/** @module color/mixer */",
        "meta": {
            "filename": "moduletag2.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "color/mixer",
        "longname": "module:color/mixer"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28,
                126
            ],
            "filename": "moduletag2.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003308",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"blend\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "module:color/mixer",
        "longname": "module:color/mixer",
        "kind": "member"
    },
    {
        "comment": "/** Blend two colors together. */",
        "meta": {
            "range": [
                89,
                124
            ],
            "filename": "moduletag2.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003313",
                "name": "blend",
                "type": "FunctionExpression"
            }
        },
        "description": "Blend two colors together.",
        "name": "blend",
        "longname": "module:color/mixer.blend",
        "kind": "function",
        "memberof": "module:color/mixer",
        "scope": "static"
    },
    {
        "comment": "/** Darken a color by the given shade. */",
        "meta": {
            "range": [
                170,
                213
            ],
            "filename": "moduletag2.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003319",
                "name": "exports.darken",
                "type": "FunctionExpression",
                "paramnames": [
                    "color",
                    "shade"
                ]
            }
        },
        "description": "Darken a color by the given shade.",
        "name": "darken",
        "longname": "module:color/mixer.darken",
        "kind": "function",
        "memberof": "module:color/mixer",
        "scope": "static"
    },
    {
        "comment": "/**\n@module foo/Photo/manager\n@desc Manage a collection of photos.\n*/",
        "meta": {
            "filename": "moduletag3.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "foo/Photo/manager",
        "description": "Manage a collection of photos.",
        "longname": "module:foo/Photo/manager"
    },
    {
        "comment": "/**\nConstruct a new Photo manager\n@constructor module:foo/Photo/manager\n@param {String} collectionId The identifier of the managed collection.\n*/",
        "meta": {
            "filename": "moduletag3.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Construct a new Photo manager",
        "kind": "class",
        "name": "module:foo/Photo/manager",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The identifier of the managed collection.",
                "name": "collectionId"
            }
        ],
        "longname": "module:foo/Photo/manager",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                217,
                389
            ],
            "filename": "moduletag3.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003330",
                "name": "module.exports",
                "type": "FunctionExpression",
                "paramnames": [
                    "collectionId"
                ]
            },
            "vars": {
                "this.getPhoto": "module:foo/Photo/manager.getPhoto",
                "": null
            }
        },
        "undocumented": true,
        "name": "module:foo/Photo/manager",
        "longname": "module:foo/Photo/manager",
        "kind": "function"
    },
    {
        "comment": "/**\n    @function module:foo/Photo/manager#getPhoto\n    @param {String} photoName\n    */",
        "meta": {
            "filename": "moduletag3.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "function",
        "name": "getPhoto",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "photoName"
            }
        ],
        "memberof": "module:foo/Photo/manager",
        "longname": "module:foo/Photo/manager#getPhoto",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                357,
                386
            ],
            "filename": "moduletag3.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003338",
                "name": "this.getPhoto",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "getPhoto",
        "longname": "module:foo/Photo/manager.getPhoto",
        "kind": "function",
        "memberof": "module:foo/Photo/manager",
        "scope": "static"
    },
    {
        "comment": "/** @module M1 */",
        "meta": {
            "filename": "moduletag4.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "M1",
        "longname": "module:M1"
    },
    {
        "comment": "/**\n  * @typedef ClickProperties\n  * @type {object}\n  * @property {MouseButtons} Button - Which mouse button is clicking.\n  */",
        "meta": {
            "filename": "moduletag4.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "typedef",
        "name": "ClickProperties",
        "type": {
            "names": [
                "object"
            ]
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "MouseButtons"
                    ]
                },
                "description": "Which mouse button is clicking.",
                "name": "Button"
            }
        ],
        "longname": "module:M1~ClickProperties",
        "scope": "inner",
        "memberof": "module:M1"
    },
    {
        "comment": "/**\n  * Virtual comment function\n  *\n  * @function VirtualComment\n  * @static\n  * @param {string} comment - comment\n  * \n  */",
        "meta": {
            "filename": "moduletag4.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Virtual comment function",
        "kind": "function",
        "name": "VirtualComment",
        "scope": "static",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "comment",
                "name": "comment"
            }
        ],
        "longname": "module:M1.VirtualComment",
        "memberof": "module:M1"
    },
    {
        "comment": "/**\n * Virtual comment function 2\n * @function VirtualComment2\n * @instance \n * @param {string} comment - comment\n */",
        "meta": {
            "filename": "moduletag4.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Virtual comment function 2",
        "kind": "function",
        "name": "VirtualComment2",
        "scope": "instance",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "comment",
                "name": "comment"
            }
        ],
        "longname": "module:M1#VirtualComment2",
        "memberof": "module:M1"
    },
    {
        "comment": "/**\n * The differnet kind of mouse buttons.\n *\n * @summary Blah blah\n * @readonly\n * @enum {string} \n */",
        "meta": {
            "range": [
                124,
                200
            ],
            "filename": "moduletag4.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003347",
                "name": "exports.MouseButtons",
                "type": "ObjectExpression",
                "value": "{\"Left\":\"Left\",\"Middle\":\"Middle\",\"Right\":\"Right\"}",
                "paramnames": []
            }
        },
        "description": "The differnet kind of mouse buttons.",
        "summary": "Blah blah",
        "readonly": true,
        "kind": "member",
        "isEnum": true,
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "MouseButtons",
        "longname": "module:M1.MouseButtons",
        "memberof": "module:M1",
        "scope": "static",
        "properties": [
            {
                "comment": "",
                "meta": {
                    "range": [
                        150,
                        162
                    ],
                    "filename": "moduletag4.js",
                    "lineno": 11,
                    "columnno": 1,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100003352",
                        "name": "Left",
                        "type": "Literal",
                        "value": "Left"
                    }
                },
                "name": "Left",
                "longname": "module:M1.MouseButtons.Left",
                "kind": "member",
                "memberof": "module:M1.MouseButtons",
                "scope": "static",
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "defaultvalue": "Left"
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        165,
                        181
                    ],
                    "filename": "moduletag4.js",
                    "lineno": 12,
                    "columnno": 1,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100003354",
                        "name": "Middle",
                        "type": "Literal",
                        "value": "Middle"
                    }
                },
                "name": "Middle",
                "longname": "module:M1.MouseButtons.Middle",
                "kind": "member",
                "memberof": "module:M1.MouseButtons",
                "scope": "static",
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "defaultvalue": "Middle"
            },
            {
                "comment": "",
                "meta": {
                    "range": [
                        184,
                        198
                    ],
                    "filename": "moduletag4.js",
                    "lineno": 13,
                    "columnno": 1,
                    "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
                    "code": {
                        "id": "astnode100003356",
                        "name": "Right",
                        "type": "Literal",
                        "value": "Right"
                    }
                },
                "name": "Right",
                "longname": "module:M1.MouseButtons.Right",
                "kind": "member",
                "memberof": "module:M1.MouseButtons",
                "scope": "static",
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "defaultvalue": "Right"
            }
        ]
    },
    {
        "comment": "",
        "meta": {
            "range": [
                150,
                162
            ],
            "filename": "moduletag4.js",
            "lineno": 11,
            "columnno": 1,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003352",
                "name": "Left",
                "type": "Literal",
                "value": "Left"
            }
        },
        "name": "Left",
        "longname": "module:M1.MouseButtons.Left",
        "kind": "member",
        "memberof": "module:M1.MouseButtons",
        "scope": "static",
        "type": {
            "names": [
                "string"
            ]
        },
        "defaultvalue": "Left"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                165,
                181
            ],
            "filename": "moduletag4.js",
            "lineno": 12,
            "columnno": 1,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003354",
                "name": "Middle",
                "type": "Literal",
                "value": "Middle"
            }
        },
        "name": "Middle",
        "longname": "module:M1.MouseButtons.Middle",
        "kind": "member",
        "memberof": "module:M1.MouseButtons",
        "scope": "static",
        "type": {
            "names": [
                "string"
            ]
        },
        "defaultvalue": "Middle"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                184,
                198
            ],
            "filename": "moduletag4.js",
            "lineno": 13,
            "columnno": 1,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003356",
                "name": "Right",
                "type": "Literal",
                "value": "Right"
            }
        },
        "name": "Right",
        "longname": "module:M1.MouseButtons.Right",
        "kind": "member",
        "memberof": "module:M1.MouseButtons",
        "scope": "static",
        "type": {
            "names": [
                "string"
            ]
        },
        "defaultvalue": "Right"
    },
    {
        "comment": "/**\n * @module module:bookshelf\n */",
        "meta": {
            "filename": "moduletag5.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "bookshelf",
        "longname": "module:bookshelf"
    },
    {
        "comment": "/** @module appname */",
        "meta": {
            "filename": "moduletag6.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "appname",
        "longname": "module:appname"
    },
    {
        "comment": "/**\n * The name of the application.\n * @type {string}\n */",
        "meta": {
            "range": [
                82,
                105
            ],
            "filename": "moduletag6.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003362",
                "name": "module.exports",
                "type": "Literal"
            }
        },
        "description": "The name of the application.",
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "module:appname",
        "longname": "module:appname",
        "kind": "member"
    },
    {
        "comment": "/** @module color/mixer */",
        "meta": {
            "filename": "moduletag7.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "color/mixer",
        "longname": "module:color/mixer"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28,
                124
            ],
            "filename": "moduletag7.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003366",
                "name": "module.exports",
                "type": "ObjectExpression"
            }
        },
        "undocumented": true,
        "name": "module:color/mixer",
        "longname": "module:color/mixer",
        "kind": "member"
    },
    {
        "comment": "/** Blend two colors together. */",
        "meta": {
            "range": [
                87,
                121
            ],
            "filename": "moduletag7.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003368",
                "name": "blend",
                "type": "FunctionExpression"
            }
        },
        "description": "Blend two colors together.",
        "name": "blend",
        "longname": "module:color/mixer.blend",
        "kind": "function",
        "memberof": "module:color/mixer",
        "scope": "static"
    },
    {
        "comment": "/** @module color/mixer */",
        "meta": {
            "filename": "moduletag8.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "color/mixer",
        "longname": "module:color/mixer"
    },
    {
        "comment": "/** The name of the module. */",
        "meta": {
            "range": [
                59,
                87
            ],
            "filename": "moduletag8.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003375",
                "name": "exports.name",
                "type": "VariableDeclaration"
            }
        },
        "description": "The name of the module.",
        "name": "name",
        "longname": "module:color/mixer.name",
        "kind": "constant",
        "memberof": "module:color/mixer",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                72,
                86
            ],
            "filename": "moduletag8.js",
            "lineno": 4,
            "columnno": 13,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003377",
                "name": "name",
                "type": "Literal",
                "value": "mixer"
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "module:color/mixer~name",
        "kind": "constant",
        "scope": "inner",
        "memberof": "module:color/mixer",
        "params": []
    },
    {
        "comment": "/** The most recent blended color. */",
        "meta": {
            "range": [
                127,
                155
            ],
            "filename": "moduletag8.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003380",
                "name": "exports.lastColor",
                "type": "VariableDeclaration"
            }
        },
        "description": "The most recent blended color.",
        "name": "lastColor",
        "longname": "module:color/mixer.lastColor",
        "kind": "member",
        "memberof": "module:color/mixer",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                138,
                154
            ],
            "filename": "moduletag8.js",
            "lineno": 7,
            "columnno": 11,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003382",
                "name": "lastColor",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "lastColor",
        "longname": "module:color/mixer~lastColor",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:color/mixer",
        "params": []
    },
    {
        "comment": "/** Blend two colors together. */",
        "meta": {
            "range": [
                191,
                231
            ],
            "filename": "moduletag8.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003385",
                "name": "exports.blend",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "color1",
                    "color2"
                ]
            }
        },
        "description": "Blend two colors together.",
        "name": "blend",
        "longname": "module:color/mixer.blend",
        "kind": "function",
        "memberof": "module:color/mixer",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                198,
                231
            ],
            "filename": "moduletag8.js",
            "lineno": 10,
            "columnno": 7,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003386",
                "name": "blend",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "color1",
                    "color2"
                ]
            }
        },
        "undocumented": true,
        "name": "blend",
        "longname": "module:color/mixer.blend",
        "kind": "function",
        "scope": "static",
        "memberof": "module:color/mixer",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                281,
                306
            ],
            "filename": "moduletag8.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003391",
                "name": "rgbify",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "color"
                ]
            }
        },
        "undocumented": true,
        "name": "rgbify",
        "longname": "module:color/mixer~rgbify",
        "kind": "function",
        "scope": "inner",
        "memberof": "module:color/mixer",
        "params": []
    },
    {
        "comment": "/**\n     * Get the red, green, and blue values of a color.\n     * @function\n     */",
        "meta": {
            "range": [
                409,
                424
            ],
            "filename": "moduletag8.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003396",
                "name": "exports.toRgb",
                "type": "Identifier"
            }
        },
        "description": "Get the red, green, and blue values of a color.",
        "kind": "function",
        "name": "toRgb",
        "longname": "module:color/mixer.toRgb",
        "memberof": "module:color/mixer",
        "scope": "static"
    },
    {
        "comment": "/** @module foo */",
        "meta": {
            "filename": "moduletag9.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "foo",
        "longname": "module:foo"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20,
                40
            ],
            "filename": "moduletag9.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003401",
                "name": "module.exports",
                "type": "ExportAllDeclaration"
            }
        },
        "undocumented": true,
        "name": "module:foo",
        "longname": "module:foo",
        "kind": "member"
    },
    {
        "comment": "/** @namespace */",
        "meta": {
            "range": [
                22,
                29
            ],
            "filename": "namespacetag.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003406",
                "name": "x",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "kind": "namespace",
        "name": "x",
        "longname": "x",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @namespace Foo */",
        "meta": {
            "filename": "namespacetag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "namespace",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global"
    },
    {
        "comment": "/** @namespace {function} Bar */",
        "meta": {
            "filename": "namespacetag.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "namespace",
        "name": "Bar",
        "type": {
            "names": [
                "function"
            ]
        },
        "description": "Bar",
        "longname": "Bar",
        "scope": "global"
    },
    {
        "comment": "/** @namespace */",
        "meta": {
            "range": [
                109,
                174
            ],
            "filename": "namespacetag.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003410",
                "name": "S",
                "type": "ObjectExpression",
                "value": "{\"Socket\":\"\"}"
            }
        },
        "kind": "namespace",
        "name": "S",
        "longname": "S",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Member of the namespace S. */",
        "meta": {
            "range": [
                151,
                172
            ],
            "filename": "namespacetag.js",
            "lineno": 10,
            "columnno": 1,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003413",
                "name": "Socket",
                "type": "FunctionExpression"
            }
        },
        "description": "Member of the namespace S.",
        "name": "Socket",
        "longname": "S.Socket",
        "kind": "function",
        "memberof": "S",
        "scope": "static"
    },
    {
        "comment": "/**\n * A view.\n * @name View\n */",
        "meta": {
            "filename": "nametag.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "A view.",
        "name": "View",
        "longname": "View",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Helper methods for models, views, and controllers.\n * @name MvcHelpers\n * @namespace\n */",
        "meta": {
            "filename": "nametag.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Helper methods for models, views, and controllers.",
        "name": "MvcHelpers",
        "kind": "namespace",
        "longname": "MvcHelpers",
        "scope": "global"
    },
    {
        "comment": "/**\n * Add the item to its parent.\n * @name addToParent\n * @memberof MvcHelpers\n * @inner\n */",
        "meta": {
            "filename": "nametag.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Add the item to its parent.",
        "name": "addToParent",
        "memberof": "MvcHelpers",
        "scope": "inner",
        "longname": "MvcHelpers~addToParent",
        "kind": "member"
    },
    {
        "comment": "/**\n * A controller.\n * @name Controller\n * @class\n */",
        "meta": {
            "filename": "nametag.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "A controller.",
        "name": "Controller",
        "kind": "class",
        "longname": "Controller",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                89,
                116
            ],
            "filename": "nametag.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003418",
                "name": "someOtherName",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "someOtherName",
        "longname": "someOtherName",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @noalias */",
        "meta": {
            "range": [
                16,
                33
            ],
            "filename": "noaliastag.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003423",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "name": "Foo",
        "longname": "Foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * A namespace.\n * @const\n */",
        "meta": {
            "range": [
                38,
                46
            ],
            "filename": "nocollapsetag.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003429",
                "name": "foo",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "description": "A namespace.",
        "kind": "constant",
        "name": "foo",
        "longname": "foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @nocollapse */",
        "meta": {
            "range": [
                68,
                82
            ],
            "filename": "nocollapsetag.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003433",
                "name": "foo.bar",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "name": "bar",
        "longname": "foo.bar",
        "kind": "member",
        "memberof": "foo",
        "scope": "static"
    },
    {
        "comment": "/**\n * A function that does nothing.\n * @nosideeffects\n */",
        "meta": {
            "range": [
                59,
                82
            ],
            "filename": "nosideeffectstag.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003442",
                "name": "doNothing",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "A function that does nothing.",
        "modifies": [],
        "name": "doNothing",
        "longname": "doNothing",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @namespace\n * @property {String} 1 The number one.\n * @property {String} 2 The number two.\n * @property {String} 3 The number three.\n */",
        "meta": {
            "range": [
                148,
                202
            ],
            "filename": "numericpropertytag.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003448",
                "name": "numericObject",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"c\"}"
            }
        },
        "kind": "namespace",
        "properties": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The number one.",
                "name": "1"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The number two.",
                "name": "2"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The number three.",
                "name": "3"
            }
        ],
        "name": "numericObject",
        "longname": "numericObject",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                170,
                176
            ],
            "filename": "numericpropertytag.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003451",
                "name": 1,
                "type": "Literal",
                "value": "a"
            }
        },
        "undocumented": true,
        "name": "1",
        "longname": "numericObject.1",
        "kind": "member",
        "memberof": "numericObject",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                182,
                188
            ],
            "filename": "numericpropertytag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003453",
                "name": 2,
                "type": "Literal",
                "value": "b"
            }
        },
        "undocumented": true,
        "name": "2",
        "longname": "numericObject.2",
        "kind": "member",
        "memberof": "numericObject",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                194,
                200
            ],
            "filename": "numericpropertytag.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003455",
                "name": 3,
                "type": "Literal",
                "value": "c"
            }
        },
        "undocumented": true,
        "name": "3",
        "longname": "numericObject.3",
        "kind": "member",
        "memberof": "numericObject",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                41
            ],
            "filename": "objectkeys.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003460",
                "name": "myObject",
                "type": "ObjectExpression",
                "value": "{\"foo\":1,\"bar\":2}"
            }
        },
        "undocumented": true,
        "name": "myObject",
        "longname": "myObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                27
            ],
            "filename": "objectkeys.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003463",
                "name": "foo",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "foo",
        "longname": "myObject.foo",
        "kind": "member",
        "memberof": "myObject",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                33,
                39
            ],
            "filename": "objectkeys.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003465",
                "name": "bar",
                "type": "Literal",
                "value": 2
            }
        },
        "undocumented": true,
        "name": "bar",
        "longname": "myObject.bar",
        "kind": "member",
        "memberof": "myObject",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                23,
                126
            ],
            "filename": "objectlit.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003470",
                "name": "tools",
                "type": "ObjectExpression",
                "value": "{\"serialiser\":\"\"}"
            }
        },
        "description": "document me",
        "name": "tools",
        "longname": "tools",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                60,
                124
            ],
            "filename": "objectlit.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003473",
                "name": "serialiser",
                "type": "ObjectExpression",
                "value": "{\"value\":\"\"}"
            }
        },
        "description": "document me",
        "name": "serialiser",
        "longname": "tools.serialiser",
        "kind": "member",
        "memberof": "tools",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                109,
                118
            ],
            "filename": "objectlit.js",
            "lineno": 6,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003475",
                "name": "value",
                "type": "Literal",
                "value": ""
            }
        },
        "description": "document me",
        "name": "value",
        "longname": "tools.serialiser.value",
        "kind": "member",
        "memberof": "tools.serialiser",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                23,
                109
            ],
            "filename": "objectlit2.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003480",
                "name": "position",
                "type": "ObjectExpression",
                "value": "{\"axis\":\"\"}"
            }
        },
        "description": "document me",
        "name": "position",
        "longname": "position",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                40,
                107
            ],
            "filename": "objectlit2.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003483",
                "name": "axis",
                "type": "ObjectExpression",
                "value": "{\"x\":0,\"y\":0}"
            }
        },
        "undocumented": true,
        "name": "axis",
        "longname": "position.axis",
        "kind": "member",
        "memberof": "position",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                83,
                87
            ],
            "filename": "objectlit2.js",
            "lineno": 5,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003485",
                "name": "x",
                "type": "Literal",
                "value": 0
            }
        },
        "description": "document me",
        "name": "x",
        "longname": "position.axis.x",
        "kind": "member",
        "memberof": "position.axis",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                97,
                101
            ],
            "filename": "objectlit2.js",
            "lineno": 6,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003487",
                "name": "y",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "y",
        "longname": "position.axis.y",
        "kind": "member",
        "memberof": "position.axis",
        "scope": "static"
    },
    {
        "comment": "/** Tokens that can appear in the stream. */",
        "meta": {
            "range": [
                49,
                253
            ],
            "filename": "objectlit3.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003492",
                "name": "tokens",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "description": "Tokens that can appear in the stream.",
        "name": "tokens",
        "longname": "tokens",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Open parenthesis. */",
        "meta": {
            "range": [
                87,
                251
            ],
            "filename": "objectlit3.js",
            "lineno": 4,
            "columnno": 1,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003495",
                "name": "\"(\"",
                "type": "ObjectExpression",
                "value": "{\"before\":\"\",\"after\":\"\"}"
            }
        },
        "description": "Open parenthesis.",
        "name": "\"(\"",
        "longname": "tokens.\"(\"",
        "kind": "member",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "/** Executed before the token is processed. */",
        "meta": {
            "range": [
                145,
                171
            ],
            "filename": "objectlit3.js",
            "lineno": 6,
            "columnno": 2,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003497",
                "name": "before",
                "type": "FunctionExpression"
            }
        },
        "description": "Executed before the token is processed.",
        "name": "before",
        "longname": "tokens.\"(\".before",
        "kind": "function",
        "memberof": "tokens.\"(\"",
        "scope": "static"
    },
    {
        "comment": "/** Executed after the token is processed. */",
        "meta": {
            "range": [
                223,
                248
            ],
            "filename": "objectlit3.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003501",
                "name": "after",
                "type": "FunctionExpression"
            }
        },
        "description": "Executed after the token is processed.",
        "name": "after",
        "longname": "tokens.\"(\".after",
        "kind": "function",
        "memberof": "tokens.\"(\"",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10,
                70
            ],
            "filename": "objectpropertykeys.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003511",
                "name": "methodA",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.id": null
            }
        },
        "undocumented": true,
        "name": "methodA",
        "longname": "methodA",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38,
                65
            ],
            "filename": "objectpropertykeys.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003515",
                "name": "this.id",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                75,
                122
            ],
            "filename": "objectpropertykeys.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003523",
                "name": "valueOf",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "valueOf",
        "longname": "valueOf",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                127,
                177
            ],
            "filename": "objectpropertykeys.js",
            "lineno": 13,
            "columnno": 2,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003530",
                "name": "toString",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                235,
                253
            ],
            "filename": "objectpropertykeys.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003537",
                "name": "Test",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Test",
        "longname": "Test",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                254,
                291
            ],
            "filename": "objectpropertykeys.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003540",
                "name": "Test2",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Test2",
        "longname": "Test2",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                341,
                368
            ],
            "filename": "objectpropertykeys.js",
            "lineno": 22,
            "columnno": 49,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003562",
                "name": "constructor",
                "type": "ObjectExpression",
                "value": "{\"value\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "constructor",
        "longname": "constructor",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                355,
                367
            ],
            "filename": "objectpropertykeys.js",
            "lineno": 22,
            "columnno": 63,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003564",
                "name": "value",
                "type": "Identifier",
                "value": "Test2"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "constructor.value",
        "kind": "member",
        "memberof": "constructor",
        "scope": "static"
    },
    {
        "comment": "/**\n * Parent class.\n * @class\n */",
        "meta": {
            "range": [
                35,
                59
            ],
            "filename": "overridetag.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003568",
                "name": "Connection",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Parent class.",
        "kind": "class",
        "name": "Connection",
        "longname": "Connection",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Open the connection.\n * @virtual\n */",
        "meta": {
            "range": [
                105,
                146
            ],
            "filename": "overridetag.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003572",
                "name": "Connection.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Open the connection.",
        "virtual": true,
        "name": "open",
        "longname": "Connection#open",
        "kind": "function",
        "memberof": "Connection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Close the connection.\n */",
        "meta": {
            "range": [
                182,
                224
            ],
            "filename": "overridetag.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003581",
                "name": "Connection.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Close the connection.",
        "name": "close",
        "longname": "Connection#close",
        "kind": "function",
        "memberof": "Connection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Read the specified number of bytes from the connection.\n *\n * @function Connection#read\n * @param {number} bytes - The number of bytes to read.\n * @return {Buffer} The bytes that were read.\n */",
        "meta": {
            "filename": "overridetag.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Read the specified number of bytes from the connection.",
        "kind": "function",
        "name": "read",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of bytes to read.",
                "name": "bytes"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "The bytes that were read."
            }
        ],
        "memberof": "Connection",
        "longname": "Connection#read",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                428,
                474
            ],
            "filename": "overridetag.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003590",
                "name": "Connection.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "undocumented": true,
        "name": "read",
        "longname": "Connection#read",
        "kind": "function",
        "memberof": "Connection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Child class.\n * @class\n * @extends Connection\n */",
        "meta": {
            "range": [
                534,
                554
            ],
            "filename": "overridetag.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003599",
                "name": "Socket",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Child class.",
        "kind": "class",
        "augments": [
            "Connection"
        ],
        "name": "Socket",
        "longname": "Socket",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                573,
                610
            ],
            "filename": "overridetag.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003603",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "override": true,
        "name": "open",
        "longname": "Socket#open",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "ignore": true
    },
    {
        "comment": "/**\n * Close the socket.\n * @param {string} message - A message explaining why the socket is being closed.\n * @override\n */",
        "meta": {
            "range": [
                737,
                775
            ],
            "filename": "overridetag.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003612",
                "name": "Socket.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Close the socket.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A message explaining why the socket is being closed.",
                "name": "message"
            }
        ],
        "override": true,
        "name": "close",
        "longname": "Socket#close",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                795,
                837
            ],
            "filename": "overridetag.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003621",
                "name": "Socket.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "override": true,
        "name": "read",
        "longname": "Socket#read",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "ignore": true
    },
    {
        "comment": "/**\n * Parent interface.\n * @interface\n */",
        "meta": {
            "range": [
                43,
                67
            ],
            "filename": "overridetag2.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003632",
                "name": "Connection",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Parent interface.",
        "kind": "interface",
        "name": "Connection",
        "longname": "Connection",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Open the connection.\n */",
        "meta": {
            "range": [
                101,
                142
            ],
            "filename": "overridetag2.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003636",
                "name": "Connection.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Open the connection.",
        "name": "open",
        "longname": "Connection#open",
        "kind": "function",
        "memberof": "Connection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Close the connection.\n */",
        "meta": {
            "range": [
                178,
                220
            ],
            "filename": "overridetag2.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003645",
                "name": "Connection.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Close the connection.",
        "name": "close",
        "longname": "Connection#close",
        "kind": "function",
        "memberof": "Connection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Read the specified number of bytes from the connection.\n *\n * @function Connection#read\n * @param {number} bytes - The number of bytes to read.\n * @return {Buffer} The bytes that were read.\n */",
        "meta": {
            "filename": "overridetag2.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Read the specified number of bytes from the connection.",
        "kind": "function",
        "name": "read",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of bytes to read.",
                "name": "bytes"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "The bytes that were read."
            }
        ],
        "memberof": "Connection",
        "longname": "Connection#read",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                424,
                470
            ],
            "filename": "overridetag2.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003654",
                "name": "Connection.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "undocumented": true,
        "name": "read",
        "longname": "Connection#read",
        "kind": "function",
        "memberof": "Connection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Child class.\n * @class\n * @implements Connection\n */",
        "meta": {
            "range": [
                533,
                553
            ],
            "filename": "overridetag2.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003663",
                "name": "Socket",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Child class.",
        "kind": "class",
        "implements": [
            "Connection"
        ],
        "name": "Socket",
        "longname": "Socket",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                572,
                609
            ],
            "filename": "overridetag2.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003667",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "override": true,
        "name": "open",
        "longname": "Socket#open",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "ignore": true
    },
    {
        "comment": "/**\n * Close the socket.\n * @param {string} message - A message explaining why the socket is being closed.\n * @override\n */",
        "meta": {
            "range": [
                736,
                774
            ],
            "filename": "overridetag2.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003676",
                "name": "Socket.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Close the socket.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A message explaining why the socket is being closed.",
                "name": "message"
            }
        ],
        "override": true,
        "name": "close",
        "longname": "Socket#close",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                794,
                836
            ],
            "filename": "overridetag2.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003685",
                "name": "Socket.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "override": true,
        "name": "read",
        "longname": "Socket#read",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "ignore": true
    },
    {
        "comment": "/**\n * This function is package-private.\n *\n * @package\n */",
        "meta": {
            "range": [
                60,
                77
            ],
            "filename": "packagetag.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003696",
                "name": "foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "This function is package-private.",
        "access": "package",
        "name": "foo",
        "longname": "foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @package {Object.<string, number>}\n */",
        "meta": {
            "range": [
                50,
                144
            ],
            "filename": "packagetag2.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003702",
                "name": "connectionPorts",
                "type": "ObjectExpression",
                "value": "{\"undefined\":4997}"
            }
        },
        "access": "package",
        "name": "connectionPorts",
        "longname": "connectionPorts",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                74,
                91
            ],
            "filename": "packagetag2.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003705",
                "name": "devServer",
                "type": "Literal",
                "value": 6464
            }
        },
        "undocumented": true,
        "name": "devServer",
        "longname": "connectionPorts.devServer",
        "kind": "member",
        "memberof": "connectionPorts",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                97,
                115
            ],
            "filename": "packagetag2.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003707",
                "name": "prodServer",
                "type": "Literal",
                "value": 2232
            }
        },
        "undocumented": true,
        "name": "prodServer",
        "longname": "connectionPorts.prodServer",
        "kind": "member",
        "memberof": "connectionPorts",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                121,
                142
            ],
            "filename": "packagetag2.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003709",
                "name": "stagingServer",
                "type": "Literal",
                "value": 4997
            }
        },
        "undocumented": true,
        "name": "stagingServer",
        "longname": "connectionPorts.stagingServer",
        "kind": "member",
        "memberof": "connectionPorts",
        "scope": "static"
    },
    {
        "comment": "/**\n*  @param { String | Array<String>}  targetName    The name (or names) of what to find.\n*/",
        "meta": {
            "range": [
                95,
                124
            ],
            "filename": "paramtag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003713",
                "name": "find",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "targetName"
                ]
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Array.<String>"
                    ]
                },
                "description": "The name (or names) of what to find.",
                "name": "targetName"
            }
        ],
        "name": "find",
        "longname": "find",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n*  @param {function} callback\n*/",
        "meta": {
            "range": [
                163,
                190
            ],
            "filename": "paramtag.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003717",
                "name": "bind",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "callback"
                ]
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "callback"
            }
        ],
        "name": "bind",
        "longname": "bind",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n*  @param {function}\n*/",
        "meta": {
            "range": [
                220,
                249
            ],
            "filename": "paramtag.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003721",
                "name": "unbind",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "callback"
                ]
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "callback"
            }
        ],
        "name": "unbind",
        "longname": "unbind",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n*  @param id The id of the element.\n*/",
        "meta": {
            "range": [
                294,
                321
            ],
            "filename": "paramtag.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003725",
                "name": "getElement",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "id"
                ]
            }
        },
        "params": [
            {
                "description": "The id of the element.",
                "name": "id"
            }
        ],
        "name": "getElement",
        "longname": "getElement",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n*  @param ... Two or more elements.\n*/",
        "meta": {
            "range": [
                366,
                388
            ],
            "filename": "paramtag.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003729",
                "name": "combine",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "params": [
            {
                "description": "Two or more elements.",
                "name": "..."
            }
        ],
        "name": "combine",
        "longname": "combine",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n*  @param delimiter - What to split on.\n*/",
        "meta": {
            "range": [
                437,
                466
            ],
            "filename": "paramtag.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003732",
                "name": "split",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "delimiter"
                ]
            }
        },
        "params": [
            {
                "description": "What to split on.",
                "name": "delimiter"
            }
        ],
        "name": "split",
        "longname": "split",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n*  @param - If true make the commit atomic.\n*/",
        "meta": {
            "range": [
                519,
                546
            ],
            "filename": "paramtag.js",
            "lineno": 40,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003736",
                "name": "commit",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "atomic"
                ]
            }
        },
        "params": [
            {
                "description": "If true make the commit atomic.",
                "name": "atomic"
            }
        ],
        "name": "commit",
        "longname": "commit",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * @param [async=true] - whether to be asynchronous\n */",
        "meta": {
            "range": [
                608,
                635
            ],
            "filename": "paramtag.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003740",
                "name": "request",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "async"
                ]
            }
        },
        "params": [
            {
                "optional": true,
                "defaultvalue": true,
                "description": "whether to be asynchronous",
                "name": "async"
            }
        ],
        "name": "request",
        "longname": "request",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                651,
                673
            ],
            "filename": "paramtag.js",
            "lineno": 50,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003744",
                "name": "MySocket",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "name": "MySocket",
        "longname": "MySocket",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @param {string} - Hostname.\n * @param {number} - Port number.\n */",
        "meta": {
            "range": [
                747,
                800
            ],
            "filename": "paramtag.js",
            "lineno": 55,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003748",
                "name": "MySocket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": [
                    "hostname",
                    "port"
                ]
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Hostname.",
                "name": "hostname"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Port number.",
                "name": "port"
            }
        ],
        "name": "open",
        "longname": "MySocket#open",
        "kind": "function",
        "memberof": "MySocket",
        "scope": "instance"
    },
    {
        "comment": "/** @module mysocket */",
        "meta": {
            "filename": "paramtag2.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "mysocket",
        "longname": "module:mysocket"
    },
    {
        "comment": "/**\n * @param {string} - Hostname.\n * @param {number} - Port number.\n */",
        "meta": {
            "range": [
                98,
                140
            ],
            "filename": "paramtag2.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003761",
                "name": "exports.open",
                "type": "FunctionExpression",
                "paramnames": [
                    "hostname",
                    "port"
                ]
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Hostname.",
                "name": "hostname"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Port number.",
                "name": "port"
            }
        ],
        "name": "open",
        "longname": "module:mysocket.open",
        "kind": "function",
        "memberof": "module:mysocket",
        "scope": "static"
    },
    {
        "comment": "/**\n * @constructor\n */",
        "meta": {
            "range": [
                28,
                49
            ],
            "filename": "paramtaginvalidtype.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003772",
                "name": "Test",
                "type": "FunctionExpression"
            }
        },
        "kind": "class",
        "name": "Test",
        "longname": "Test",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @param {string, number} a\n */",
        "meta": {
            "range": [
                89,
                126
            ],
            "filename": "paramtaginvalidtype.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003777",
                "name": "Test.prototype.test",
                "type": "FunctionExpression",
                "paramnames": [
                    "a"
                ]
            }
        },
        "params": [
            {
                "name": "a"
            }
        ],
        "name": "test",
        "longname": "Test#test",
        "kind": "function",
        "memberof": "Test",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @name virtual\n */",
        "meta": {
            "filename": "plugins.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "name": "virtual",
        "longname": "virtual",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                30,
                41
            ],
            "filename": "plugins.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003789",
                "name": "foo",
                "type": "Literal",
                "value": "bar"
            }
        },
        "undocumented": true,
        "name": "foo",
        "longname": "foo",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @foo bar\n */",
        "meta": {
            "range": [
                68,
                81
            ],
            "filename": "plugins.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003793",
                "name": "test",
                "type": "Literal",
                "value": "tada"
            }
        },
        "tags": [
            {
                "originalTitle": "foo",
                "title": "foo",
                "text": "bar",
                "value": "bar"
            }
        ],
        "name": "test",
        "longname": "test",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @polymerBehavior */",
        "meta": {
            "range": [
                28,
                50
            ],
            "filename": "polymerbehaviortag.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003799",
                "name": "MyPolymerBehavior",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "name": "MyPolymerBehavior",
        "longname": "MyPolymerBehavior",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * A Polymer class.\n * @polymer\n */",
        "meta": {
            "range": [
                40,
                57
            ],
            "filename": "polymertag.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003804",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "A Polymer class.",
        "name": "Foo",
        "longname": "Foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @preserve My cool license goes here. */",
        "meta": {
            "range": [
                48,
                49
            ],
            "filename": "preservetag.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003810",
                "name": "x"
            }
        },
        "license": "My cool license goes here.",
        "name": "x",
        "longname": "x",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n* @constructor\n* @private\n*/",
        "meta": {
            "range": [
                33,
                93
            ],
            "filename": "privatetag.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003814",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this.bar": "Foo#bar"
            }
        },
        "kind": "class",
        "access": "private",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                78,
                90
            ],
            "filename": "privatetag.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003818",
                "name": "this.bar",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "bar",
        "longname": "Foo#bar",
        "kind": "member",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @private {Object.<string, number>}\n */",
        "meta": {
            "range": [
                50,
                144
            ],
            "filename": "privatetag2.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003826",
                "name": "connectionPorts",
                "type": "ObjectExpression",
                "value": "{\"undefined\":4997}"
            }
        },
        "access": "private",
        "name": "connectionPorts",
        "longname": "connectionPorts",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                74,
                91
            ],
            "filename": "privatetag2.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003829",
                "name": "devServer",
                "type": "Literal",
                "value": 6464
            }
        },
        "undocumented": true,
        "name": "devServer",
        "longname": "connectionPorts.devServer",
        "kind": "member",
        "memberof": "connectionPorts",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                97,
                115
            ],
            "filename": "privatetag2.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003831",
                "name": "prodServer",
                "type": "Literal",
                "value": 2232
            }
        },
        "undocumented": true,
        "name": "prodServer",
        "longname": "connectionPorts.prodServer",
        "kind": "member",
        "memberof": "connectionPorts",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                121,
                142
            ],
            "filename": "privatetag2.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003833",
                "name": "stagingServer",
                "type": "Literal",
                "value": 4997
            }
        },
        "undocumented": true,
        "name": "stagingServer",
        "longname": "connectionPorts.stagingServer",
        "kind": "member",
        "memberof": "connectionPorts",
        "scope": "static"
    },
    {
        "comment": "/**\n    An automated documentation generator for JavaScript.\n    @project JSDoc\n    @version 3.0.0\n    @copyright 2011 (c) Michael Mathews <micmath@gmail.com>\n    @license Apache Version 2 <http://www.apache.org/licenses/LICENSE-2.0>\n */",
        "meta": {
            "range": [
                238,
                260
            ],
            "filename": "projecttag.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003837",
                "name": "blah",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "url"
                ]
            }
        },
        "description": "An automated documentation generator for JavaScript.",
        "tags": [
            {
                "originalTitle": "project",
                "title": "project",
                "text": "JSDoc",
                "value": "JSDoc"
            }
        ],
        "version": "3.0.0",
        "copyright": "2011 (c) Michael Mathews <micmath@gmail.com>",
        "license": "Apache Version 2 <http://www.apache.org/licenses/LICENSE-2.0>",
        "name": "blah",
        "longname": "blah",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @namespace\n * @property {String} id=abc123 The identifier.\n * @property {Object} defaults The default values.\n * @property {Number} defaults.a=1 The a property of the defaults.\n * @property {String} defaults.b The b property of the defaults.\n */",
        "meta": {
            "range": [
                257,
                369
            ],
            "filename": "propertytag.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003844",
                "name": "myobject",
                "type": "ObjectExpression",
                "value": "{\"id\":\"abc123\",\"defaults\":\"\"}"
            }
        },
        "kind": "namespace",
        "properties": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "defaultvalue": "abc123",
                "description": "The identifier.",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The default values.",
                "name": "defaults"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "defaultvalue": 1,
                "description": "The a property of the defaults.",
                "name": "defaults.a"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The b property of the defaults.",
                "name": "defaults.b"
            }
        ],
        "name": "myobject",
        "longname": "myobject",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                274,
                286
            ],
            "filename": "propertytag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003847",
                "name": "id",
                "type": "Literal",
                "value": "abc123"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "myobject.id",
        "kind": "member",
        "memberof": "myobject",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                292,
                367
            ],
            "filename": "propertytag.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003849",
                "name": "defaults",
                "type": "ObjectExpression",
                "value": "{\"a\":1,\"b\":\"Hit the light\",\"c\":true}"
            }
        },
        "undocumented": true,
        "name": "defaults",
        "longname": "myobject.defaults",
        "kind": "member",
        "memberof": "myobject",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                312,
                316
            ],
            "filename": "propertytag.js",
            "lineno": 11,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003851",
                "name": "a",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "a",
        "longname": "myobject.defaults.a",
        "kind": "member",
        "memberof": "myobject.defaults",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                326,
                344
            ],
            "filename": "propertytag.js",
            "lineno": 12,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003853",
                "name": "b",
                "type": "Literal",
                "value": "Hit the light"
            }
        },
        "undocumented": true,
        "name": "b",
        "longname": "myobject.defaults.b",
        "kind": "member",
        "memberof": "myobject.defaults",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                354,
                361
            ],
            "filename": "propertytag.js",
            "lineno": 13,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003855",
                "name": "c",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "c",
        "longname": "myobject.defaults.c",
        "kind": "member",
        "memberof": "myobject.defaults",
        "scope": "static"
    },
    {
        "comment": "/** @module uid */",
        "meta": {
            "filename": "protectedtag.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "uid",
        "longname": "module:uid"
    },
    {
        "comment": "/** @protected */",
        "meta": {
            "range": [
                42,
                56
            ],
            "filename": "protectedtag.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003860",
                "name": "uidCounter",
                "type": "Literal",
                "value": 1
            }
        },
        "access": "protected",
        "name": "uidCounter",
        "longname": "module:uid~uidCounter",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:uid",
        "params": []
    },
    {
        "comment": "/** @protected */",
        "meta": {
            "range": [
                81,
                134
            ],
            "filename": "protectedtag.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003864",
                "name": "uidObjects",
                "type": "ObjectExpression",
                "value": "{\"root\":\"\"}"
            }
        },
        "access": "protected",
        "name": "uidObjects",
        "longname": "module:uid~uidObjects",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:uid",
        "params": []
    },
    {
        "comment": "/** Root object. */",
        "meta": {
            "range": [
                124,
                132
            ],
            "filename": "protectedtag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003867",
                "name": "root",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "description": "Root object.",
        "name": "root",
        "longname": "module:uid~uidObjects.root",
        "kind": "member",
        "memberof": "module:uid~uidObjects",
        "scope": "static"
    },
    {
        "comment": "/** Obtain a unique ID. */",
        "meta": {
            "range": [
                164,
                227
            ],
            "filename": "protectedtag.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003870",
                "name": "exports.getUid",
                "type": "FunctionExpression",
                "value": "getUid",
                "paramnames": []
            }
        },
        "description": "Obtain a unique ID.",
        "name": "getUid",
        "longname": "module:uid.getUid",
        "kind": "function",
        "memberof": "module:uid",
        "scope": "static"
    },
    {
        "comment": "/** Associate an object with a unique ID. */",
        "meta": {
            "range": [
                275,
                366
            ],
            "filename": "protectedtag.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003881",
                "name": "exports.setObjectForUid",
                "type": "FunctionExpression",
                "value": "setObjectForUid",
                "paramnames": [
                    "obj",
                    "uid"
                ]
            },
            "vars": {
                "uidObjects[undefined]": "module:uid~uidObjects.undefined]"
            }
        },
        "description": "Associate an object with a unique ID.",
        "name": "setObjectForUid",
        "longname": "module:uid.setObjectForUid",
        "kind": "function",
        "memberof": "module:uid",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                342,
                363
            ],
            "filename": "protectedtag.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003891",
                "name": "uidObjects[undefined]",
                "type": "Identifier",
                "value": "obj",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "module:uid~uidObjects.undefined]",
        "kind": "member",
        "memberof": "module:uid~uidObjects",
        "scope": "static"
    },
    {
        "comment": "/** @protected {number} */",
        "meta": {
            "range": [
                31,
                45
            ],
            "filename": "protectedtag2.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003899",
                "name": "uidCounter",
                "type": "Literal",
                "value": 1
            }
        },
        "access": "protected",
        "name": "uidCounter",
        "longname": "uidCounter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Unique ID generator.\n * @constructor\n */",
        "meta": {
            "range": [
                96,
                122
            ],
            "filename": "protectedtag2.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003902",
                "name": "UidGenerator",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Unique ID generator.",
        "kind": "class",
        "name": "UidGenerator",
        "longname": "UidGenerator",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Generate a unique ID. */",
        "meta": {
            "range": [
                153,
                235
            ],
            "filename": "protectedtag2.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003906",
                "name": "UidGenerator.prototype.generate",
                "type": "FunctionExpression",
                "value": "generate",
                "paramnames": []
            }
        },
        "description": "Generate a unique ID.",
        "name": "generate",
        "longname": "UidGenerator#generate",
        "kind": "function",
        "memberof": "UidGenerator",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Public class.\n *\n * @class\n * @public\n */",
        "meta": {
            "range": [
                49,
                66
            ],
            "filename": "publictag.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003920",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Public class.",
        "kind": "class",
        "access": "public",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Public variable.\n *\n * @public {string}\n */",
        "meta": {
            "range": [
                55,
                66
            ],
            "filename": "publictag2.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003926",
                "name": "bar",
                "type": "Literal",
                "value": "baz"
            }
        },
        "description": "Public variable.",
        "access": "public",
        "name": "bar",
        "longname": "bar",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @event chat.\"#channel\".\"op:announce-motd\"\n */",
        "meta": {
            "filename": "quotename.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "event",
        "name": "\"op:announce-motd\"",
        "memberof": "chat.\"#channel\"",
        "longname": "chat.\"#channel\".event:\"op:announce-motd\"",
        "scope": "static"
    },
    {
        "comment": "/** @namespace */",
        "meta": {
            "range": [
                22,
                31
            ],
            "filename": "quotename.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003932",
                "name": "chat",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "kind": "namespace",
        "name": "chat",
        "longname": "chat",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @namespace\n */",
        "meta": {
            "range": [
                57,
                78
            ],
            "filename": "quotename.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003936",
                "name": "chat[\"#channel\"]",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "kind": "namespace",
        "name": "\"#channel\"",
        "longname": "chat.\"#channel\"",
        "memberof": "chat",
        "scope": "static"
    },
    {
        "comment": "/**\n    @member\n    @type {boolean}\n    @defaultvalue\n */",
        "meta": {
            "range": [
                139,
                167
            ],
            "filename": "quotename.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003942",
                "name": "chat[\"#channel\"].open",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "kind": "member",
        "type": {
            "names": [
                "boolean"
            ]
        },
        "defaultvalue": true,
        "name": "open",
        "longname": "chat.\"#channel\".open",
        "memberof": "chat.\"#channel\"",
        "scope": "static"
    },
    {
        "comment": "/** @namespace */",
        "meta": {
            "range": [
                22,
                158
            ],
            "filename": "quotename2.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003952",
                "name": "contacts",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "kind": "namespace",
        "name": "contacts",
        "longname": "contacts",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @namespace */",
        "meta": {
            "range": [
                62,
                156
            ],
            "filename": "quotename2.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003955",
                "name": "\"say-\\\"hello\\\"@example.com\"",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"Sue Smart\"}"
            }
        },
        "kind": "namespace",
        "name": "\"say-\\\"hello\\\"@example.com\"",
        "longname": "contacts.\"say-\\\"hello\\\"@example.com\"",
        "memberof": "contacts",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                127,
                150
            ],
            "filename": "quotename2.js",
            "lineno": 8,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003957",
                "name": "username",
                "type": "Literal",
                "value": "Sue Smart"
            }
        },
        "description": "document me",
        "name": "username",
        "longname": "contacts.\"say-\\\"hello\\\"@example.com\".username",
        "kind": "member",
        "memberof": "contacts.\"say-\\\"hello\\\"@example.com\"",
        "scope": "static"
    },
    {
        "comment": "/**\n* @constructor\n*/",
        "meta": {
            "range": [
                22,
                90
            ],
            "filename": "readonlytag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003961",
                "name": "Collection",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this.length": "Collection#length"
            }
        },
        "kind": "class",
        "name": "Collection",
        "longname": "Collection",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @readonly */",
        "meta": {
            "range": [
                72,
                87
            ],
            "filename": "readonlytag.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003965",
                "name": "this.length",
                "type": "Literal",
                "value": 0,
                "paramnames": []
            }
        },
        "readonly": true,
        "name": "length",
        "longname": "Collection#length",
        "kind": "member",
        "memberof": "Collection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @requires module:foo/helper\n */",
        "meta": {
            "range": [
                39,
                57
            ],
            "filename": "requirestag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003972",
                "name": "foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "requires": [
            "module:foo/helper"
        ],
        "name": "foo",
        "longname": "foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @requires foo\n * @requires Pez#blat this text is ignored\n */",
        "meta": {
            "range": [
                127,
                145
            ],
            "filename": "requirestag.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003975",
                "name": "bar",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "requires": [
            "module:foo",
            "module:Pez#blat"
        ],
        "name": "bar",
        "longname": "bar",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @requires {@link module:zest}\n * @requires {@linkplain module:zing}\n * @requires {@linkstupid module:pizzazz}\n */",
        "meta": {
            "range": [
                268,
                286
            ],
            "filename": "requirestag.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003978",
                "name": "baz",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "requires": [
            "{@link module:zest}",
            "{@linkplain module:zing}",
            "{@linkstupid module:pizzazz}"
        ],
        "name": "baz",
        "longname": "baz",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Set the list of users who are admins.\n *\n * @param {User} users - The users who will receive admin rights.\n */",
        "meta": {
            "range": [
                133,
                164
            ],
            "filename": "restparams.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003985",
                "name": "setAdmins",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "users"
                ]
            }
        },
        "description": "Set the list of users who are admins.",
        "params": [
            {
                "type": {
                    "names": [
                        "User"
                    ]
                },
                "description": "The users who will receive admin rights.",
                "name": "users",
                "variable": true
            }
        ],
        "name": "setAdmins",
        "longname": "setAdmins",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Set the list of users who can access a widget.\n *\n * @param {Widget} widget - The widget.\n * @param {User} users - The users who will receive rights to access the widget.\n */",
        "meta": {
            "range": [
                348,
                393
            ],
            "filename": "restparams.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003990",
                "name": "setWidgetAccess",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "widget",
                    "users"
                ]
            }
        },
        "description": "Set the list of users who can access a widget.",
        "params": [
            {
                "type": {
                    "names": [
                        "Widget"
                    ]
                },
                "description": "The widget.",
                "name": "widget"
            },
            {
                "type": {
                    "names": [
                        "User"
                    ]
                },
                "description": "The users who will receive rights to access the widget.",
                "name": "users",
                "variable": true
            }
        ],
        "name": "setWidgetAccess",
        "longname": "setWidgetAccess",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Set the list of users who are managers.\n *\n * @param {User} users - The users who are managers.\n */",
        "meta": {
            "range": [
                506,
                541
            ],
            "filename": "restparams.js",
            "lineno": 23,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003997",
                "name": "setManagers",
                "type": "FunctionExpression"
            }
        },
        "description": "Set the list of users who are managers.",
        "params": [
            {
                "type": {
                    "names": [
                        "User"
                    ]
                },
                "description": "The users who are managers.",
                "name": "users",
                "variable": true
            }
        ],
        "name": "setManagers",
        "longname": "setManagers",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/** Class representing a widget. */",
        "meta": {
            "range": [
                51,
                226
            ],
            "filename": "restparams2.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004007",
                "name": "Widget",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Class representing a widget.",
        "name": "Widget",
        "longname": "Widget",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/**\n     * Add users who can access the widget.\n     *\n     * @param {User} users - The users who can access the widget.\n     */",
        "meta": {
            "range": [
                203,
                224
            ],
            "filename": "restparams2.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004010",
                "name": "Widget#addUsers",
                "type": "MethodDefinition",
                "paramnames": [
                    "users"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Add users who can access the widget.",
        "params": [
            {
                "type": {
                    "names": [
                        "User"
                    ]
                },
                "description": "The users who can access the widget.",
                "name": "users",
                "variable": true
            }
        ],
        "name": "addUsers",
        "longname": "Widget#addUsers",
        "kind": "function",
        "memberof": "Widget",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @returns {string|Array<string>}  The names of the found item(s).\n */",
        "meta": {
            "range": [
                76,
                105
            ],
            "filename": "returnstag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004018",
                "name": "find",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "targetName"
                ]
            }
        },
        "returns": [
            {
                "type": {
                    "names": [
                        "string",
                        "Array.<string>"
                    ]
                },
                "description": "The names of the found item(s)."
            }
        ],
        "name": "find",
        "longname": "find",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @returns {!string} The name, if defined.\n */",
        "meta": {
            "range": [
                159,
                181
            ],
            "filename": "returnstag.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004022",
                "name": "getName",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "nullable": false,
                "description": "The name, if defined."
            }
        ],
        "name": "getName",
        "longname": "getName",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @return The binding id.\n */",
        "meta": {
            "range": [
                218,
                245
            ],
            "filename": "returnstag.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004025",
                "name": "bind",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "callback"
                ]
            }
        },
        "returns": [
            {
                "description": "The binding id."
            }
        ],
        "name": "bind",
        "longname": "bind",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @return An object to be passed to {@link find}.\n */",
        "meta": {
            "range": [
                306,
                332
            ],
            "filename": "returnstag.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004029",
                "name": "convert",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "name"
                ]
            }
        },
        "returns": [
            {
                "description": "An object to be passed to {@link find}."
            }
        ],
        "name": "convert",
        "longname": "convert",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** (scope tags for global objects do not override globalness hence need a container class)\n * @module scopetags */",
        "meta": {
            "filename": "scopetags.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "(scope tags for global objects do not override globalness hence need a container class)",
        "kind": "module",
        "name": "scopetags",
        "longname": "module:scopetags"
    },
    {
        "comment": "/** @inner */",
        "meta": {
            "range": [
                134,
                141
            ],
            "filename": "scopetags.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004036",
                "name": "myInner"
            }
        },
        "scope": "inner",
        "name": "myInner",
        "longname": "module:scopetags~myInner",
        "kind": "member",
        "memberof": "module:scopetags",
        "params": []
    },
    {
        "comment": "/** @instance */",
        "meta": {
            "range": [
                165,
                175
            ],
            "filename": "scopetags.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004039",
                "name": "myInstance"
            }
        },
        "scope": "instance",
        "name": "myInstance",
        "longname": "module:scopetags#myInstance",
        "kind": "member",
        "memberof": "module:scopetags",
        "params": []
    },
    {
        "comment": "/** @static */",
        "meta": {
            "range": [
                197,
                205
            ],
            "filename": "scopetags.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004042",
                "name": "myStatic"
            }
        },
        "scope": "static",
        "name": "myStatic",
        "longname": "module:scopetags.myStatic",
        "kind": "member",
        "memberof": "module:scopetags",
        "params": []
    },
    {
        "comment": "/**\n*  @see {@link bar}\n*/",
        "meta": {
            "range": [
                27,
                45
            ],
            "filename": "seetag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004046",
                "name": "foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "see": [
            "{@link bar}"
        ],
        "name": "foo",
        "longname": "foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n*  @see http://example.com/someref\n*/",
        "meta": {
            "range": [
                89,
                107
            ],
            "filename": "seetag.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004049",
                "name": "bar",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "see": [
            "http://example.com/someref"
        ],
        "name": "bar",
        "longname": "bar",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n    @since 1.2.3\n*/",
        "meta": {
            "range": [
                24,
                44
            ],
            "filename": "sincetag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004054",
                "name": "foo",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "since": "1.2.3",
        "name": "foo",
        "longname": "foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @class\n */",
        "meta": {
            "range": [
                33,
                107
            ],
            "filename": "specialchars.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004062",
                "name": "Socket",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this['port#number']": "Socket#'port#number'"
            }
        },
        "kind": "class",
        "name": "Socket",
        "longname": "Socket",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Port number. */",
        "meta": {
            "range": [
                81,
                104
            ],
            "filename": "specialchars.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004066",
                "name": "this['port#number']",
                "type": "Literal",
                "value": 0,
                "paramnames": []
            }
        },
        "description": "Port number.",
        "name": "'port#number'",
        "longname": "Socket#'port#number'",
        "kind": "member",
        "memberof": "Socket",
        "scope": "instance"
    },
    {
        "comment": "/** Open a connection. */",
        "meta": {
            "range": [
                135,
                192
            ],
            "filename": "specialchars.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004072",
                "name": "Socket.prototype['open~a.connection#now']",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "description": "Open a connection.",
        "name": "'open~a.connection#now'",
        "longname": "Socket#'open~a.connection#now'",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance"
    },
    {
        "comment": "/** @namespace */",
        "meta": {
            "range": [
                22,
                90
            ],
            "filename": "specialnames.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004083",
                "name": "constructor",
                "type": "ObjectExpression",
                "value": "{\"toString\":\"\"}"
            }
        },
        "kind": "namespace",
        "name": "constructor",
        "longname": "constructor",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                65,
                88
            ],
            "filename": "specialnames.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004086",
                "name": "toString",
                "type": "FunctionExpression"
            }
        },
        "description": "document me",
        "name": "toString",
        "longname": "constructor.toString",
        "kind": "function",
        "memberof": "constructor",
        "scope": "static"
    },
    {
        "comment": "/** @namespace */",
        "meta": {
            "range": [
                115,
                180
            ],
            "filename": "specialnames.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004090",
                "name": "prototype",
                "type": "ObjectExpression",
                "value": "{\"valueOf\":\"\"}"
            }
        },
        "kind": "namespace",
        "name": "prototype",
        "longname": "prototype",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                156,
                178
            ],
            "filename": "specialnames.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004093",
                "name": "valueOf",
                "type": "FunctionExpression"
            }
        },
        "description": "document me",
        "name": "valueOf",
        "longname": "prototype.valueOf",
        "kind": "function",
        "memberof": "prototype",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                206,
                254
            ],
            "filename": "specialnames.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004097",
                "name": "hasOwnProperty",
                "type": "MemberExpression",
                "value": "Object.prototype.hasOwnProperty"
            }
        },
        "description": "document me",
        "name": "hasOwnProperty",
        "longname": "hasOwnProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n* Script that does something awesome\n*\n* @copyright (c) 2011 Rotorz Limited. All rights reserved.\n* @author Lea Hayes\n* @module myscript/core\n*/",
        "meta": {
            "filename": "starbangstar.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Script that does something awesome",
        "copyright": "(c) 2011 Rotorz Limited. All rights reserved.",
        "author": [
            "Lea Hayes"
        ],
        "kind": "module",
        "name": "myscript/core",
        "longname": "module:myscript/core"
    },
    {
        "comment": "/**\n * Foo class.\n *\n * @constructor\n * @struct\n */",
        "meta": {
            "range": [
                52,
                69
            ],
            "filename": "structtag.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004108",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Foo class.",
        "kind": "class",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @summary I do not like green eggs and ham! */",
        "meta": {
            "range": [
                50,
                68
            ],
            "filename": "summarytag.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004113",
                "name": "Sam",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "summary": "I do not like green eggs and ham!",
        "name": "Sam",
        "longname": "Sam",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Foo class.\n *\n * @constructor\n * @suppress {deprecated}\n */",
        "meta": {
            "range": [
                67,
                84
            ],
            "filename": "suppresstag.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004118",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Foo class.",
        "kind": "class",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @param {T} t\n * @constructor\n * @template T\n */",
        "meta": {
            "range": [
                55,
                79
            ],
            "filename": "templatetag.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004123",
                "name": "Container",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "t"
                ]
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "T"
                    ]
                },
                "name": "t"
            }
        ],
        "kind": "class",
        "name": "Container",
        "longname": "Container",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                36
            ],
            "filename": "testPlugin1.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004130",
                "name": "global.jsdocPluginsTest.plugin1",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "plugin1",
        "longname": "global.jsdocPluginsTest.plugin1",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39,
                648
            ],
            "filename": "testPlugin1.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004138",
                "name": "exports.handlers",
                "type": "ObjectExpression",
                "value": "{\"fileBegin\":\"\",\"beforeParse\":\"\",\"jsdocCommentFound\":\"\",\"symbolFound\":\"\",\"newDoclet\":\"\",\"fileComplete\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "handlers",
        "longname": "handlers",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64,
                151
            ],
            "filename": "testPlugin1.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004143",
                "name": "fileBegin",
                "type": "FunctionExpression"
            },
            "vars": {
                "global.jsdocPluginsTest.plugin1.fileBegin": "global.jsdocPluginsTest.plugin1.fileBegin"
            }
        },
        "undocumented": true,
        "name": "fileBegin",
        "longname": "handlers.fileBegin",
        "kind": "function",
        "memberof": "handlers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                96,
                144
            ],
            "filename": "testPlugin1.js",
            "lineno": 5,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004147",
                "name": "global.jsdocPluginsTest.plugin1.fileBegin",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fileBegin",
        "longname": "global.jsdocPluginsTest.plugin1.fileBegin",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest.plugin1",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                157,
                248
            ],
            "filename": "testPlugin1.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004156",
                "name": "beforeParse",
                "type": "FunctionExpression"
            },
            "vars": {
                "global.jsdocPluginsTest.plugin1.beforeParse": "global.jsdocPluginsTest.plugin1.beforeParse"
            }
        },
        "undocumented": true,
        "name": "beforeParse",
        "longname": "handlers.beforeParse",
        "kind": "function",
        "memberof": "handlers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                191,
                241
            ],
            "filename": "testPlugin1.js",
            "lineno": 8,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004160",
                "name": "global.jsdocPluginsTest.plugin1.beforeParse",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "beforeParse",
        "longname": "global.jsdocPluginsTest.plugin1.beforeParse",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest.plugin1",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                254,
                357
            ],
            "filename": "testPlugin1.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004169",
                "name": "jsdocCommentFound",
                "type": "FunctionExpression"
            },
            "vars": {
                "global.jsdocPluginsTest.plugin1.jsdocCommentFound": "global.jsdocPluginsTest.plugin1.jsdocCommentFound"
            }
        },
        "undocumented": true,
        "name": "jsdocCommentFound",
        "longname": "handlers.jsdocCommentFound",
        "kind": "function",
        "memberof": "handlers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                294,
                350
            ],
            "filename": "testPlugin1.js",
            "lineno": 11,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004173",
                "name": "global.jsdocPluginsTest.plugin1.jsdocCommentFound",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "jsdocCommentFound",
        "longname": "global.jsdocPluginsTest.plugin1.jsdocCommentFound",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest.plugin1",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                363,
                454
            ],
            "filename": "testPlugin1.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004182",
                "name": "symbolFound",
                "type": "FunctionExpression"
            },
            "vars": {
                "global.jsdocPluginsTest.plugin1.symbolFound": "global.jsdocPluginsTest.plugin1.symbolFound"
            }
        },
        "undocumented": true,
        "name": "symbolFound",
        "longname": "handlers.symbolFound",
        "kind": "function",
        "memberof": "handlers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                397,
                447
            ],
            "filename": "testPlugin1.js",
            "lineno": 14,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004186",
                "name": "global.jsdocPluginsTest.plugin1.symbolFound",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "symbolFound",
        "longname": "global.jsdocPluginsTest.plugin1.symbolFound",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest.plugin1",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                460,
                547
            ],
            "filename": "testPlugin1.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004195",
                "name": "newDoclet",
                "type": "FunctionExpression"
            },
            "vars": {
                "global.jsdocPluginsTest.plugin1.newDoclet": "global.jsdocPluginsTest.plugin1.newDoclet"
            }
        },
        "undocumented": true,
        "name": "newDoclet",
        "longname": "handlers.newDoclet",
        "kind": "function",
        "memberof": "handlers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                492,
                540
            ],
            "filename": "testPlugin1.js",
            "lineno": 17,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004199",
                "name": "global.jsdocPluginsTest.plugin1.newDoclet",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "newDoclet",
        "longname": "global.jsdocPluginsTest.plugin1.newDoclet",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest.plugin1",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                553,
                646
            ],
            "filename": "testPlugin1.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004208",
                "name": "fileComplete",
                "type": "FunctionExpression"
            },
            "vars": {
                "global.jsdocPluginsTest.plugin1.fileComplete": "global.jsdocPluginsTest.plugin1.fileComplete"
            }
        },
        "undocumented": true,
        "name": "fileComplete",
        "longname": "handlers.fileComplete",
        "kind": "function",
        "memberof": "handlers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                588,
                639
            ],
            "filename": "testPlugin1.js",
            "lineno": 20,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004212",
                "name": "global.jsdocPluginsTest.plugin1.fileComplete",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fileComplete",
        "longname": "global.jsdocPluginsTest.plugin1.fileComplete",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest.plugin1",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                651,
                848
            ],
            "filename": "testPlugin1.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004222",
                "name": "exports.defineTags",
                "type": "FunctionExpression",
                "paramnames": [
                    "dictionary"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "defineTags",
        "longname": "defineTags",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                737,
                754
            ],
            "filename": "testPlugin1.js",
            "lineno": 26,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004236",
                "name": "canHaveName",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "canHaveName",
        "longname": "canHaveName",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                764,
                838
            ],
            "filename": "testPlugin1.js",
            "lineno": 27,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004238",
                "name": "onTagged",
                "type": "FunctionExpression"
            },
            "vars": {
                "doclet.foo": "doclet.foo"
            }
        },
        "undocumented": true,
        "name": "onTagged",
        "longname": "onTagged",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                810,
                827
            ],
            "filename": "testPlugin1.js",
            "lineno": 28,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004244",
                "name": "doclet.foo",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "foo",
        "longname": "doclet.foo",
        "kind": "member",
        "memberof": "doclet",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                36
            ],
            "filename": "testPlugin2.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004252",
                "name": "global.jsdocPluginsTest.plugin2",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "plugin2",
        "longname": "global.jsdocPluginsTest.plugin2",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39,
                648
            ],
            "filename": "testPlugin2.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004260",
                "name": "exports.handlers",
                "type": "ObjectExpression",
                "value": "{\"fileBegin\":\"\",\"beforeParse\":\"\",\"jsdocCommentFound\":\"\",\"symbolFound\":\"\",\"newDoclet\":\"\",\"fileComplete\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "handlers",
        "longname": "handlers",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64,
                151
            ],
            "filename": "testPlugin2.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004265",
                "name": "fileBegin",
                "type": "FunctionExpression"
            },
            "vars": {
                "global.jsdocPluginsTest.plugin2.fileBegin": "global.jsdocPluginsTest.plugin2.fileBegin"
            }
        },
        "undocumented": true,
        "name": "fileBegin",
        "longname": "handlers.fileBegin",
        "kind": "function",
        "memberof": "handlers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                96,
                144
            ],
            "filename": "testPlugin2.js",
            "lineno": 5,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004269",
                "name": "global.jsdocPluginsTest.plugin2.fileBegin",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fileBegin",
        "longname": "global.jsdocPluginsTest.plugin2.fileBegin",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest.plugin2",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                157,
                248
            ],
            "filename": "testPlugin2.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004278",
                "name": "beforeParse",
                "type": "FunctionExpression"
            },
            "vars": {
                "global.jsdocPluginsTest.plugin2.beforeParse": "global.jsdocPluginsTest.plugin2.beforeParse"
            }
        },
        "undocumented": true,
        "name": "beforeParse",
        "longname": "handlers.beforeParse",
        "kind": "function",
        "memberof": "handlers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                191,
                241
            ],
            "filename": "testPlugin2.js",
            "lineno": 8,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004282",
                "name": "global.jsdocPluginsTest.plugin2.beforeParse",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "beforeParse",
        "longname": "global.jsdocPluginsTest.plugin2.beforeParse",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest.plugin2",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                254,
                357
            ],
            "filename": "testPlugin2.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004291",
                "name": "jsdocCommentFound",
                "type": "FunctionExpression"
            },
            "vars": {
                "global.jsdocPluginsTest.plugin2.jsdocCommentFound": "global.jsdocPluginsTest.plugin2.jsdocCommentFound"
            }
        },
        "undocumented": true,
        "name": "jsdocCommentFound",
        "longname": "handlers.jsdocCommentFound",
        "kind": "function",
        "memberof": "handlers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                294,
                350
            ],
            "filename": "testPlugin2.js",
            "lineno": 11,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004295",
                "name": "global.jsdocPluginsTest.plugin2.jsdocCommentFound",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "jsdocCommentFound",
        "longname": "global.jsdocPluginsTest.plugin2.jsdocCommentFound",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest.plugin2",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                363,
                454
            ],
            "filename": "testPlugin2.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004304",
                "name": "symbolFound",
                "type": "FunctionExpression"
            },
            "vars": {
                "global.jsdocPluginsTest.plugin2.symbolFound": "global.jsdocPluginsTest.plugin2.symbolFound"
            }
        },
        "undocumented": true,
        "name": "symbolFound",
        "longname": "handlers.symbolFound",
        "kind": "function",
        "memberof": "handlers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                397,
                447
            ],
            "filename": "testPlugin2.js",
            "lineno": 14,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004308",
                "name": "global.jsdocPluginsTest.plugin2.symbolFound",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "symbolFound",
        "longname": "global.jsdocPluginsTest.plugin2.symbolFound",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest.plugin2",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                460,
                547
            ],
            "filename": "testPlugin2.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004317",
                "name": "newDoclet",
                "type": "FunctionExpression"
            },
            "vars": {
                "global.jsdocPluginsTest.plugin2.newDoclet": "global.jsdocPluginsTest.plugin2.newDoclet"
            }
        },
        "undocumented": true,
        "name": "newDoclet",
        "longname": "handlers.newDoclet",
        "kind": "function",
        "memberof": "handlers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                492,
                540
            ],
            "filename": "testPlugin2.js",
            "lineno": 17,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004321",
                "name": "global.jsdocPluginsTest.plugin2.newDoclet",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "newDoclet",
        "longname": "global.jsdocPluginsTest.plugin2.newDoclet",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest.plugin2",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                553,
                646
            ],
            "filename": "testPlugin2.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004330",
                "name": "fileComplete",
                "type": "FunctionExpression"
            },
            "vars": {
                "global.jsdocPluginsTest.plugin2.fileComplete": "global.jsdocPluginsTest.plugin2.fileComplete"
            }
        },
        "undocumented": true,
        "name": "fileComplete",
        "longname": "handlers.fileComplete",
        "kind": "function",
        "memberof": "handlers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                588,
                639
            ],
            "filename": "testPlugin2.js",
            "lineno": 20,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004334",
                "name": "global.jsdocPluginsTest.plugin2.fileComplete",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fileComplete",
        "longname": "global.jsdocPluginsTest.plugin2.fileComplete",
        "kind": "member",
        "memberof": "global.jsdocPluginsTest.plugin2",
        "scope": "static"
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                20,
                195
            ],
            "filename": "this-and-objectlit.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004345",
                "name": "Page",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "title"
                ]
            },
            "vars": {
                "this.parts": "Page#parts"
            }
        },
        "kind": "class",
        "name": "Page",
        "longname": "Page",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                47,
                192
            ],
            "filename": "this-and-objectlit.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004350",
                "name": "this.parts",
                "type": "ObjectExpression",
                "value": "{\"title\":\"\",\"body\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "parts",
        "longname": "Page#parts",
        "kind": "member",
        "memberof": "Page",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                70,
                82
            ],
            "filename": "this-and-objectlit.js",
            "lineno": 4,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004355",
                "name": "title",
                "type": "Identifier",
                "value": "title"
            }
        },
        "undocumented": true,
        "name": "title",
        "longname": "Page#parts.title",
        "kind": "member",
        "memberof": "Page#parts",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                92,
                186
            ],
            "filename": "this-and-objectlit.js",
            "lineno": 5,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004357",
                "name": "body",
                "type": "ObjectExpression",
                "value": "{\"heading\":\"\",\"main\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "Page#parts.body",
        "kind": "member",
        "memberof": "Page#parts",
        "scope": "static"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                143,
                154
            ],
            "filename": "this-and-objectlit.js",
            "lineno": 7,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004359",
                "name": "heading",
                "type": "Literal",
                "value": ""
            }
        },
        "description": "document me",
        "name": "heading",
        "longname": "Page#parts.body.heading",
        "kind": "member",
        "memberof": "Page#parts.body",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                168,
                176
            ],
            "filename": "this-and-objectlit.js",
            "lineno": 8,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004361",
                "name": "main",
                "type": "Literal",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "main",
        "longname": "Page#parts.body.main",
        "kind": "member",
        "memberof": "Page#parts.body",
        "scope": "static"
    },
    {
        "comment": "/**\n    @constructor\n */",
        "meta": {
            "range": [
                25,
                218
            ],
            "filename": "this.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004365",
                "name": "Singer",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this.tralala": "Singer#tralala",
                "": null
            }
        },
        "kind": "class",
        "name": "Singer",
        "longname": "Singer",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                215
            ],
            "filename": "this.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004369",
                "name": "this.tralala",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "this.isSinging": "Singer#isSinging"
            }
        },
        "undocumented": true,
        "name": "tralala",
        "longname": "Singer#tralala",
        "kind": "function",
        "memberof": "Singer",
        "scope": "instance"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                145,
                166
            ],
            "filename": "this.js",
            "lineno": 8,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004376",
                "name": "this.isSinging",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "isSinging",
        "longname": "Singer#isSinging",
        "kind": "member",
        "memberof": "Singer",
        "scope": "instance"
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                20,
                386
            ],
            "filename": "this2.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004383",
                "name": "TemplateBuilder",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "templateType"
                ]
            },
            "vars": {
                "this.Template": "TemplateBuilder#Template",
                "": null
            }
        },
        "kind": "class",
        "name": "TemplateBuilder",
        "longname": "TemplateBuilder",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                154,
                382
            ],
            "filename": "this2.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004388",
                "name": "this.Template",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "this.render": "TemplateBuilder#Template#render",
                "": null
            }
        },
        "kind": "class",
        "name": "Template",
        "longname": "TemplateBuilder#Template",
        "memberof": "TemplateBuilder",
        "scope": "instance"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                271,
                376
            ],
            "filename": "this2.js",
            "lineno": 9,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004395",
                "name": "this.render",
                "type": "FunctionExpression",
                "paramnames": [
                    "data"
                ]
            },
            "vars": {
                "this.rendered": "TemplateBuilder#Template#rendered"
            }
        },
        "description": "document me",
        "name": "render",
        "longname": "TemplateBuilder#Template#render",
        "kind": "function",
        "memberof": "TemplateBuilder#Template",
        "scope": "instance"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                345,
                365
            ],
            "filename": "this2.js",
            "lineno": 11,
            "columnno": 12,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004403",
                "name": "this.rendered",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "rendered",
        "longname": "TemplateBuilder#Template#rendered",
        "kind": "member",
        "memberof": "TemplateBuilder#Template",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                103
            ],
            "filename": "this3.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004410",
                "name": "setPosition",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "newP"
                ]
            },
            "vars": {
                "this.position": null
            }
        },
        "undocumented": true,
        "name": "setPosition",
        "longname": "setPosition",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                56,
                76
            ],
            "filename": "this3.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004415",
                "name": "this.position",
                "type": "Identifier",
                "value": "newP",
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "position",
        "longname": "position",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                29,
                51
            ],
            "filename": "this4.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004424",
                "name": "Template",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "kind": "class",
        "name": "Template",
        "longname": "Template",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                53,
                154
            ],
            "filename": "this4.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004428",
                "name": "Template.constructor",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "this.render": "Template#render",
                "": null
            }
        },
        "undocumented": true,
        "name": "constructor",
        "longname": "Template.constructor",
        "kind": "function",
        "memberof": "Template",
        "scope": "static"
    },
    {
        "comment": "/** Render content. */",
        "meta": {
            "range": [
                120,
                151
            ],
            "filename": "this4.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004435",
                "name": "this.render",
                "type": "FunctionExpression",
                "paramnames": [
                    "data"
                ]
            }
        },
        "description": "Render content.",
        "name": "render",
        "longname": "Template#render",
        "kind": "function",
        "memberof": "Template",
        "scope": "instance"
    },
    {
        "comment": "/** @module template */",
        "meta": {
            "filename": "this5.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "template",
        "longname": "module:template"
    },
    {
        "comment": "/**\n * @class\n * @alias module:template.Template\n */",
        "meta": {
            "range": [
                97,
                185
            ],
            "filename": "this5.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004447",
                "name": "Template",
                "type": "AssignmentExpression",
                "value": "exports.Template"
            }
        },
        "kind": "class",
        "alias": "module:template.Template",
        "name": "Template",
        "longname": "module:template.Template",
        "memberof": "module:template",
        "scope": "static",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                108,
                185
            ],
            "filename": "this5.js",
            "lineno": 9,
            "columnno": 15,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004449",
                "name": "exports.Template",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "this.view": "module:template.Template#view"
            }
        },
        "undocumented": true,
        "name": "Template",
        "longname": "module:template.Template",
        "kind": "function",
        "memberof": "module:template",
        "scope": "static"
    },
    {
        "comment": "/** View file. */",
        "meta": {
            "range": [
                166,
                182
            ],
            "filename": "this5.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004456",
                "name": "this.view",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "description": "View file.",
        "name": "view",
        "longname": "module:template.Template#view",
        "kind": "member",
        "memberof": "module:template.Template",
        "scope": "instance"
    },
    {
        "comment": "/** @module example */",
        "meta": {
            "filename": "this6.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "example",
        "longname": "module:example"
    },
    {
        "comment": "/**\n * An ES6 class.\n *\n * @alias module:example\n */",
        "meta": {
            "range": [
                92,
                248
            ],
            "filename": "this6.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004465",
                "name": "Foo",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "An ES6 class.",
        "alias": "module:example",
        "name": "module:example",
        "longname": "module:example",
        "kind": "class",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                108,
                246
            ],
            "filename": "this6.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004468",
                "name": "Foo",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "module:example",
        "longname": "module:example",
        "kind": "class",
        "alias": "module:example",
        "params": []
    },
    {
        "comment": "/**\n * An ES6 class.\n *\n * @alias module:example\n */",
        "meta": {
            "range": [
                92,
                248
            ],
            "filename": "this6.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004465",
                "name": "Foo",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "name": "module:example",
        "longname": "module:example",
        "kind": "class",
        "classdesc": "An ES6 class.",
        "alias": "module:example"
    },
    {
        "comment": "/**\n         * My property.\n         *\n         * @protected\n         */",
        "meta": {
            "range": [
                213,
                239
            ],
            "filename": "this6.js",
            "lineno": 17,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004473",
                "name": "this._someProperty",
                "type": "Literal",
                "value": "foo",
                "paramnames": []
            }
        },
        "description": "My property.",
        "access": "protected",
        "name": "_someProperty",
        "longname": "module:example#_someProperty",
        "kind": "member",
        "memberof": "module:example",
        "scope": "instance"
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                20,
                73
            ],
            "filename": "thistag.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004480",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "name"
                ]
            }
        },
        "kind": "class",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @this Foo */",
        "meta": {
            "range": [
                92,
                163
            ],
            "filename": "thistag.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004491",
                "name": "setName",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "name"
                ]
            },
            "vars": {
                "this.name": "Foo#name"
            }
        },
        "this": "Foo",
        "name": "setName",
        "longname": "setName",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                144,
                160
            ],
            "filename": "thistag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004496",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "name",
        "longname": "Foo#name",
        "kind": "member",
        "memberof": "Foo",
        "scope": "instance"
    },
    {
        "comment": "/** @constructor */",
        "meta": {
            "range": [
                20,
                73
            ],
            "filename": "thistag2.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004503",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "name"
                ]
            }
        },
        "kind": "class",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @this {Foo} */",
        "meta": {
            "range": [
                94,
                165
            ],
            "filename": "thistag2.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004514",
                "name": "setName",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "name"
                ]
            },
            "vars": {
                "this.name": "{Foo}#name"
            }
        },
        "this": "{Foo}",
        "name": "setName",
        "longname": "setName",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                146,
                162
            ],
            "filename": "thistag2.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004519",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "description": "document me",
        "name": "name",
        "longname": "{Foo}#name",
        "kind": "member",
        "memberof": "{Foo}",
        "scope": "instance"
    },
    {
        "comment": "/** @this {(Foo|Bar)} */",
        "meta": {
            "range": [
                192,
                240
            ],
            "filename": "thistag2.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004524",
                "name": "getName",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "name"
                ]
            }
        },
        "this": "{(Foo|Bar)}",
        "name": "getName",
        "longname": "getName",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** A function.\n * @todo something\n * @todo something else\n */",
        "meta": {
            "range": [
                63,
                79
            ],
            "filename": "todotag.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004534",
                "name": "x",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "A function.",
        "todo": [
            "something",
            "something else"
        ],
        "name": "x",
        "longname": "x",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @external foo */",
        "meta": {
            "filename": "trailingcomment.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "external",
        "name": "foo",
        "longname": "external:foo",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15,
                34
            ],
            "filename": "trailingcomment.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004542",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/** @external foo */",
        "meta": {
            "filename": "trailingcomment2.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "external",
        "name": "foo",
        "longname": "external:foo",
        "scope": "global"
    },
    {
        "comment": "/** @typedef {(string|number)} calc.NumberLike */",
        "meta": {
            "filename": "typedeftag.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "typedef",
        "name": "NumberLike",
        "type": {
            "names": [
                "string",
                "number"
            ]
        },
        "memberof": "calc",
        "longname": "calc.NumberLike",
        "scope": "static"
    },
    {
        "comment": "/** @typedef {Object} CalculatorBattery */",
        "meta": {
            "filename": "typedeftag.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "typedef",
        "name": "CalculatorBattery",
        "type": {
            "names": [
                "Object"
            ]
        },
        "longname": "CalculatorBattery",
        "scope": "global"
    },
    {
        "comment": "/** @typedef {string} */",
        "meta": {
            "range": [
                76,
                89
            ],
            "filename": "typedeftag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004554",
                "name": "calc.Operator",
                "type": "MemberExpression"
            }
        },
        "kind": "typedef",
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "Operator",
        "longname": "calc.Operator",
        "memberof": "calc",
        "scope": "static"
    },
    {
        "comment": "/** @typedef {calc.NumberLike} calc.Result */",
        "meta": {
            "filename": "typedeftag.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "typedef",
        "name": "Result",
        "type": {
            "names": [
                "calc.NumberLike"
            ]
        },
        "memberof": "calc",
        "longname": "calc.Result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                138,
                150
            ],
            "filename": "typedeftag.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004558",
                "name": "calc.Outcome",
                "type": "MemberExpression"
            }
        },
        "undocumented": true,
        "name": "Outcome",
        "longname": "calc.Outcome",
        "kind": "member",
        "memberof": "calc",
        "scope": "static"
    },
    {
        "comment": "/** @param {calc.NumberLike} x A number or a string. */",
        "meta": {
            "range": [
                209,
                242
            ],
            "filename": "typedeftag.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004562",
                "name": "calc.readNumber",
                "type": "FunctionExpression",
                "paramnames": [
                    "x"
                ]
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "calc.NumberLike"
                    ]
                },
                "description": "A number or a string.",
                "name": "x"
            }
        ],
        "name": "readNumber",
        "longname": "calc.readNumber",
        "kind": "function",
        "memberof": "calc",
        "scope": "static"
    },
    {
        "comment": "/** @typedef {(string|number)} */",
        "meta": {
            "range": [
                34,
                49
            ],
            "filename": "typedeftag2.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004572",
                "name": "calc.NumberLike",
                "type": "MemberExpression"
            }
        },
        "kind": "typedef",
        "type": {
            "names": [
                "string",
                "number"
            ]
        },
        "name": "NumberLike",
        "longname": "calc.NumberLike",
        "memberof": "calc",
        "scope": "static"
    },
    {
        "comment": "/**\n    @member {number} module:blog/server.port\n    @default 8080\n*/",
        "meta": {
            "filename": "typekind.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "member",
        "name": "port",
        "type": {
            "names": [
                "number"
            ]
        },
        "defaultvalue": "8080",
        "memberof": "module:blog/server",
        "longname": "module:blog/server.port",
        "scope": "static"
    },
    {
        "comment": "/**\n    @module {ConnectServer} blog/server\n*/",
        "meta": {
            "filename": "typekind.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "module",
        "name": "blog/server",
        "type": {
            "names": [
                "ConnectServer"
            ]
        },
        "description": "blog/server",
        "longname": "module:blog/server"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48,
                235
            ],
            "filename": "typekind.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004578",
                "name": "module.exports",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "module:blog/server",
        "longname": "module:blog/server",
        "kind": "member"
    },
    {
        "comment": "/**\n * @type {string|Array<string>}\n */",
        "meta": {
            "range": [
                44,
                47
            ],
            "filename": "typetag.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004616",
                "name": "foo"
            }
        },
        "type": {
            "names": [
                "string",
                "Array.<string>"
            ]
        },
        "name": "foo",
        "longname": "foo",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @type integer\n */",
        "meta": {
            "range": [
                79,
                108
            ],
            "filename": "typetag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004619",
                "name": "bar",
                "type": "UnaryExpression",
                "value": "+"
            }
        },
        "type": {
            "names": [
                "integer"
            ]
        },
        "name": "bar",
        "longname": "bar",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @type {!Array.<number>}\n */",
        "meta": {
            "range": [
                150,
                165
            ],
            "filename": "typetag.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004628",
                "name": "baz",
                "type": "ArrayExpression",
                "value": "[1,2,3]"
            }
        },
        "type": {
            "names": [
                "Array.<number>"
            ]
        },
        "nullable": false,
        "name": "baz",
        "longname": "baz",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @type {(string|number)} A string or a number.\n */",
        "meta": {
            "range": [
                61,
                75
            ],
            "filename": "typetag2.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004637",
                "name": "stringOrNumber"
            }
        },
        "type": {
            "names": [
                "string",
                "number"
            ]
        },
        "description": "A string or a number.",
        "name": "stringOrNumber",
        "longname": "stringOrNumber",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Inline type info only.\n */",
        "meta": {
            "range": [
                34,
                83
            ],
            "filename": "typetaginline.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004641",
                "name": "dispense",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "candy"
                ]
            },
            "vars": {
                "candy": "dispense.candy"
            }
        },
        "description": "Inline type info only.",
        "name": "dispense",
        "longname": "dispense",
        "kind": "function",
        "scope": "global",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "",
                "name": "candy"
            }
        ]
    },
    {
        "comment": "/** @type {string} */",
        "meta": {
            "range": [
                74,
                79
            ],
            "filename": "typetaginline.js",
            "lineno": 4,
            "columnno": 40,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004643",
                "name": "candy",
                "type": "Identifier"
            }
        },
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "candy",
        "longname": "dispense.candy",
        "kind": "param",
        "memberof": "dispense",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "/**\n * Inline type info that conflicts with `@param` tag.\n *\n * @class\n * @param {number} candyId - The candy's identifier.\n */",
        "meta": {
            "range": [
                213,
                265
            ],
            "filename": "typetaginline.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004645",
                "name": "Dispenser",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "candyId"
                ]
            },
            "vars": {
                "candyId": "Dispenser.candyId"
            }
        },
        "description": "Inline type info that conflicts with `@param` tag.",
        "kind": "class",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The candy's identifier.",
                "name": "candyId"
            }
        ],
        "name": "Dispenser",
        "longname": "Dispenser",
        "scope": "global"
    },
    {
        "comment": "/** @type {string} */",
        "meta": {
            "range": [
                254,
                261
            ],
            "filename": "typetaginline.js",
            "lineno": 12,
            "columnno": 41,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004647",
                "name": "candyId",
                "type": "Identifier"
            }
        },
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "candyId",
        "longname": "Dispenser.candyId",
        "kind": "param",
        "memberof": "Dispenser",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "/**\n * Inline type info for leading param only.\n *\n * @param {string} item\n */",
        "meta": {
            "range": [
                346,
                407
            ],
            "filename": "typetaginline.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004649",
                "name": "restock",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "dispenser",
                    "item"
                ]
            },
            "vars": {
                "dispenser": "restock.dispenser"
            }
        },
        "description": "Inline type info for leading param only.",
        "params": [
            {
                "type": {
                    "names": [
                        "Dispenser"
                    ]
                },
                "description": "",
                "name": "dispenser"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "item"
            }
        ],
        "name": "restock",
        "longname": "restock",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/** @type {Dispenser} */",
        "meta": {
            "range": [
                388,
                397
            ],
            "filename": "typetaginline.js",
            "lineno": 19,
            "columnno": 42,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004651",
                "name": "dispenser",
                "type": "Identifier"
            }
        },
        "type": {
            "names": [
                "Dispenser"
            ]
        },
        "name": "dispenser",
        "longname": "restock.dispenser",
        "kind": "param",
        "memberof": "restock",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "/**\n * Inline type info for trailing param only.\n *\n * @param {Dispenser} dispenser\n */",
        "meta": {
            "range": [
                497,
                556
            ],
            "filename": "typetaginline.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004654",
                "name": "clean",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "dispenser",
                    "cleaner"
                ]
            },
            "vars": {
                "cleaner": "clean.cleaner"
            }
        },
        "description": "Inline type info for trailing param only.",
        "params": [
            {
                "type": {
                    "names": [
                        "Dispenser"
                    ]
                },
                "name": "dispenser"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "",
                "name": "cleaner"
            }
        ],
        "name": "clean",
        "longname": "clean",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/** @type {string} */",
        "meta": {
            "range": [
                545,
                552
            ],
            "filename": "typetaginline.js",
            "lineno": 26,
            "columnno": 48,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004657",
                "name": "cleaner",
                "type": "Identifier"
            }
        },
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "cleaner",
        "longname": "clean.cleaner",
        "kind": "param",
        "memberof": "clean",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "/**\n * Inline type info for inner param only.\n *\n * @param {Dispenser} dispenser\n * @param {number} shade\n * @param {string} brand\n */",
        "meta": {
            "range": [
                693,
                763
            ],
            "filename": "typetaginline.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004659",
                "name": "paint",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "dispenser",
                    "color",
                    "shade",
                    "brand"
                ]
            },
            "vars": {
                "color": "paint.color"
            }
        },
        "description": "Inline type info for inner param only.",
        "params": [
            {
                "type": {
                    "names": [
                        "Dispenser"
                    ]
                },
                "name": "dispenser"
            },
            {
                "type": {
                    "names": [
                        "Color"
                    ]
                },
                "description": "",
                "name": "color"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "shade"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "brand"
            }
        ],
        "name": "paint",
        "longname": "paint",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/** @type {Color} */",
        "meta": {
            "range": [
                740,
                745
            ],
            "filename": "typetaginline.js",
            "lineno": 35,
            "columnno": 47,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004662",
                "name": "color",
                "type": "Identifier"
            }
        },
        "type": {
            "names": [
                "Color"
            ]
        },
        "name": "color",
        "longname": "paint.color",
        "kind": "param",
        "memberof": "paint",
        "scope": "static",
        "undocumented": true
    },
    {
        "comment": "/** @class Matryoshka */",
        "meta": {
            "filename": "typetagwithnewline.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "class",
        "name": "Matryoshka",
        "longname": "Matryoshka",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25,
                49
            ],
            "filename": "typetagwithnewline.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004668",
                "name": "Matryoshka",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Matryoshka",
        "longname": "Matryoshka",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @type {(!Array.<number>|\n *         !Array.<!Array.<number>>)}\n */",
        "meta": {
            "range": [
                125,
                140
            ],
            "filename": "typetagwithnewline.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004672",
                "name": "Matryoshka.mini",
                "type": "MemberExpression"
            }
        },
        "type": {
            "names": [
                "!Array.<number>",
                "!Array.<!Array.<number>>"
            ]
        },
        "name": "mini",
        "longname": "Matryoshka.mini",
        "kind": "member",
        "memberof": "Matryoshka",
        "scope": "static"
    },
    {
        "comment": "/**\n * @type (!Array.<number>|!Array.<!Array.<number>>|\n *        !Array.<!Array.<!Array.<number>>>)\n */",
        "meta": {
            "range": [
                248,
                263
            ],
            "filename": "typetagwithnewline.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004676",
                "name": "Matryoshka.mega",
                "type": "MemberExpression"
            }
        },
        "type": {
            "names": [
                "!Array.<number>",
                "!Array.<!Array.<number>>",
                "!Array.<!Array.<!Array.<number>>>"
            ]
        },
        "name": "mega",
        "longname": "Matryoshka.mega",
        "kind": "member",
        "memberof": "Matryoshka",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                49,
                50
            ],
            "filename": "undocumentedtag.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004682",
                "name": "x"
            }
        },
        "description": "Undocumented doclet.",
        "undocumented": true,
        "name": "x",
        "longname": "x",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * My class.\n *\n * @constructor\n * @unrestricted\n */",
        "meta": {
            "range": [
                57,
                74
            ],
            "filename": "unrestrictedtag.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004686",
                "name": "Foo",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "My class.",
        "kind": "class",
        "name": "Foo",
        "longname": "Foo",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @constructor\n * @desc Τεκμηρίωση είναι η επικοινωνία!\n */",
        "meta": {
            "range": [
                65,
                86
            ],
            "filename": "utf8.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004692",
                "name": "Test",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "kind": "class",
        "description": "Τεκμηρίωση είναι η επικοινωνία!",
        "name": "Test",
        "longname": "Test",
        "scope": "global"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                25,
                34
            ],
            "filename": "var.js",
            "lineno": 2,
            "columnno": 6,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004699",
                "name": "GREEN",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "document me",
        "name": "GREEN",
        "longname": "GREEN",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                42,
                51
            ],
            "filename": "var.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004702",
                "name": "RED",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "RED",
        "longname": "RED",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                77,
                100
            ],
            "filename": "var.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004706",
                "name": "validate",
                "type": "FunctionExpression"
            }
        },
        "description": "document me",
        "name": "validate",
        "longname": "validate",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                107,
                108
            ],
            "filename": "var.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004711",
                "name": "i"
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "i",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                137,
                144
            ],
            "filename": "var.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004713",
                "name": "results"
            }
        },
        "description": "document me",
        "name": "results",
        "longname": "results",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @namespace anim\n */",
        "meta": {
            "filename": "variations.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "namespace",
        "name": "anim",
        "longname": "anim",
        "scope": "global"
    },
    {
        "comment": "/**\n * @method anim.fadein(1)\n * @desc Show the nodelist elements by fading them to opaque.\n * @since 1.0\n *\n * @param {number}   [duration=400] How long the animation will run.\n * @param {function} [callback]     Called once the animation is complete.\n *\n * @returns {this}\n */",
        "meta": {
            "filename": "variations.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "function",
        "name": "fadein",
        "description": "Show the nodelist elements by fading them to opaque.",
        "since": "1.0",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 400,
                "description": "How long the animation will run.",
                "name": "duration"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "Called once the animation is complete.",
                "name": "callback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "this"
                    ]
                }
            }
        ],
        "memberof": "anim",
        "longname": "anim.fadein(1)",
        "scope": "static",
        "variation": "1"
    },
    {
        "comment": "/**\n * @method anim.fadein(2)\n * @desc Show the nodelist elements by fading them to opaque.\n * @since 1.4.3\n *\n * @param {number}   [duration=400] How long the animation will run.\n * @param {string}   [easing=swing] The easing function for the transition.\n * @param {function} [callback]     Called once the animation is complete.\n *\n * @returns {this}\n */",
        "meta": {
            "filename": "variations.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "function",
        "name": "fadein",
        "description": "Show the nodelist elements by fading them to opaque.",
        "since": "1.4.3",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 400,
                "description": "How long the animation will run.",
                "name": "duration"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "swing",
                "description": "The easing function for the transition.",
                "name": "easing"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "Called once the animation is complete.",
                "name": "callback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "this"
                    ]
                }
            }
        ],
        "memberof": "anim",
        "longname": "anim.fadein(2)",
        "scope": "static",
        "variation": "2"
    },
    {
        "comment": "/**\n * @constructor\n */",
        "meta": {
            "range": [
                24,
                50
            ],
            "filename": "variationtag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004720",
                "name": "someObject",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "kind": "class",
        "name": "someObject",
        "longname": "someObject",
        "scope": "global"
    },
    {
        "comment": "/**\n * @constructor\n * @variation 2\n */",
        "meta": {
            "range": [
                92,
                118
            ],
            "filename": "variationtag.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004725",
                "name": "someObject",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "kind": "class",
        "variation": "2",
        "name": "someObject",
        "longname": "someObject(2)",
        "scope": "global"
    },
    {
        "comment": "/**\n * @constructor\n * @variation (3)\n */",
        "meta": {
            "range": [
                162,
                188
            ],
            "filename": "variationtag.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004730",
                "name": "someObject",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "kind": "class",
        "variation": "3",
        "name": "someObject",
        "longname": "someObject(3)",
        "scope": "global"
    },
    {
        "comment": "/**\n * @memberof someObject(2)\n */",
        "meta": {
            "range": [
                226,
                252
            ],
            "filename": "variationtag.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004735",
                "name": "someMethod",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "memberof": "someObject(2)",
        "name": "someMethod",
        "longname": "someObject(2).someMethod",
        "kind": "function",
        "scope": "static"
    },
    {
        "comment": "/**\n    @version 1.2.3\n*/",
        "meta": {
            "range": [
                26,
                46
            ],
            "filename": "versiontag.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004741",
                "name": "foo",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "version": "1.2.3",
        "name": "foo",
        "longname": "foo",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @name dimensions */",
        "meta": {
            "filename": "virtual.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "name": "dimensions",
        "longname": "dimensions",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29,
                39
            ],
            "filename": "virtual.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004748",
                "name": "width",
                "type": "Literal",
                "value": 12
            }
        },
        "undocumented": true,
        "name": "width",
        "longname": "width",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                627
            ],
            "filename": "virtual2.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004754",
                "name": "Person",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Person",
        "longname": "Person",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** @constructs Person */",
        "meta": {
            "range": [
                94,
                154
            ],
            "filename": "virtual2.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004761",
                "name": "initialize",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.name": "Person#name"
            }
        },
        "alias": "Person",
        "kind": "class",
        "name": "Person",
        "longname": "Person",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                131,
                147
            ],
            "filename": "virtual2.js",
            "lineno": 6,
            "columnno": 8,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004766",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "Person#name",
        "kind": "member",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Callback for `say`.\n     *\n     * @callback Person~sayCallback\n     * @param {?string} err - Information about the error, if any.\n     * @param {?string} message - The message.\n     */",
        "meta": {
            "filename": "virtual2.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Callback for `say`.",
        "kind": "typedef",
        "name": "sayCallback",
        "type": {
            "names": [
                "function"
            ]
        },
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "nullable": true,
                "description": "Information about the error, if any.",
                "name": "err"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "nullable": true,
                "description": "The message.",
                "name": "message"
            }
        ],
        "memberof": "Person",
        "longname": "Person~sayCallback",
        "scope": "inner"
    },
    {
        "comment": "/**\n     * Speak a message asynchronously.\n     *\n     * @param {Person~sayCallback} cb\n     */",
        "meta": {
            "range": [
                461,
                624
            ],
            "filename": "virtual2.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004771",
                "name": "say",
                "type": "FunctionExpression"
            }
        },
        "description": "Speak a message asynchronously.",
        "params": [
            {
                "type": {
                    "names": [
                        "Person~sayCallback"
                    ]
                },
                "name": "cb"
            }
        ],
        "name": "say",
        "longname": "Person#say",
        "kind": "function",
        "memberof": "Person",
        "scope": "instance"
    },
    {
        "comment": "/** @module connection\n\n/**\n * @param {string} name - The connection name.\n * @constructor module:connection\n ",
        "meta": {
            "filename": "virtual3.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "class",
        "name": "module:connection",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The connection name.",
                "name": "name"
            }
        ],
        "longname": "module:connection",
        "scope": "global"
    },
    {
        "comment": "\n * @constructor module:connection\n */",
        "meta": {
            "filename": "virtual3.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "kind": "class",
        "name": "module:connection",
        "longname": "module:connection",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                196
            ],
            "filename": "virtual3.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004798",
                "name": "module.exports",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                196
            ],
            "filename": "virtual3.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004798",
                "name": "module.exports",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Generate the Fibonacci sequence of numbers.\n *\n * @yields {number} The next number in the Fibonacci sequence.\n */",
        "meta": {
            "range": [
                136,
                160
            ],
            "filename": "yieldstag.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004808",
                "name": "fibonacci",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Generate the Fibonacci sequence of numbers.",
        "yields": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The next number in the Fibonacci sequence."
            }
        ],
        "name": "fibonacci",
        "longname": "fibonacci",
        "kind": "function",
        "scope": "global",
        "params": [],
        "generator": true
    },
    {
        "comment": "/**\n * Generate the Fibonacci sequence of numbers.\n *\n * @yields The next number in the Fibonacci sequence.\n */",
        "meta": {
            "range": [
                274,
                299
            ],
            "filename": "yieldstag.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004811",
                "name": "fibonacci2",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Generate the Fibonacci sequence of numbers.",
        "yields": [
            {
                "description": "The next number in the Fibonacci sequence."
            }
        ],
        "name": "fibonacci2",
        "longname": "fibonacci2",
        "kind": "function",
        "scope": "global",
        "params": [],
        "generator": true
    },
    {
        "comment": "/**\n * Generate the Fibonacci sequence of numbers.\n *\n * @yields {number}\n */",
        "meta": {
            "range": [
                379,
                404
            ],
            "filename": "yieldstag.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004814",
                "name": "fibonacci3",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Generate the Fibonacci sequence of numbers.",
        "yields": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                }
            }
        ],
        "name": "fibonacci3",
        "longname": "fibonacci3",
        "kind": "function",
        "scope": "global",
        "params": [],
        "generator": true
    },
    {
        "kind": "package",
        "longname": "package:undefined",
        "files": [
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/abstracttag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/accesstag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/alias.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/alias2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/alias3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/alias4.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/alias5.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/alias6.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/aliasexports.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/aliasglobal.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/aliasglobal2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/aliasresolve.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/aliasresolve2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/also.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/also2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/anonymousclass.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/anonymousclassparam.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/arrowfunction.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/asyncfunction.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/asynctag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/augmentall.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/augmentall2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/augmentstag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/augmentstag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/augmentstag3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/augmentstag4.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/augmentstag5.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/augmentstag6.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/authortag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/borrowstag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/borrowstag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/borrowstag3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/callbacktag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/classdesctag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/classproperties.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/classtag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/classtag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/classwithoutname.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/constanttag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/constanttag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/constructortag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/constructstag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/constructstag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/constructstag3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/constructstag4.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/constructstag5.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/copyrighttag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/defaultparams.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/defaultparams2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/defaulttag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/definetag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/deprecatedtag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/descriptiontag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/destructuring.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/dicttag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/doclet.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/emptycomments.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/enumtag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/enumtag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/enumtag3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/es6.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/eventfirestag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/eventorder.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exampletag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exceptiontag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exportclass.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exportdefault.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exportdefaultclass.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exports.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exportstag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exportstag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exportstag3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exportstag4.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exportstag5.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exportstag6.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exportstag7.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exportstag8.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/exporttag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/externaltag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/externaltag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/externaltag3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/externstag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/file.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/fileoverviewtag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/funcExpression.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/funcExpression2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/funcExpression3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/functiontag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/generators.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/generatortag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/getset.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/getset2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/globaltag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/hideconstructortag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/ignoretag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/ignoretag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/implicitcasttag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/inheritdoctag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/inlinecomment.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/inlineparamcomment.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/inlineparamcomment2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/inner.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/innerscope.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/innerscope2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/instanceproperty.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/interface-implements.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/interfacetag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/interfacetag3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/jsx.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/kindtag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/lends.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/lends2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/lends3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/lends4.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/lends5.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/lends6.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/lendsglobal.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/letkeyword.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/licensetag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/linktag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/listenstag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/memberoftag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/memberoftag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/memberoftag3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/memberoftag4.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/memberoftag5.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/memberoftagforced.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/membertag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/methoddefinition.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/mixintag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/mixintag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/modifiestag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduleclasses.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduleinner.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduleisconstructor.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduleisconstructor2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduleisfunction.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduletag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduletag10.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduletag11.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduletag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduletag3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduletag4.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduletag5.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduletag6.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduletag7.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduletag8.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/moduletag9.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/namespacetag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/nametag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/noaliastag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/nocollapsetag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/nocompiletag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/nosideeffectstag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/numericpropertytag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/objectkeys.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/objectlit.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/objectlit2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/objectlit3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/objectpropertykeys.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/overridetag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/overridetag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/packagetag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/packagetag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/paramtag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/paramtag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/paramtaginvalidtype.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/plugins.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/polymerbehaviortag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/polymertag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/preservetag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/privatetag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/privatetag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/projecttag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/propertytag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/protectedtag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/protectedtag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/publictag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/publictag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/quotename.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/quotename2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/readonlytag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/requirestag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/restparams.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/restparams2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/returnstag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/scopetags.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/seetag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/sincetag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/specialchars.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/specialnames.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/starbangstar.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/structtag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/summarytag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/suppresstag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/templatetag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/testPlugin1.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/testPlugin2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/this-and-objectlit.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/this.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/this2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/this3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/this4.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/this5.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/this6.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/thistag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/thistag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/todotag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/trailingcomment.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/trailingcomment2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/typedeftag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/typedeftag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/typekind.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/typetag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/typetag2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/typetaginline.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/typetagwithnewline.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/undocumentedtag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/unrestrictedtag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/utf8.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/var.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/variations.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/variationtag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/versiontag.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/virtual.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/virtual2.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/virtual3.js",
            "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures/yieldstag.js"
        ]
    },
    {
        "comment": "/** fires something. */",
        "meta": {
            "range": [
                200,
                221
            ],
            "filename": "mixintag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003067",
                "name": "fires",
                "type": "FunctionExpression"
            }
        },
        "description": "fires something.",
        "name": "fires",
        "longname": "MyClass#fires",
        "kind": "function",
        "memberof": "MyClass",
        "scope": "instance",
        "mixes": [
            "Eventful.fires"
        ],
        "mixed": true
    },
    {
        "comment": "/** handles a signal. */",
        "meta": {
            "range": [
                256,
                274
            ],
            "filename": "mixintag.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003070",
                "name": "on",
                "type": "FunctionExpression"
            }
        },
        "description": "handles a signal.",
        "name": "on",
        "longname": "MyClass#on",
        "kind": "function",
        "memberof": "MyClass",
        "scope": "instance",
        "mixes": [
            "Eventful.on"
        ],
        "mixed": true
    },
    {
        "comment": "/** fires something. */",
        "meta": {
            "range": [
                200,
                221
            ],
            "filename": "mixintag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003067",
                "name": "fires",
                "type": "FunctionExpression"
            }
        },
        "description": "fires something.",
        "name": "fires",
        "longname": "FormButton#fires",
        "kind": "function",
        "memberof": "FormButton",
        "scope": "instance",
        "mixes": [
            "Eventful.fires"
        ],
        "mixed": true
    },
    {
        "comment": "/** handles a signal. */",
        "meta": {
            "range": [
                256,
                274
            ],
            "filename": "mixintag.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003070",
                "name": "on",
                "type": "FunctionExpression"
            }
        },
        "description": "handles a signal.",
        "name": "on",
        "longname": "FormButton#on",
        "kind": "function",
        "memberof": "FormButton",
        "scope": "instance",
        "mixes": [
            "Eventful.on"
        ],
        "mixed": true
    },
    {
        "comment": "/** Some method. */",
        "meta": {
            "range": [
                114,
                135
            ],
            "filename": "mixintag2.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003088",
                "name": "method",
                "type": "FunctionExpression"
            }
        },
        "description": "Some method.",
        "name": "method",
        "longname": "module:mixy.ObjectB.method",
        "kind": "function",
        "memberof": "module:mixy.ObjectB",
        "scope": "static",
        "mixes": [
            "module:mixy.ObjectA.method"
        ],
        "mixed": true
    },
    {
        "comment": "/** Some method. */",
        "meta": {
            "range": [
                114,
                135
            ],
            "filename": "mixintag2.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003088",
                "name": "method",
                "type": "FunctionExpression"
            }
        },
        "description": "Some method.",
        "name": "method",
        "longname": "module:mixy.ObjectC.method",
        "kind": "function",
        "memberof": "module:mixy.ObjectC",
        "scope": "static",
        "mixes": [
            "module:mixy.ObjectB.method"
        ],
        "mixed": true
    },
    {
        "comment": "/** Some method. */",
        "meta": {
            "range": [
                114,
                135
            ],
            "filename": "mixintag2.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003088",
                "name": "method",
                "type": "FunctionExpression"
            }
        },
        "description": "Some method.",
        "name": "method",
        "longname": "module:mixy.ClassA#method",
        "kind": "function",
        "memberof": "module:mixy.ClassA",
        "scope": "instance",
        "mixes": [
            "module:mixy.ObjectA.method"
        ],
        "mixed": true
    },
    {
        "comment": "/**\n     * Super-sweet method that's named in the comment, making this a virtual comment.\n     * @function module:mixy.ObjectC.superSweet\n     */",
        "meta": {
            "filename": "mixintag2.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "description": "Super-sweet method that's named in the comment, making this a virtual comment.",
        "kind": "function",
        "name": "superSweet",
        "memberof": "module:mixy.ClassB",
        "longname": "module:mixy.ClassB#superSweet",
        "scope": "instance",
        "mixes": [
            "module:mixy.ObjectC.superSweet"
        ],
        "mixed": true
    },
    {
        "comment": "/** Some method. */",
        "meta": {
            "range": [
                114,
                135
            ],
            "filename": "mixintag2.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003088",
                "name": "method",
                "type": "FunctionExpression"
            }
        },
        "description": "Some method.",
        "name": "method",
        "longname": "module:mixy.ClassB#method",
        "kind": "function",
        "memberof": "module:mixy.ClassB",
        "scope": "instance",
        "mixes": [
            "module:mixy.ObjectC.method"
        ],
        "mixed": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                572,
                609
            ],
            "filename": "overridetag2.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003667",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "open",
        "longname": "Socket#open",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Open the connection.",
        "implements": [
            "Connection#open"
        ],
        "ignore": true
    },
    {
        "comment": "/**\n * Close the socket.\n * @param {string} message - A message explaining why the socket is being closed.\n * @override\n */",
        "meta": {
            "range": [
                736,
                774
            ],
            "filename": "overridetag2.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003676",
                "name": "Socket.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "close",
        "longname": "Socket#close",
        "kind": "function",
        "description": "Close the socket.",
        "memberof": "Socket",
        "scope": "instance",
        "implements": [
            "Connection#close"
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A message explaining why the socket is being closed.",
                "name": "message"
            }
        ],
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                794,
                836
            ],
            "filename": "overridetag2.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003685",
                "name": "Socket.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "name": "read",
        "longname": "Socket#read",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Read the specified number of bytes from the connection.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "The bytes that were read."
            }
        ],
        "implements": [
            "Connection#read"
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of bytes to read.",
                "name": "bytes"
            }
        ],
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                572,
                609
            ],
            "filename": "overridetag2.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003667",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "open",
        "longname": "Socket#open",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Open the connection.",
        "implements": [
            "Connection#open"
        ],
        "ignore": true
    },
    {
        "comment": "/**\n * Close the socket.\n * @param {string} message - A message explaining why the socket is being closed.\n * @override\n */",
        "meta": {
            "range": [
                736,
                774
            ],
            "filename": "overridetag2.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003676",
                "name": "Socket.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "close",
        "longname": "Socket#close",
        "kind": "function",
        "description": "Close the socket.",
        "memberof": "Socket",
        "scope": "instance",
        "implements": [
            "Connection#close"
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A message explaining why the socket is being closed.",
                "name": "message"
            }
        ],
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                794,
                836
            ],
            "filename": "overridetag2.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003685",
                "name": "Socket.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "name": "read",
        "longname": "Socket#read",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Read the specified number of bytes from the connection.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "The bytes that were read."
            }
        ],
        "implements": [
            "Connection#read"
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of bytes to read.",
                "name": "bytes"
            }
        ],
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                573,
                610
            ],
            "filename": "overridetag.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003603",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "open",
        "longname": "EncryptedSocket#open",
        "kind": "function",
        "memberof": "EncryptedSocket",
        "scope": "instance",
        "ignore": true,
        "implements": [
            "Socket#open"
        ],
        "description": "Open the connection."
    },
    {
        "comment": "/**\n * it method.\n */",
        "meta": {
            "range": [
                287,
                323
            ],
            "filename": "interface-implements.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002505",
                "name": "ITester.prototype.it",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "it",
        "longname": "MyTester#it",
        "kind": "function",
        "description": "it method.",
        "memberof": "MyTester",
        "scope": "instance",
        "implements": [
            "ITester#it"
        ]
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                572,
                609
            ],
            "filename": "overridetag2.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003667",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "open",
        "longname": "Socket#open",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Open the connection.",
        "implements": [
            "Connection#open"
        ],
        "inherits": "Socket#open",
        "inherited": true,
        "overrides": "Connection#open",
        "ignore": true
    },
    {
        "comment": "/**\n * Close the socket.\n * @param {string} message - A message explaining why the socket is being closed.\n * @override\n */",
        "meta": {
            "range": [
                736,
                774
            ],
            "filename": "overridetag2.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003676",
                "name": "Socket.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "close",
        "longname": "Socket#close",
        "kind": "function",
        "description": "Close the socket.",
        "memberof": "Socket",
        "scope": "instance",
        "implements": [
            "Connection#close"
        ],
        "inherits": "Socket#close",
        "inherited": true,
        "overrides": "Connection#close",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A message explaining why the socket is being closed.",
                "name": "message"
            }
        ],
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                794,
                836
            ],
            "filename": "overridetag2.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003685",
                "name": "Socket.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "name": "read",
        "longname": "Socket#read",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Read the specified number of bytes from the connection.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "The bytes that were read."
            }
        ],
        "implements": [
            "Connection#read"
        ],
        "inherits": "Socket#read",
        "inherited": true,
        "overrides": "Connection#read",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of bytes to read.",
                "name": "bytes"
            }
        ],
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                572,
                609
            ],
            "filename": "overridetag2.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003667",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "open",
        "longname": "Socket#open",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Open the connection.",
        "implements": [
            "Connection#open"
        ],
        "inherits": "Socket#open",
        "inherited": true,
        "overrides": "Connection#open",
        "ignore": true
    },
    {
        "comment": "/**\n * Close the socket.\n * @param {string} message - A message explaining why the socket is being closed.\n * @override\n */",
        "meta": {
            "range": [
                736,
                774
            ],
            "filename": "overridetag2.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003676",
                "name": "Socket.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "close",
        "longname": "Socket#close",
        "kind": "function",
        "description": "Close the socket.",
        "memberof": "Socket",
        "scope": "instance",
        "implements": [
            "Connection#close"
        ],
        "inherits": "Socket#close",
        "inherited": true,
        "overrides": "Connection#close",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A message explaining why the socket is being closed.",
                "name": "message"
            }
        ],
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                794,
                836
            ],
            "filename": "overridetag2.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003685",
                "name": "Socket.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "name": "read",
        "longname": "Socket#read",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Read the specified number of bytes from the connection.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "The bytes that were read."
            }
        ],
        "implements": [
            "Connection#read"
        ],
        "inherits": "Socket#read",
        "inherited": true,
        "overrides": "Connection#read",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of bytes to read.",
                "name": "bytes"
            }
        ],
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                572,
                609
            ],
            "filename": "overridetag2.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003667",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "open",
        "longname": "Socket#open",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Open the connection.",
        "implements": [
            "Connection#open"
        ],
        "inherits": "Socket#open",
        "inherited": true,
        "overrides": "Connection#open",
        "ignore": true
    },
    {
        "comment": "/**\n * Close the socket.\n * @param {string} message - A message explaining why the socket is being closed.\n * @override\n */",
        "meta": {
            "range": [
                736,
                774
            ],
            "filename": "overridetag2.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003676",
                "name": "Socket.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "close",
        "longname": "Socket#close",
        "kind": "function",
        "description": "Close the socket.",
        "memberof": "Socket",
        "scope": "instance",
        "implements": [
            "Connection#close"
        ],
        "inherits": "Socket#close",
        "inherited": true,
        "overrides": "Connection#close",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A message explaining why the socket is being closed.",
                "name": "message"
            }
        ],
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                794,
                836
            ],
            "filename": "overridetag2.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003685",
                "name": "Socket.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "name": "read",
        "longname": "Socket#read",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Read the specified number of bytes from the connection.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "The bytes that were read."
            }
        ],
        "implements": [
            "Connection#read"
        ],
        "inherits": "Socket#read",
        "inherited": true,
        "overrides": "Connection#read",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of bytes to read.",
                "name": "bytes"
            }
        ],
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                573,
                610
            ],
            "filename": "overridetag.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003603",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "open",
        "longname": "EncryptedSocket#open",
        "kind": "function",
        "memberof": "EncryptedSocket",
        "scope": "instance",
        "ignore": true,
        "inherits": "Socket#open",
        "inherited": true,
        "overrides": "Socket#open",
        "description": "Open the connection.",
        "implements": [
            "Connection#open"
        ]
    },
    {
        "comment": "/**\n * Send a packet.\n * @param {Packet} packet - The packet to send.\n * @return {boolean} `true` on success, `false` on failure.\n */",
        "meta": {
            "range": [
                246,
                301
            ],
            "filename": "eventorder.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001601",
                "name": "Socket.prototype.send",
                "type": "FunctionExpression",
                "paramnames": [
                    "packet"
                ]
            }
        },
        "name": "send",
        "longname": "EncryptedSocket#send",
        "kind": "function",
        "description": "Send a packet.",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "`true` on success, `false` on failure."
            }
        ],
        "memberof": "EncryptedSocket",
        "scope": "instance",
        "params": [
            {
                "type": {
                    "names": [
                        "Packet"
                    ]
                },
                "description": "The packet to send.",
                "name": "packet"
            }
        ],
        "inherits": "Socket#send",
        "inherited": true,
        "implements": [
            "Socket#send"
        ]
    },
    {
        "comment": "/**\n * Close the socket.\n */",
        "meta": {
            "range": [
                397,
                447
            ],
            "filename": "eventorder.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001611",
                "name": "Socket.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "close",
        "longname": "EncryptedSocket#close",
        "kind": "function",
        "description": "Close the socket.",
        "memberof": "EncryptedSocket",
        "scope": "instance",
        "ignore": true,
        "inherits": "Socket#close",
        "inherited": true,
        "overrides": "Socket#close",
        "implements": [
            "Socket#close"
        ]
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                795,
                837
            ],
            "filename": "overridetag.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003621",
                "name": "Socket.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "name": "read",
        "longname": "EncryptedSocket#read",
        "kind": "function",
        "memberof": "EncryptedSocket",
        "scope": "instance",
        "ignore": true,
        "inherits": "Socket#read",
        "inherited": true,
        "description": "Read the specified number of bytes from the connection.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "The bytes that were read."
            }
        ],
        "implements": [
            "Connection#read"
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of bytes to read.",
                "name": "bytes"
            }
        ]
    },
    {
        "comment": "/** Port number. */",
        "meta": {
            "range": [
                81,
                104
            ],
            "filename": "specialchars.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004066",
                "name": "this['port#number']",
                "type": "Literal",
                "value": 0,
                "paramnames": []
            }
        },
        "name": "'port#number'",
        "longname": "EncryptedSocketSocket'port#number'",
        "kind": "member",
        "description": "Port number.",
        "memberof": "EncryptedSocket",
        "scope": "instance",
        "inherits": "Socket#'port#number'",
        "inherited": true
    },
    {
        "comment": "/** Open a connection. */",
        "meta": {
            "range": [
                135,
                192
            ],
            "filename": "specialchars.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004072",
                "name": "Socket.prototype['open~a.connection#now']",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "'open~a.connection#now'",
        "longname": "EncryptedSocketSocket'open~a.connection#now'",
        "kind": "function",
        "description": "Open a connection.",
        "memberof": "EncryptedSocket",
        "scope": "instance",
        "inherits": "Socket#'open~a.connection#now'",
        "inherited": true
    },
    {
        "comment": "/** First property */",
        "meta": {
            "range": [
                71,
                88
            ],
            "filename": "augmentstag.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000675",
                "name": "this.prop1",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "name": "prop1",
        "longname": "Bar#prop1",
        "kind": "member",
        "description": "First property",
        "memberof": "Bar",
        "scope": "instance",
        "inherits": "Foo#prop1",
        "inherited": true
    },
    {
        "comment": "/**\n * Second property\n * @type {String}\n */",
        "meta": {
            "range": [
                138,
                174
            ],
            "filename": "augmentstag.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000681",
                "name": "Foo.prototype.prop2",
                "type": "Literal",
                "value": "parent prop2",
                "paramnames": []
            }
        },
        "name": "prop2",
        "longname": "Bar#prop2",
        "kind": "member",
        "description": "Second property",
        "type": {
            "names": [
                "String"
            ]
        },
        "memberof": "Bar",
        "scope": "instance",
        "inherits": "Foo#prop2",
        "inherited": true
    },
    {
        "comment": "/**\n * First parent method.\n */",
        "meta": {
            "range": [
                209,
                246
            ],
            "filename": "augmentstag.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000689",
                "name": "Foo.prototype.method1",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "method1",
        "longname": "Bar#method1",
        "kind": "function",
        "description": "First parent method.",
        "memberof": "Bar",
        "scope": "instance",
        "inherits": "Foo#method1",
        "inherited": true,
        "overrides": "Foo#method1"
    },
    {
        "comment": "/**\n * Third parent method.\n */",
        "meta": {
            "range": [
                354,
                391
            ],
            "filename": "augmentstag.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000707",
                "name": "Foo.prototype.method3",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "method3",
        "longname": "Bar#method3",
        "kind": "function",
        "description": "Third parent method.",
        "memberof": "Bar",
        "scope": "instance",
        "inherits": "Foo#method3",
        "inherited": true
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                110,
                126
            ],
            "filename": "funcExpression.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001940",
                "name": "this.member1",
                "type": "Literal",
                "value": 2,
                "paramnames": []
            }
        },
        "name": "member1",
        "longname": "Bar#member1",
        "kind": "member",
        "description": "document me",
        "memberof": "Bar",
        "scope": "instance",
        "inherits": "Foo#member1",
        "inherited": true,
        "overrides": "Foo#member1"
    },
    {
        "comment": "/**\n * @type {string}\n * @implicitCast\n */",
        "meta": {
            "range": [
                62,
                79
            ],
            "filename": "implicitcasttag.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002260",
                "name": "Foo.prototype.bar",
                "type": "MemberExpression"
            }
        },
        "name": "bar",
        "longname": "Bar#bar",
        "kind": "member",
        "type": {
            "names": [
                "string"
            ]
        },
        "memberof": "Bar",
        "scope": "instance",
        "inherits": "Foo#bar",
        "inherited": true,
        "overrides": "Foo#bar"
    },
    {
        "comment": "/** Set the bar. */",
        "meta": {
            "range": [
                53,
                133
            ],
            "filename": "instanceproperty.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002455",
                "name": "Foo.prototype.setBar",
                "type": "FunctionExpression",
                "paramnames": [
                    "bar"
                ]
            },
            "vars": {
                "this.bar": "Foo#bar"
            }
        },
        "name": "setBar",
        "longname": "Bar#setBar",
        "kind": "function",
        "description": "Set the bar.",
        "memberof": "Bar",
        "scope": "instance",
        "inherits": "Foo#setBar",
        "inherited": true
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                144,
                160
            ],
            "filename": "thistag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004496",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "name": "name",
        "longname": "Bar#name",
        "kind": "member",
        "description": "document me",
        "memberof": "Bar",
        "scope": "instance",
        "inherits": "Foo#name",
        "inherited": true
    },
    {
        "comment": "/** Third prop **/",
        "meta": {
            "range": [
                478,
                495
            ],
            "filename": "augmentstag.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000719",
                "name": "this.prop3",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "name": "prop3",
        "longname": "Baz#prop3",
        "kind": "member",
        "description": "Third prop",
        "memberof": "Baz",
        "scope": "instance",
        "inherits": "Bar#prop3",
        "inherited": true
    },
    {
        "comment": "/**\n * Second child method.\n */",
        "meta": {
            "range": [
                532,
                569
            ],
            "filename": "augmentstag.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000725",
                "name": "Bar.prototype.method2",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "method2",
        "longname": "Baz#method2",
        "kind": "function",
        "description": "Second child method.",
        "memberof": "Baz",
        "scope": "instance",
        "inherits": "Bar#method2",
        "inherited": true,
        "overrides": "Bar#method2"
    },
    {
        "comment": "/**\n * Second property\n * @type {String}\n */",
        "meta": {
            "range": [
                138,
                174
            ],
            "filename": "augmentstag.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000681",
                "name": "Foo.prototype.prop2",
                "type": "Literal",
                "value": "parent prop2",
                "paramnames": []
            }
        },
        "name": "prop2",
        "longname": "Baz#prop2",
        "kind": "member",
        "description": "Second property",
        "type": {
            "names": [
                "String"
            ]
        },
        "memberof": "Baz",
        "scope": "instance",
        "inherits": "Foo#prop2",
        "inherited": true
    },
    {
        "comment": "/**\n * First parent method.\n */",
        "meta": {
            "range": [
                209,
                246
            ],
            "filename": "augmentstag.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000689",
                "name": "Foo.prototype.method1",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "method1",
        "longname": "Baz#method1",
        "kind": "function",
        "description": "First parent method.",
        "memberof": "Baz",
        "scope": "instance",
        "inherits": "Foo#method1",
        "inherited": true
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                110,
                126
            ],
            "filename": "funcExpression.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001940",
                "name": "this.member1",
                "type": "Literal",
                "value": 2,
                "paramnames": []
            }
        },
        "name": "member1",
        "longname": "Baz#member1",
        "kind": "member",
        "description": "document me",
        "memberof": "Baz",
        "scope": "instance",
        "inherits": "Foo#member1",
        "inherited": true
    },
    {
        "comment": "/**\n * @type {string}\n * @implicitCast\n */",
        "meta": {
            "range": [
                62,
                79
            ],
            "filename": "implicitcasttag.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002260",
                "name": "Foo.prototype.bar",
                "type": "MemberExpression"
            }
        },
        "name": "bar",
        "longname": "Baz#bar",
        "kind": "member",
        "type": {
            "names": [
                "string"
            ]
        },
        "memberof": "Baz",
        "scope": "instance",
        "inherits": "Foo#bar",
        "inherited": true
    },
    {
        "comment": "/** Set the bar. */",
        "meta": {
            "range": [
                53,
                133
            ],
            "filename": "instanceproperty.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002455",
                "name": "Foo.prototype.setBar",
                "type": "FunctionExpression",
                "paramnames": [
                    "bar"
                ]
            },
            "vars": {
                "this.bar": "Foo#bar"
            }
        },
        "name": "setBar",
        "longname": "Baz#setBar",
        "kind": "function",
        "description": "Set the bar.",
        "memberof": "Baz",
        "scope": "instance",
        "inherits": "Foo#setBar",
        "inherited": true
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                144,
                160
            ],
            "filename": "thistag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004496",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "name": "name",
        "longname": "Baz#name",
        "kind": "member",
        "description": "document me",
        "memberof": "Baz",
        "scope": "instance",
        "inherits": "Foo#name",
        "inherited": true
    },
    {
        "comment": "/** First property */",
        "meta": {
            "range": [
                71,
                88
            ],
            "filename": "augmentstag.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000675",
                "name": "this.prop1",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "name": "prop1",
        "longname": "FooBar#prop1",
        "kind": "member",
        "description": "First property",
        "memberof": "FooBar",
        "scope": "instance",
        "inherits": "Foo#prop1",
        "inherited": true,
        "overrides": "Bar#prop1"
    },
    {
        "comment": "/**\n * Second property\n * @type {String}\n */",
        "meta": {
            "range": [
                138,
                174
            ],
            "filename": "augmentstag.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000681",
                "name": "Foo.prototype.prop2",
                "type": "Literal",
                "value": "parent prop2",
                "paramnames": []
            }
        },
        "name": "prop2",
        "longname": "FooBar#prop2",
        "kind": "member",
        "description": "Second property",
        "type": {
            "names": [
                "String"
            ]
        },
        "memberof": "FooBar",
        "scope": "instance",
        "inherits": "Foo#prop2",
        "inherited": true,
        "overrides": "Bar#prop2"
    },
    {
        "comment": "/**\n * First parent method.\n */",
        "meta": {
            "range": [
                209,
                246
            ],
            "filename": "augmentstag.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000689",
                "name": "Foo.prototype.method1",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "method1",
        "longname": "FooBar#method1",
        "kind": "function",
        "description": "First parent method.",
        "memberof": "FooBar",
        "scope": "instance",
        "inherits": "Foo#method1",
        "inherited": true,
        "overrides": "Bar#method1"
    },
    {
        "comment": "/**\n * Second parent method.\n */",
        "meta": {
            "range": [
                282,
                319
            ],
            "filename": "augmentstag.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000698",
                "name": "Foo.prototype.method2",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "method2",
        "longname": "FooBar#method2",
        "kind": "function",
        "description": "Second parent method.",
        "memberof": "FooBar",
        "scope": "instance",
        "inherits": "Foo#method2",
        "inherited": true,
        "overrides": "Bar#method2"
    },
    {
        "comment": "/**\n * Third parent method.\n */",
        "meta": {
            "range": [
                354,
                391
            ],
            "filename": "augmentstag.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000707",
                "name": "Foo.prototype.method3",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "method3",
        "longname": "FooBar#method3",
        "kind": "function",
        "description": "Third parent method.",
        "memberof": "FooBar",
        "scope": "instance",
        "inherits": "Foo#method3",
        "inherited": true,
        "overrides": "Bar#method3"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                110,
                126
            ],
            "filename": "funcExpression.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100001940",
                "name": "this.member1",
                "type": "Literal",
                "value": 2,
                "paramnames": []
            }
        },
        "name": "member1",
        "longname": "FooBar#member1",
        "kind": "member",
        "description": "document me",
        "memberof": "FooBar",
        "scope": "instance",
        "inherits": "Foo#member1",
        "inherited": true,
        "overrides": "Bar#member1"
    },
    {
        "comment": "/**\n * @type {string}\n * @implicitCast\n */",
        "meta": {
            "range": [
                62,
                79
            ],
            "filename": "implicitcasttag.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002260",
                "name": "Foo.prototype.bar",
                "type": "MemberExpression"
            }
        },
        "name": "bar",
        "longname": "FooBar#bar",
        "kind": "member",
        "type": {
            "names": [
                "string"
            ]
        },
        "memberof": "FooBar",
        "scope": "instance",
        "inherits": "Foo#bar",
        "inherited": true,
        "overrides": "Bar#bar"
    },
    {
        "comment": "/** Set the bar. */",
        "meta": {
            "range": [
                53,
                133
            ],
            "filename": "instanceproperty.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100002455",
                "name": "Foo.prototype.setBar",
                "type": "FunctionExpression",
                "paramnames": [
                    "bar"
                ]
            },
            "vars": {
                "this.bar": "Foo#bar"
            }
        },
        "name": "setBar",
        "longname": "FooBar#setBar",
        "kind": "function",
        "description": "Set the bar.",
        "memberof": "FooBar",
        "scope": "instance",
        "inherits": "Foo#setBar",
        "inherited": true,
        "overrides": "Bar#setBar"
    },
    {
        "comment": "/** document me */",
        "meta": {
            "range": [
                144,
                160
            ],
            "filename": "thistag.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100004496",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "name": "name",
        "longname": "FooBar#name",
        "kind": "member",
        "description": "document me",
        "memberof": "FooBar",
        "scope": "instance",
        "inherits": "Foo#name",
        "inherited": true,
        "overrides": "Bar#name"
    },
    {
        "comment": "/** Third prop **/",
        "meta": {
            "range": [
                478,
                495
            ],
            "filename": "augmentstag.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000719",
                "name": "this.prop3",
                "type": "Literal",
                "value": true,
                "paramnames": []
            }
        },
        "name": "prop3",
        "longname": "FooBar#prop3",
        "kind": "member",
        "description": "Third prop",
        "memberof": "FooBar",
        "scope": "instance",
        "inherits": "Bar#prop3",
        "inherited": true
    },
    {
        "comment": "/** member */",
        "meta": {
            "range": [
                143,
                162
            ],
            "filename": "augmentstag4.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000793",
                "name": "this.test1",
                "type": "Literal",
                "value": "base",
                "paramnames": []
            }
        },
        "name": "test1",
        "longname": "Derived#test1",
        "kind": "member",
        "description": "member",
        "memberof": "Derived",
        "scope": "instance",
        "inherits": "Base#test1",
        "inherited": true,
        "overrides": "Base#test1"
    },
    {
        "comment": "/** another member */",
        "meta": {
            "range": [
                194,
                211
            ],
            "filename": "augmentstag4.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000799",
                "name": "this.test2",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "name": "test2",
        "longname": "Derived#test2",
        "kind": "member",
        "description": "another member",
        "memberof": "Derived",
        "scope": "instance",
        "inherits": "Base#test2",
        "inherited": true
    },
    {
        "comment": "/**\n     * explicitly named member\n     * @function Base#test3\n     */",
        "meta": {
            "filename": "augmentstag4.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {}
        },
        "name": "test3",
        "longname": "Derived#test3",
        "kind": "function",
        "description": "explicitly named member",
        "memberof": "Derived",
        "scope": "instance",
        "inherits": "Base#test3",
        "inherited": true
    },
    {
        "comment": "/** Description for {@link Base0#methodOfBaseCommon}. */",
        "meta": {
            "range": [
                156,
                189
            ],
            "filename": "augmentstag5.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000835",
                "name": "methodOfBaseCommon",
                "type": "FunctionExpression"
            }
        },
        "name": "methodOfBaseCommon",
        "longname": "Class#methodOfBaseCommon",
        "kind": "function",
        "description": "Description for {@link Base0#methodOfBaseCommon}.",
        "memberof": "Class",
        "scope": "instance",
        "inherits": "Base0#methodOfBaseCommon",
        "inherited": true,
        "overrides": "Base1#methodOfBaseCommon"
    },
    {
        "comment": "/** Description for {@link Base0#methodOfBase0}. */",
        "meta": {
            "range": [
                252,
                280
            ],
            "filename": "augmentstag5.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000838",
                "name": "methodOfBase0",
                "type": "FunctionExpression"
            }
        },
        "name": "methodOfBase0",
        "longname": "Class#methodOfBase0",
        "kind": "function",
        "description": "Description for {@link Base0#methodOfBase0}.",
        "memberof": "Class",
        "scope": "instance",
        "inherits": "Base0#methodOfBase0",
        "inherited": true
    },
    {
        "comment": "/** Description for {@link Base1#methodOfBase1}. */",
        "meta": {
            "range": [
                522,
                550
            ],
            "filename": "augmentstag5.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000853",
                "name": "methodOfBase1",
                "type": "FunctionExpression"
            }
        },
        "name": "methodOfBase1",
        "longname": "Class#methodOfBase1",
        "kind": "function",
        "description": "Description for {@link Base1#methodOfBase1}.",
        "memberof": "Class",
        "scope": "instance",
        "inherits": "Base1#methodOfBase1",
        "inherited": true
    },
    {
        "comment": "/** Open the connection. */",
        "meta": {
            "range": [
                88,
                130
            ],
            "filename": "augmentstag6.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000910",
                "name": "IConnection.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "open",
        "longname": "IClosableConnection#open",
        "kind": "function",
        "description": "Open the connection.",
        "memberof": "IClosableConnection",
        "scope": "instance",
        "inherits": "IConnection#open",
        "inherited": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                572,
                609
            ],
            "filename": "overridetag2.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003667",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "open",
        "longname": "Socket#open",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Open the connection.",
        "implements": [
            "Connection#open"
        ],
        "inherits": "Socket#open",
        "inherited": true,
        "overrides": "Connection#open",
        "ignore": true
    },
    {
        "comment": "/**\n * Close the socket.\n * @param {string} message - A message explaining why the socket is being closed.\n * @override\n */",
        "meta": {
            "range": [
                736,
                774
            ],
            "filename": "overridetag2.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003676",
                "name": "Socket.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "close",
        "longname": "Socket#close",
        "kind": "function",
        "description": "Close the socket.",
        "memberof": "Socket",
        "scope": "instance",
        "implements": [
            "Connection#close"
        ],
        "inherits": "Socket#close",
        "inherited": true,
        "overrides": "Connection#close",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A message explaining why the socket is being closed.",
                "name": "message"
            }
        ],
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                794,
                836
            ],
            "filename": "overridetag2.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003685",
                "name": "Socket.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "name": "read",
        "longname": "Socket#read",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Read the specified number of bytes from the connection.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "The bytes that were read."
            }
        ],
        "implements": [
            "Connection#read"
        ],
        "inherits": "Socket#read",
        "inherited": true,
        "overrides": "Connection#read",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of bytes to read.",
                "name": "bytes"
            }
        ],
        "ignore": true
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                572,
                609
            ],
            "filename": "overridetag2.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003667",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "open",
        "longname": "Socket#open",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Open the connection.",
        "implements": [
            "Connection#open"
        ],
        "inherits": "Socket#open",
        "inherited": true,
        "overrides": "Connection#open"
    },
    {
        "comment": "/**\n * Close the socket.\n * @param {string} message - A message explaining why the socket is being closed.\n * @override\n */",
        "meta": {
            "range": [
                736,
                774
            ],
            "filename": "overridetag2.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003676",
                "name": "Socket.prototype.close",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "close",
        "longname": "Socket#close",
        "kind": "function",
        "description": "Close the socket.",
        "memberof": "Socket",
        "scope": "instance",
        "implements": [
            "Connection#close"
        ],
        "inherits": "Socket#close",
        "inherited": true,
        "overrides": "Connection#close",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A message explaining why the socket is being closed.",
                "name": "message"
            }
        ]
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                794,
                836
            ],
            "filename": "overridetag2.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003685",
                "name": "Socket.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "name": "read",
        "longname": "Socket#read",
        "kind": "function",
        "memberof": "Socket",
        "scope": "instance",
        "description": "Read the specified number of bytes from the connection.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "The bytes that were read."
            }
        ],
        "implements": [
            "Connection#read"
        ],
        "inherits": "Socket#read",
        "inherited": true,
        "overrides": "Connection#read",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of bytes to read.",
                "name": "bytes"
            }
        ]
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                573,
                610
            ],
            "filename": "overridetag.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003603",
                "name": "Socket.prototype.open",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "name": "open",
        "longname": "EncryptedSocket#open",
        "kind": "function",
        "memberof": "EncryptedSocket",
        "scope": "instance",
        "ignore": true,
        "implements": [
            "Socket#open"
        ],
        "description": "Open the connection.",
        "inherits": "Socket#open",
        "inherited": true,
        "overrides": "Connection#open"
    },
    {
        "comment": "/** @override */",
        "meta": {
            "range": [
                795,
                837
            ],
            "filename": "overridetag.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100003621",
                "name": "Socket.prototype.read",
                "type": "FunctionExpression",
                "paramnames": [
                    "bytes"
                ]
            }
        },
        "name": "read",
        "longname": "EncryptedSocket#read",
        "kind": "function",
        "memberof": "EncryptedSocket",
        "scope": "instance",
        "ignore": true,
        "implements": [
            "Socket#read"
        ],
        "description": "Read the specified number of bytes from the connection.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "The bytes that were read."
            }
        ],
        "inherits": "Socket#read",
        "inherited": true,
        "overrides": "Connection#read",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of bytes to read.",
                "name": "bytes"
            }
        ]
    },
    {
        "comment": "/**\n    Remove whitespace from around a string.\n    @param {string} str\n */",
        "meta": {
            "range": [
                156,
                179
            ],
            "filename": "borrowstag.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000946",
                "name": "trstr",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            }
        },
        "description": "Remove whitespace from around a string.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "str"
            }
        ],
        "name": "trim",
        "longname": "util.trim",
        "kind": "function",
        "scope": "static",
        "memberof": "util"
    },
    {
        "comment": "/**\n * Remove whitespace from around a string.\n * @param {string} str\n */",
        "meta": {
            "range": [
                89,
                111
            ],
            "filename": "borrowstag3.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000974",
                "name": "trstr",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            }
        },
        "description": "Remove whitespace from around a string.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "str"
            }
        ],
        "name": "trim",
        "longname": "util.trim",
        "kind": "function",
        "scope": "static",
        "memberof": "util"
    },
    {
        "comment": "/**\n    Remove whitespace from the right side of a string.\n    @param {string} str\n */",
        "meta": {
            "range": [
                233,
                256
            ],
            "filename": "borrowstag2.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000966",
                "name": "rtrim",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            }
        },
        "description": "Remove whitespace from the right side of a string.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "str"
            }
        ],
        "name": "rtrim",
        "longname": "str.rtrim",
        "kind": "function",
        "scope": "static",
        "memberof": "str"
    },
    {
        "comment": "/**\n    Remove whitespace from the right side of a string.\n    @param {string} str\n */",
        "meta": {
            "range": [
                233,
                256
            ],
            "filename": "borrowstag2.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000966",
                "name": "rtrim",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            }
        },
        "description": "Remove whitespace from the right side of a string.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "str"
            }
        ],
        "name": "rtrim",
        "longname": "util.rtrim",
        "kind": "function",
        "scope": "static",
        "memberof": "util"
    },
    {
        "comment": "/**\n    Remove whitespace from around a string.\n    @param {string} str\n */",
        "meta": {
            "range": [
                156,
                179
            ],
            "filename": "borrowstag.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000946",
                "name": "trstr",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            }
        },
        "description": "Remove whitespace from around a string.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "str"
            }
        ],
        "name": "trim string",
        "longname": "util.trim string",
        "kind": "function",
        "scope": "static",
        "memberof": "util"
    },
    {
        "comment": "/**\n * Remove whitespace from around a string.\n * @param {string} str\n */",
        "meta": {
            "range": [
                89,
                111
            ],
            "filename": "borrowstag3.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/kutsch/development/sphinx-autoapi/tests/jsexample/fixtures",
            "code": {
                "id": "astnode100000974",
                "name": "trstr",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            }
        },
        "description": "Remove whitespace from around a string.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "str"
            }
        ],
        "name": "trim string",
        "longname": "util.trim string",
        "kind": "function",
        "scope": "static",
        "memberof": "util"
    }
]
